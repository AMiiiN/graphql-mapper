{
   "queries": [
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary ) , dept_name FROM instructor GROUP BY dept_name",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )   LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor where name  =  'Mird'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT salary FROM instructor where name  =  'Mird'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT station_id from station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id where T1.station_id  =  1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id where T1.station_id  =  1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID WHERE T2.Role  =  \"Violin\"",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID   =   T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID   =   T3.Performance_ID WHERE T2.Role   =   \"Violin\"",
         "databaseID": "performance_attendance"
      },
      {
         "query": "select T1.name from member as T1 join member_attendance as T2 on T1.Member_id  =  T2.Member_id group by T2.Member_id order by count ( * )  desc limit 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "select T1.name from member as T1 join member_attendance as T2 on T1.Member_id  =  T2.Member_id group by T2.Member_id order by count ( * )  asc limit 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "select title from film where directed_by  =  \"Bill Schreiner\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day )  DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "select original_air_date from film",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS  =  'Third-rate ship of the line'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT rank FROM captain",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Rank FROM captain where class ! =  \"Third-rate ship of the line\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "select Name from technician where Team = 'CLE' or team = 'CWS'",
         "databaseID": "machine_repair"
      },
      {
         "query": "select Starting_Year from technician where Team = 'CLE' or team = 'CWS'",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "select max ( Starting_Year ) ,min ( Starting_Year )  from technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT classroom from teachers where lastname  =  \"ONDERSMA\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT firstname, lastname from teachers where classroom  =  108",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct firstname )  from teachers",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct firstname )  from teachers where classroom  =  108",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT max ( Milliseconds )  ,  min ( Milliseconds )  FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT name FROM TRACK where Milliseconds  =   ( select max ( Milliseconds )  from track ) ",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT composer FROM TRACK where Milliseconds  =   ( select max ( Milliseconds )  from track ) ",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT max(T2.resolution) ,  min(T2.resolution) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.duration LIKE \"3:%\"",
         "databaseID": "music_1"
      },
      {
         "query": "select * from song where song_name  =  \"Tumi robe nirobe\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max ( T2.resolution )  ,  min ( T2.resolution )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.duration LIKE \"3:%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT * FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id where file_size > 4",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT max ( capacity )  FROM classroom Where building  =  \"Lamberton\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT max ( capacity )  FROM classroom",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT sum ( room_number )  FROM classroom",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( capacity )  FROM classroom",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM classroom order by capacity limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM classroom WHERE capacity  =  120",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT gender_code ,  COUNT ( * )  FROM Guests GROUP BY gender_code ORDER BY COUNT ( * )  DESC",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT guest_first_name, guest_last_name FROM Guests where gender_code  =  \"Unknown\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT date_of_birth FROM Guests where gender_code  =  \"Unknown\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT date_of_birth FROM Guests where guest_first_name like '%M%' or guest_last_name like '%M%'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum(grant_amount) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type  =  T3.organisation_type WHERE T3.organisation_type_description  =  'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT sum ( grant_amount )  FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_start_date FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT t1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id   =   T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type   =   T3.organisation_type WHERE T3.organisation_type_description   =   'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name  FROM track WHERE year_opened  >  2000",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT seating FROM track WHERE year_opened  >  2000",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT distinct Studio FROM film",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT count ( * )  FROM film where studio  =  \"20th Century Fox\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM order_items",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM order_items where product_id  =  7",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM order_items where order_item_id  =  2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Major FROM student WHERE StuID  =  1008",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT sex FROM student WHERE StuID  =  1008",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Age FROM student WHERE StuID  =  1008",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT avg ( gross_in_dollar )  FROM film",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Title FROM film WHERE Director   =   \"Nicholas Meyer\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Title FROM film WHERE Director  =  \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film WHERE Title  =  \"48 Hrs\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film WHERE Title  =  \"Star Trek II: The Wrath of Khan\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT origin, destination, flno FROM Flight GROUP BY destination",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT destination, flno FROM Flight GROUP BY destination",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT destination, count ( * )  FROM Flight GROUP BY destination",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT destination, count ( * )  FROM Flight GROUP BY destination order by count ( * )  LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'Study Room'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dormid from dorm where dorm_name  =  \"Dorm-plex 2000\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT student_capacity from dorm where dorm_name  =  \"Dorm-plex 2000\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT gender from dorm where dorm_name  =  \"Dorm-plex 2000\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM  job_history AS T1 JOIN employees AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.salary  >=  12000",
         "databaseID": "hr_1"
      },
      {
         "query": "select distinct job_id from employees",
         "databaseID": "hr_1"
      },
      {
         "query": "select HIRE_DATE from employees",
         "databaseID": "hr_1"
      },
      {
         "query": "select distinct phone_number from employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T4.product_name  =  \"food\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T3.order_item_status  =  \"Cancel\" AND T4.product_name  =  \"food\" GROUP BY T1.customer_id HAVING count ( * )    > =    1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( T1.customer_name )  FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id WHERE T3.order_item_status  =  \"Cancel\" AND T4.product_name  =  \"food\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id ,  product_name FROM products WHERE product_price  >  900",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_price  <  600 OR product_price  >  900",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( price )  FROM products",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( price ) , manufacturer FROM products group by manufacturer",
         "databaseID": "manufactory_1"
      },
      {
         "query": "Select name from manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "Select name, headquarter from manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "select count ( distinct artistid )  from artist",
         "databaseID": "chinook_1"
      },
      {
         "query": "select Name from artist",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC",
         "databaseID": "game_injury"
      },
      {
         "query": "select count ( distinct home_team )  from game",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Player FROM injury_accident order by Number_of_matches desc limit 1",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name, document_code FROM documents EXCEPT SELECT t1.document_name, t1.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( * )  FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_type_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid WHERE T3.dorm_name   =   'Smith Hall'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT lname from student where fname  =  \"Tracy\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT city_code from student where fname  =  \"Tracy\" and lname  =  \"Kim\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT student_capacity from dorm where dorm_name  =  \"Smith Hall\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT max(stars) ,  min(stars) FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT max ( stars )  ,  min ( stars )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT mID ,  ratingDate FROM Rating where stars = 5",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT mID ,  ratingDate FROM Rating where stars = 2",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT ratingDate FROM Rating where ratingDate ! =  'NULL' order by ratingdate  limit 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT ratingDate FROM Rating order by ratingdate desc limit  1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID WHERE T2.Days_held  >  50",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Time FROM elimination",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T1.Time,T2.name FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T2.name, T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID WHERE T2.Days_held  >  50",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name from Customers where customer_code  =  401",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_address fROM Customers where customer_name  = 'Ahmed'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_address fROM Customers where customer_name  = 'Lukas'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_code fROM Customers where customer_name  = 'Lukas'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.decision   =   'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT T1.state ,  T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos  =  \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "select state, enr from college where cName not in  ( SELECT DISTINCT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.decision  =  \"yes\" ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( DISTINCT t3.characteristic_name )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( DISTINCT t3.characteristic_name )  FROM Products AS t1 JOIN Product_Characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN Characteristics AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"basil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price FROM Products WHERE product_name  =  \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t3.sex  =  \"M\"",
         "databaseID": "club_1"
      },
      {
         "query": "select ClubLocation from Club where ClubName  =  'Bootup Baltimore'",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( StuID ) from Student where Sex  =  'F'",
         "databaseID": "club_1"
      },
      {
         "query": "select Major from Student where Fname  =  'Tracy'",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT friend FROM PersonFriend WHERE name =  'Zach' AND YEAR  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT max ( year )  FROM PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name from personfriend where year  =   ( select max ( year )  FROM PersonFriend  ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend from personfriend where name  =  \"Zach\" and year  =  12",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT name FROM head WHERE head_id  =  1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT born_state FROM head where name  =  \"Tiger Woods\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT age  FROM head where name  =  \"Tiger Woods\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT *  FROM head order by age desc limit 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT count ( * )   FROM head where born_state  =  \"Alabama\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  FROM Employees where role_code  =  \"ED\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_name,gender_MFU FROM Employees where role_code  =  \"ED\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT sum ( T2.balance )  FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid where T1.name  =  \"Wang\"",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT Nationality FROM HOST WHERE Age  >  45 INTERSECT SELECT Nationality FROM HOST WHERE Age  <  35",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT distinct Nationality FROM HOST WHERE Age  >  45",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT distinct Nationality FROM HOST WHERE Age < 35",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT *  FROM employees WHERE commission_pct ! =  \"null\"",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )   FROM employees WHERE commission_pct ! =  \"null\"",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_id ,  AVG ( salary )  FROM employees WHERE commission_pct ! =  \"null\" GROUP BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT date_of_birth FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  from staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name from staff where first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT date_of_birth FROM Staff WHERE first_name  =  \"Janessa\" AND last_name  =  \"Sawayn\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author HAVING COUNT(DISTINCT T1.workshop_id)  >  1",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT Author FROM submission",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT distinct T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID   =   T2.Submission_ID",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID   =   T2.Submission_ID GROUP BY T2.Author HAVING COUNT ( DISTINCT T1.workshop_id )   >  1",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price from products where product_name  =  \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT characteristic_id from product_characteristics group by characteristic_id order by count ( * )  desc limit 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_category_code from Products group by product_category_code order by count ( * )  limit 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT max(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.Area  =  \"Central Coast\" AND T2.year  <  2005",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT county FROM APPELLATIONS WHERE appelation  =  'Alexander Valley'",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT max ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.Area   =   \"Central Coast\" AND T2.year  <  2005",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT county FROM APPELLATIONS WHERE appelation  =  'Amador County'",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Length FROM roller_coaster WHERE Park  =  \"Kemah Boardwalk\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Status FROM roller_coaster WHERE Park  =  \"Happy Valley\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Country_ID FROM roller_coaster WHERE Name  =  \"Hades 360\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' GROUP BY headquarters HAVING count(*)  >=  2",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry   =   'Banking' GROUP BY headquarters HAVING count ( * )    > =    2",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company from company where main_industry  =  \"Banking\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company,headquarters from company where main_industry  =  \"Banking\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM orders",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM Customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_piad  =  (SELECT min(amount_piad) FROM claim_headers)",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT min ( amount_piad )  FROM claim_headers ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT min ( amount_piad )  FROM claim_headers ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t3.Customer_Details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT max ( amount_piad )  FROM claim_headers ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id   =   t2.policy_id JOIN customers AS t3 ON t2.customer_id   =   t3.customer_id WHERE t1.amount_piad   =    ( SELECT max ( amount_piad )  FROM claim_headers ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >   ( SELECT min ( Price )  FROM wine WHERE Winery   =   \"John Anthony\" )  and  Price>300",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( * )  from cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT avg ( capacity )  from cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( * )  from cinema where capacity >   ( select avg ( capacity )  from cinema ) ",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT name, location from cinema where capacity >   ( select avg ( capacity )  from cinema ) ",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id  =  T2.master_customer_id WHERE T3.cmi_details != 'Schmidt ,  Kertzmann and Lubowitz'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT count ( master_customer_id )  FROM Customer_Master_Index",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT master_customer_id FROM  Customer_Master_Index where cmi_details ! =   ( 'Schmidt, Kertzmann and Lubowitz' ) ",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT t1.master_customer_id,cmi_cross_ref_id FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details not in  ( 'Schmidt, Kertzmann and Lubowitz' ) ",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT t1.master_customer_id,cmi_cross_ref_id,source_system_code  FROM  Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details ! =   ( 'Schmidt, Kertzmann and Lubowitz' ) ",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id   =   T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id   =   T2.master_customer_id WHERE T3.cmi_details ! =  'Schmidt ,  Kertzmann and Lubowitz'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" AND pages_per_minute_color  <  5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product FROM product WHERE max_page_size   =   \"A4\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product FROM product WHERE pages_per_minute_color  <  5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product FROM product WHERE max_page_size   =   \"A4\" AND pages_per_minute_color  <  5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product,interface FROM product WHERE max_page_size   =   \"A4\" AND pages_per_minute_color  <  5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product,dimensions FROM product WHERE max_page_size   =   \"A4\" AND pages_per_minute_color  <  5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product FROM product WHERE pages_per_minute_color  > 5",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select * from Lots",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT lot_id FROM Lots EXCEPT SELECT T1.lot_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id   =   T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id   =   T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"",
         "databaseID": "election"
      },
      {
         "query": "select Delegate from election where Committee = 'Appropriations'",
         "databaseID": "election"
      },
      {
         "query": "select T1.County_name from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'",
         "databaseID": "election"
      },
      {
         "query": "select District from election where Committee = 'Appropriations'",
         "databaseID": "election"
      },
      {
         "query": "select T1.Population from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "select T1.first_name, T1.last_name from customers as T1 join addresses as T2 on T2.address_id  =   T1.customer_address_id where T2.city  =   ( SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count(*)  >=  5",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid WHERE T2.distance  >  5000",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid WHERE T2.distance  >  5000 GROUP BY T1.aid ORDER BY count ( * )    > =    5",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT t1.eid FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid ORDER BY t2.distance desc limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "select cName from Tryout where pPos  =  'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)",
         "databaseID": "phone_market"
      },
      {
         "query": "select count ( distinct market_id )  from phone_market",
         "databaseID": "phone_market"
      },
      {
         "query": "select count ( distinct name )  from phone",
         "databaseID": "phone_market"
      },
      {
         "query": "select T1.name from phone as T1 join phone_market as T2 on T1.phone_id  =  T2.phone_id group by T1.phone_id order by count ( * )  desc limit 1",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT count ( Name )  FROM phone WHERE Phone_id NOT IN  ( SELECT Phone_ID FROM phone_market ) ",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT Name FROM phone WHERE Phone_id NOT IN  ( SELECT Phone_ID FROM phone_market ) ",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select count ( * )  from Manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select Name  from Manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT founder FROM manufacturers WHERE Founder LIKE 'S%'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Headquarter FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount  <  9",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name FROM endowment",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT count ( distinct donator_name )  FROM endowment",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance from savings where custid  =  1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T1.balance + T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = \"Nanjing ( Jiangsu )\" AND T3.competition = \"1994 FIFA World Cup qualification\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city JOIN MATCH AS T3 ON T2.match_id  =  T3.match_id WHERE T1.city  =  \"Hangzhou  (  Zhejiang  ) \" AND T3.competition  =  \"1994 FIFA World Cup qualification\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city JOIN MATCH AS T3 ON T2.match_id  =  T3.match_id WHERE T1.city  =  \"Nanjing  (  Jiangsu  ) \" AND T3.competition  =  \"1994 FIFA World Cup qualification\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT GDP FROM city WHERE city  =  \"Shanghai\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT name FROM building",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM building AS T1 JOIN institution AS T2 ON T1.building_id   =   T2.building_id GROUP BY T1.building_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Name FROM building ORDER BY Height_feet DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * from course",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_lname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.supplier_name ,  T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id  =  T2.supplier_id JOIN addresses AS T3 ON T2.address_id  =  T3.address_id ORDER BY T3.address_details",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.supplier_name FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id ORDER BY T3.address_details",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id ORDER BY T3.address_details",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id where T1.supplier_name  =  'Tesco'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id   =   T2.supplier_id JOIN addresses AS T3 ON T2.address_id   =   T3.address_id where T1.supplier_name  =  'Lidl'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT channel_code ,  contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date  =  (SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY (active_to_date - active_from_date) DESC LIMIT 1)",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select active_from_date from customer_contact_channels",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select active_to_date from customer_contact_channels",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select * from customer_contact_channels order by active_to_date limit 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.name ,  T1.long ,  avg(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id GROUP BY T2.start_station_id",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT dock_count FROM station WHERE name  =  \"San Jose Diridon Caltrain Station\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT bike_id FROM trip WHERE zip_code  =  94041",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT sum ( dock_count )  FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.name ,  T1.long ,  avg ( T2.duration )  FROM station AS T1 JOIN trip AS T2 ON T1.id   =   T2.start_station_id GROUP BY T1.name",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989",
         "databaseID": "culture_company"
      },
      {
         "query": "select Book_Title from book_club where Publisher = 'Alyson'",
         "databaseID": "culture_company"
      },
      {
         "query": "select Book_Title,Year,Category from book_club where Publisher = 'Alyson'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Davis\" AND t3.lname  =  \"Steven\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  from club",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT clubId, count ( StuId )  from Member_of_club group by clubId",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T1.clubId from  Member_of_club as T1 join Student as T2 on T1.stuid  =  T2.stuid where T2.lname  =  'Davis' and T2.fname  =  'Steven'",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT dimensions FROM product WHERE product  =  \"Plustek MobileOffice D28 Corporate\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT pages_per_minute_color FROM product WHERE product  =  \"Xerox Travel Scanner 100\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT max_page_size FROM product WHERE product  =  \"Plustek MobileOffice D28 Corporate\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT dpi FROM product WHERE product  =  \"Fujitsu fi-6130 A4 Series Scanner\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT product,pages_per_minute_color FROM product order by pages_per_minute_color desc limit 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.id ,  T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id GROUP BY T1.id HAVING count ( * )    > =    2",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT COUNT ( DISTINCT T2.enzyme_id )  FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE name  =  \"Aripiprazole\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT COUNT ( DISTINCT T2.enzyme_id )  FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE name  =  \"Asenapine\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( t2.f1 )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Mary\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( t2.f1 )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Susan\" or T1.name   =   \"Mary\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT EmployeeID FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid  =  T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "select name from nurse order by name",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT t1.product_name ,  t1.typical_buying_price ,  t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"yellow\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT color_description FROM ref_colors",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT color_code, product_name FROM products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price, product_name FROM products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT distinct fault_log_entry_id FROM Fault_Log",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT fault_log_entry_id, count ( * )  FROM Fault_Log_Parts GROUP BY fault_log_entry_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * ) , *,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where t1.fault_log_entry_id  =  1 GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.guest_first_name ,  T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T1.booking_status_code  =  \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.guest_first_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T1.booking_status_code   =   \"Provisional\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music' ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT composer FROM tracks WHERE name  =  \"For Those About To Rock  ( We Salute You ) \"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT milliseconds FROM tracks WHERE name  =  \"For Those About To Rock  ( We Salute You ) \"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT composer FROM tracks WHERE name  =  \"Fast As a Shark\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( distinct player_id )  from player",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_year from player where \nplayer_id = 'aardsda01'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T2.player_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT category FROM book_club WHERE YEAR  >  1989 GROUP BY category HAVING count(*)  >=  2",
         "databaseID": "culture_company"
      },
      {
         "query": "select count ( * ) from book_club where Category = 'Gay SF/F' and year>'1989'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Blanche\" AND T2.customer_last_name  =  \"Huels\" AND T1.card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.card_type_code   =   \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_first_name, T2.customer_last_name, count ( * )  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.card_type_code   =   \"Credit\" group by T1.customer_id",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T2.customer_first_name   =   \"Blanche\" AND T2.customer_last_name   =   \"Huels\" AND T1.card_type_code   =   \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT max(T1.wins) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT team_id FROM team ORDER BY rank ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT max ( T1.wins )  FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT year FROM postseason WHERE wins = losses",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games where gameid  =  1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games where gameid  =  1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM video_games where gtype  =  \"Role-playing game\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.Hardware_Model_name ,  T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type  =  \"Graphics\";",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  from screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  from phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Company_name from phone WHERE Hardware_Model_name  =  \"XPERIA T, XPERIA J\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT name FROM swimmer WHERE id NOT IN (SELECT swimmer_id FROM record)",
         "databaseID": "swimming"
      },
      {
         "query": "select count ( distinct Swimmer_ID )  from record",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( * )  FROM swimmer WHERE id NOT IN  ( SELECT swimmer_id FROM record ) ",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM swimmer WHERE id NOT IN  ( SELECT swimmer_id FROM record ) ",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN  ( SELECT Winning_Aircraft FROM MATCH ) ",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT winning_pilot FROM match group by winning_pilot order by count ( * )  desc limit 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT winning_aircraft FROM match group by winning_aircraft order by count ( * )  desc limit 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T3.course_name ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T3.course_name ,  count ( * )   FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id GROUP BY T2.course_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.student_id  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id where T3.course_name  =  'statistics'",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id JOIN courses AS T3 ON T2.course_id  =  T3.course_id where T3.course_name  =  'statistics'",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT TYPE FROM ship WHERE flag  =  'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag  =  'Malta'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT ship_id FROM ship WHERE name  =  \"HM Cutter Avenger\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Flag FROM ship WHERE name  =  \"HMS Manxman\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Built_year FROM ship WHERE name  =  \"HMS Gorgon\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT TYPE FROM ship WHERE flag   =   'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag   =   'Malta'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( DISTINCT Party )  FROM party",
         "databaseID": "election"
      },
      {
         "query": "SELECT Party FROM party WHERE Governor = \"Peter Vallone\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( * )  FROM election",
         "databaseID": "election"
      },
      {
         "query": "SELECT Party FROM party WHERE Governor =  \"Carl McCall\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T1.Committee   =   \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T1.Committee   =   \"Economic Matters\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT DISTINCT artist_name FROM artist WHERE country  =  \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country   =   \"Bangladesh\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT DISTINCT artist_name FROM artist WHERE country   =   \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7",
         "databaseID": "music_1"
      },
      {
         "query": "select artist_name, gender from artist where artist_name in  ( SELECT DISTINCT artist_name FROM artist WHERE country   =   \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "select preferred_genre from artist where artist_name in  ( SELECT DISTINCT artist_name FROM artist WHERE country   =   \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "select song_name from song where artist_name in  ( SELECT DISTINCT artist_name FROM artist WHERE country   =   \"Bangladesh\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  7 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( * )  from authors",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT country from Inst where name  =  \"University of Oxford\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT title from Papers where paperID  =  200",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT circuitid ,  LOCATION FROM circuits WHERE country = \"France\" OR country = \"Belgium\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM circuits WHERE country  =  \"France\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT circuitId  FROM circuits WHERE country  =  \"France\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT circuitId, location  FROM circuits WHERE country  =  \"France\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id HAVING max(t1.precipitation)  >  50",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   >  50",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.id ,  t2.network_name, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   >  50",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation )   <  10",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT min ( precipitation )  FROM weekly_weather",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.precipitation  =  10",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.id,t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.precipitation  =  10",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t1.high_temperature,t1.wind_speed_mph FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id where t1.day_of_week  = 'Friday' and T2.network_name = 'Amersham'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select apt_id from Apartments where bedroom_count > 4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select T2.facility_code from Apartments as T1 JOIN Apartment_Facilities as T2 ON T1.apt_id  =  T2.apt_id WHERE T1.bedroom_count > 4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select building_id,apt_type_code,apt_number from Apartments where bedroom_count > 4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name FROM races",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name FROM races WHERE TIME > \"12:00:00\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name FROM races WHERE TIME < \"09:00:00\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id,title FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.title,T2.prereq_id FROM course as T1 join prereq as T2 where T1.course_id = T2.course_id",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id  =  T2.head_id WHERE T2.temporary_acting  =  'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT count ( * )  FROM management WHERE temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.name FROM management AS T2 JOIN head AS T1 ON T1.head_id   =   T2.head_id WHERE T2.temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id   =   T2.head_id WHERE T2.temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.customer_id ,  T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT  ( T1.customer_id )   FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Capacity FROM cinema WHERE Location  =  \"County Wicklow\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT AVG ( Capacity )  FROM cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count ( * )  > 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( * )  FROM papers",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT paperID  FROM papers",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( title )  FROM papers",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT title FROM papers",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pPos FROM Tryout",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName from College",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( enr )  from College",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT state from College",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'mid'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School FROM university WHERE affiliation ! =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School,Founded FROM university WHERE affiliation ! =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School FROM university",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School,Affiliation FROM university",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN (SELECT Representative_ID FROM election)",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Name FROM representative",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Name FROM representative WHERE Representative_ID NOT IN  ( SELECT Representative_ID FROM election ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Name, party FROM representative WHERE Representative_ID NOT IN  ( SELECT Representative_ID FROM election ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT document_description  FROM Document_Types WHERE document_type_code  =  \"APP\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( DISTINCT T2.staff_id )  FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id   =   T2.staff_id WHERE T1.lesson_status_code  =  \"Cancelled\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id   =   T2.staff_id WHERE T1.lesson_status_code  =  \"Cancelled\" GROUP BY T2.first_name",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "SELECT count ( * )  FROM manager WHERE Country  =  'Scotland'",
         "databaseID": "railway"
      },
      {
         "query": "SELECT count ( * ) , Country FROM manager WHERE Country ! =  'Scotland' group by Country",
         "databaseID": "railway"
      },
      {
         "query": "SELECT count ( * )  FROM manager WHERE Country  =  'United States' and Level  =  5",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Name FROM manager WHERE Country  =  'United States' and Level  =  5",
         "databaseID": "railway"
      },
      {
         "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM mailshot_customers)",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT payment_method FROM customers WHERE customer_id  = 1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT customer_address FROM customers WHERE customer_name  = \"Wendell\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg ( T2.stu_gpa )  FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg ( T2.stu_gpa )  FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code WHERE T3.crs_code   =   'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.enroll_grade FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T1.class_code   =   T3.class_code WHERE T3.crs_code   =   'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count(*) ,  sex FROM employee WHERE salary  <  50000 GROUP BY sex",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT count ( * )  FROM employee",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT count ( * )  FROM employee WHERE Sex  =  \"M\"",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT count ( * )  FROM employee WHERE salary < 50000",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT count ( * )  FROM employee WHERE salary < 50000 and Sex  =  \"M\"",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE YEAR  >  1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count ( * )  FROM campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg(mean_humidity)  <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count(*)  >=  100",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT zip_code FROM weather GROUP BY zip_code HAVING avg ( mean_humidity )   <  70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count ( * )    > =    200",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT end_station_name FROM trip GROUP BY zip_code HAVING count ( * )    > =    100 order by count ( * )  asc limit 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT  ( mean_humidity )  from weather where zip_code  =  94107",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT country FROM airport GROUP BY country HAVING count(*)  >  2",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT name FROM airport",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT COUNT ( DISTINCT name )  FROM airport",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT country FROM Airport WHERE name  =  \"Akureyri Airport\"",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT City from airport where name  =  \"Schiphol Airport\"",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.address_id FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.student_id ,  T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental )  DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Firefox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Fasterfox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'CACHEbox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Fasterfox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * ) ,T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id   =   T2.engineer_id GROUP BY T1.engineer_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name ,count ( * ) FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id   =   T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * )  limit 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
         "databaseID": "sports_competition"
      },
      {
         "query": "select name from club",
         "databaseID": "sports_competition"
      },
      {
         "query": "select name from club where Club_ID = '3'",
         "databaseID": "sports_competition"
      },
      {
         "query": "select Region from club where name = 'BK Slide'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name FROM CLub WHERE Club_ID NOT IN  ( SELECT Club_ID FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name HAVING COUNT(*)  >  1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT COUNT ( * )  FROM journalist",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT COUNT ( * )  FROM journalist WHERE years_working > 5",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name FROM journalist ORDER BY Years_working DESC LIMIT 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartment_Facilities",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT * FROM Apartment_Facilities",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments WHERE apt_id IN  ( SELECT apt_id FROM Apartment_Facilities ) ",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments WHERE apt_id NOT IN  ( SELECT apt_id FROM Apartment_Facilities ) ",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008",
         "databaseID": "device"
      },
      {
         "query": "select count ( Location )  from shop where Open_Year = '2008'",
         "databaseID": "device"
      },
      {
         "query": "select count ( Location )  from shop where Open_Year>'2012'",
         "databaseID": "device"
      },
      {
         "query": "select Location from shop where Open_Year>'2012'",
         "databaseID": "device"
      },
      {
         "query": "SELECT sum(enrollment) ,  min(enrollment) FROM university",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School, Location FROM university WHERE enrollment > 15000",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Primary_conference FROM university WHERE School in  ( SELECT School FROM university WHERE enrollment > 15000 ) ",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition GROUP BY country ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT year FROM competition GROUP BY year ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT competition_type FROM competition GROUP BY competition_type ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Nameless ,  Painless\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE t3.title   =   \"Nameless ,  Painless\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "select organisation_type from Organisation_Types",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "select count ( grant_id )  from Grants where organisation_id  =  10",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Pass\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   \"Pass\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   \"Pass\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( T1.student_id )  FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   \"Pass\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT Name FROM city ORDER BY White DESC LIMIT 5",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT count ( * )  FROM city",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM city ORDER BY Hispanic DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM city ORDER BY Black DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM city ORDER BY white DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT ( * )   >  1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT name FROM musical GROUP BY Nominee HAVING COUNT ( * )   > 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT year FROM musical GROUP BY Nominee HAVING COUNT ( * )   > 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT distinct nominee FROM musical where year  =  1986 and nominee ! =  \"Bob Fosse\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT name FROM musical where year  =  1986 and nominee  =  \"Cleavant Derricks\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT name, category FROM musical where year  =  1986 and nominee  =  \"Cleavant Derricks\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( * )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT T3.name  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.director   =   T3.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card  =  'Black'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT avg ( level_of_membership )  FROM member",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count ( * )  FROM member WHERE membership_card  =  \"Black\"",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT avg ( time_of_purchase )  FROM member WHERE membership_card  =  \"White\"",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT name FROM member WHERE membership_card  =  \"White\"",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.part_name, count ( * )  FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id where T1.part_name  =  \"middle\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT fault_short_name from Part_Faults WHERE part_id in  ( SELECT T2.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name ORDER BY count ( * )  ASC LIMIT 1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T3.id ,  count(*) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id GROUP BY T3.id",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  FROM airport",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  FROM operate_company",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T3.id ,  count ( * )  FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id JOIN airport AS T3 ON T2.airport_id   =   T3.id GROUP BY T3.id",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  from airport where country  =  \"United States\"",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( distinct T1.id )  FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id JOIN airport AS T3 ON T2.airport_id  =  T3.id where T3.country  =  \"United States\"",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( DISTINCT Policy_Type_Code )  FROM Customer_Policies",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( * )  FROM Customer_Policies  WHERE Policy_type_code  =  \"Life\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( * ) , Policy_type_code FROM Customer_Policies  GROUP BY  Policy_type_code having policy_type_code  =  \"Life\" or policy_type_code  =  \"Car\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )   LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Camylle\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Kaitlin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name from staff where first_name  =  'Kaitlin'",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name from staff where first_name  =  'Janessa'",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Janessa\" AND T2.last_name  =  \"Sawayn\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT Order_Date FROM Customer_Orders where Order_ID = 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT Customer_ID FROM Customer_Orders where Order_ID = 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT Planned_Delivery_Date FROM Customer_Orders where Customer_ID = 516",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT branch_id FROM membership_register_branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT membership_amount FROM branch where Name  =  'Popert'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT city FROM branch where name  =  'Alexandre'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  name  from  playlists",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  \"Movies\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  \"Movies\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.teacher_id ,  T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id WHERE T1.detention_type_code  =  \"AFTER\" GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select teacher_id from detention where detention_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select datetime_detention_end from detention where detention_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.middle_name FROM Teachers AS T1 WHERE T1.teacher_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM event where year  =  2018",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM event where year  > =   2014",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM event ORDER BY YEAR DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2000",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T2.country  =  \"Spain\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT distinct T2.country FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T1.name  =  'European Grand Prix'",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.year FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T2.country  =  \"Spain\" order by T1.year desc limit 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= \"2009-01-01\" AND T2.date_order_placed <= \"2010-01-01\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date_order_placed  > =   \"2009-01-01\" AND T2.date_order_placed < =  \"2010-01-01\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( T1.customer_name )  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.date_order_placed <  ( SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_name  = 'George' order by T2.date_order_placed LIMIT 1 ) ",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.order_status  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_name  = 'George'",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( total_amount_purchased )  ,  avg ( total_value_purchased )  FROM Product_Suppliers WHERE supplier_id   =    ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( total_amount_purchased )  , avg ( total_value_purchased )  FROM Product_Suppliers WHERE supplier_id  =   ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  LIMIT 1 ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT distinct supplier_id FROM Product_Suppliers WHERE supplier_id  =   ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * )  LIMIT 1 ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT sum ( total_value_purchased )  from Product_Suppliers where supplier_id = 3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_supplied_to  from Product_Suppliers where supplier_id = 3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor != \"Rachel Elnaugh\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T1.Investor FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  \"Leonardo Binchi\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT sum ( T1.Money_Requested )  FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  \"Francesco Postiglione\" or  T2.Name = \"Leonardo Binchi\" or  T2.Name =  \"Fabrizio Buonocore\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Name =  \"Fabrizio Buonocore\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Investor! =  \"Rachel Elnaugh\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased )  > 50000 OR avg ( total_amount_purchased )  < 30000",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased )  < 30000",
         "databaseID": "department_store"
      },
      {
         "query": "select product_id, avg ( total_amount_purchased )  from Product_Suppliers group by product_id",
         "databaseID": "department_store"
      },
      {
         "query": "select date_supplied_to from Product_Suppliers order by date_supplied_to desc limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "select city from city order by city asc",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Feb  >  T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name from journalist",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID ORDER BY T2.Event_Attendance ASC",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name ,  T1.Work_Type FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name,years_working from journalist",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT COUNT ( Author_or_Editor )  from book_club",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT COUNT ( * )  from culture_company",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id   =   T2.book_club_id WHERE T2.publisher   =   'Alyson'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT city FROM park GROUP BY city HAVING count(*) BETWEEN 2 AND 4;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT city FROM park GROUP BY city HAVING count ( * )  BETWEEN 2 AND 4",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM park where city  =  \"Atlanta\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT city FROM park GROUP BY city HAVING count ( * )   =  4",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT city FROM park GROUP BY city HAVING count ( * )   =  3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT city FROM park GROUP BY city HAVING count ( * )   =  2",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT emp_fname FROM employee WHERE emp_jobcode  =  'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM employee",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_DOB FROM employee WHERE EMP_NUM  =  101",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM CLASS",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT SCHOOL_CODE from DEPARTMENT where EMP_NUM = 114",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT SCHOOL_CODE from DEPARTMENT where DEPT_NAME = 'Fine Arts'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DEPT_ADDRESS from DEPARTMENT where DEPT_NAME = 'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT PROF_EXTENSION  from PROFESSOR where DEPT_CODE = 'HIST'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t3.characteristic_name ,  t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_id from Products where product_name = 'cumin'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_category_code from Products where product_id = '1'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select typical_selling_price from Products where product_id = '1'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM student WHERE stu_gpa  < 3",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM student WHERE stu_gpa > 3",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code  =  T2.outcome_code JOIN Projects AS T3 ON T2.project_id  =  T3.project_id WHERE T3.project_details  =  'sint'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code   =   T2.outcome_code JOIN Projects AS T3 ON T2.project_id   =   T3.project_id WHERE T3.project_details   =   'sint'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.project_id, T3.project_details FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code   =   T2.outcome_code JOIN Projects AS T3 ON T2.project_id   =   T3.project_id WHERE T2.outcome_code   =   'Patent'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT avg ( t3.age )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Tennis Club\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.Fname, t3.Lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Tennis Club\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.city_code FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Tennis Club\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t2.Position FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Tennis Club\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T1.pName ,  T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName  FROM player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName  FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName ,T2.cName  FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Location from festival_detail where Festival_Name  =  'Flower Awards'",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Festival_Name from festival_detail order by Num_of_Audience limit 1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Name from artwork where Artwork_ID  =  2",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Google\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid  WHERE t1.lname   =   \"Gibbons\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Northeastern University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT  authID  FROM Authors  where fname = \"Ralf\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT t1.fname ,  t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Google\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
         "databaseID": "hospital_1"
      },
      {
         "query": "select Name from Department",
         "databaseID": "hospital_1"
      },
      {
         "query": "select Head from Department where Name = 'General Medicine'",
         "databaseID": "hospital_1"
      },
      {
         "query": "select Name from Department where Head>4",
         "databaseID": "hospital_1"
      },
      {
         "query": "select Name from Department order by Head desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT(*) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId GROUP BY T2.AlbumID",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AlbumID, ArtistId FROM ALBUM where Title  =  'Balls to the Wall'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId   =   T2.AlbumId where t1.title  =  'For Those About To Rock We Salute You'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId   =   T2.AlbumId where t1.title  =  'Balls to the Wall'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Title ,  T2.AlbumID ,  COUNT ( * )  FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId   =   T2.AlbumId GROUP BY T2.AlbumID",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM customers where customer_id  =  15",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.name ,  T1.city ,  T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T2.src_apid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT  T1.city  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT avg(RAM_MiB) FROM chip_model WHERE model_name NOT IN (SELECT chip_model FROM phone)",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT avg ( RAM_MiB )  FROM chip_model WHERE model_name NOT IN  ( SELECT chip_model FROM phone ) ",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  FROM chip_model WHERE model_name NOT IN  ( SELECT chip_model FROM phone ) ",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Model_name,RAM_MiB FROM chip_model WHERE model_name NOT IN  ( SELECT chip_model FROM phone ) ",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  FROM chip_model WHERE model_name IN  ( SELECT chip_model FROM phone )  AND RAM_MiB  > =   64",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Accounts",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_first_name FROM Customers",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_address FROM Customers WHERE customer_first_name  =  \"Aniyah\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID WHERE T1.Total_Points  >  57.5",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT DISTINCT Hometown FROM people",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID WHERE T1.Total_Points  >  57.5",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT name FROM people WHERE Hometown  =  \"Santo Domingo\" or Hometown  =  \"Bonao\"",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT building FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "select * from Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT building FROM Faculty WHERE rank   =   \"Professor\" GROUP BY building HAVING count ( * )    > =    10",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT founder FROM manufacturers WHERE name LIKE 'S%'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT founder FROM manufacturers WHERE name = 'Sony'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Headquarter FROM manufacturers WHERE name = 'Sony'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Revenue FROM manufacturers WHERE name = 'Sony'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId   =   T2.AlbumId JOIN Genre AS T3 ON T2.GenreID   =   T3.GenreID WHERE T3.Name   =   'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId   =   T2.AlbumId JOIN Genre AS T3 ON T2.GenreID   =   T3.GenreID WHERE T3.Name   =   'Rock'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Rock'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT distinct  T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Metal'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( distinct  T1.Title  ) FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId  =  T2.AlbumId JOIN Genre AS T3 ON T2.GenreID  =  T3.GenreID WHERE T3.Name  =  'Metal'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE county   =   \"Los Angeles\" AND YEAR  >  1950",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses WHERE county   =   \"Los Angeles\" AND YEAR  <  1950",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT year FROM campuses WHERE county   =   \"Los Angeles\" AND YEAR  <  1950",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name FROM circuits WHERE country  =  \"Spain\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T1.year > 2017",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid  =  T2.circuitid WHERE T2.country  =  \"Spain\" AND T1.year > 2017",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_id FROM staff_department_assignments where job_title_code  =  \"Department Manager\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * )  LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT * FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T2.Weeks_on_Top  >  2",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T2.Weeks_on_Top  >  2",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )    > =    2",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.Age FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )    > =    2",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T2.work_type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID where T1.name  =  \"Kamila Porczyk\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID order by T1.age asc limit 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT(*)  >  2",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT distinct ( Country )  FROM member",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country order by COUNT ( * )  desc limit 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country HAVING COUNT ( * )   >  2",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( T2.student_id )  FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >  ( SELECT AVG (salary) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%')",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  salary FROM employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,   salary FROM employees WHERE salary  >   (  SELECT AVG  ( salary )  FROM employees ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >   (  SELECT AVG  ( salary )  FROM employees  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  first_name ,  last_name ,  salary FROM employees WHERE salary  >   (  SELECT AVG  ( salary )  FROM employees  )  AND department_id IN  (  SELECT department_id FROM employees WHERE first_name LIKE '%J%' ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE card_type_code   =   \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id ,  customer_first_name ,customer_last_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name,T2.customer_last_name  FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE card_type_code   =   \"Debit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id ,  card_number FROM Customers_cards",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT title FROM film WHERE Director   =   \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT studio FROM film WHERE Director   =   \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT studio FROM film WHERE Director  ! =   \"Walter Hill\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT * FROM Rooms WHERE bedtype   =   'King'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT distinct decor FROM Rooms WHERE bedtype   =   'King'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName, decor FROM Rooms WHERE bedtype   =   'King'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype   =   'King'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype   =   'King' order by basePrice",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T1.principal_activities  =  'Catering services'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id WHERE T1.principal_activities   =   'Cargo'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id WHERE T1.principal_activities   =   'Catering services'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  from student",
         "databaseID": "activity_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in ) ",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id IN  (  SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01'  ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id IN (  SELECT customer_id FROM rental WHERE rental_date  <  '2005-08-23 02:06:01'  )  AND active  =  1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT TYPE ,  count(*) ,  sum(enrollment) FROM institution GROUP BY TYPE",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE , count ( * )  FROM institution GROUP BY TYPE",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE , count ( * )  , sum ( enrollment )  FROM institution GROUP BY TYPE",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT avg(salary) ,  max(salary) FROM Employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( salary )  ,  max ( salary )  FROM Employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee order by salary desc  limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT eid , salary  FROM Employee  where  name = \"George Wright\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name , eid   FROM Employee  order by  salary limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT DISTINCT artist_name FROM song WHERE languages  =  \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating  >  8",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT DISTINCT artist_name FROM song WHERE languages   =   \"english\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT DISTINCT artist_name FROM song WHERE languages   =   \"english\" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating = 10",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT name FROM camera_lens WHERE name LIKE \"%Digital%\"",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT  count ( * )   from  camera_lens",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT name ,id FROM camera_lens WHERE name LIKE \"%Digital%\"",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name, friend from personFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.friend, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age > 40 )  INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age < 30 ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age > 40 )  union SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age < 30 ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT LOCATION FROM bridge WHERE name  =  'Kolob Arch' OR name  =  'Rainbow Bridge'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT LOCATION FROM bridge WHERE name   =   'Kolob Arch' OR name   =   'Rainbow Bridge'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT length_meters FROM bridge WHERE name   =   'Kolob Arch'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM bridge WHERE length_feet  =   ( select max ( length_feet )  from bridge ) ",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT location FROM bridge WHERE name  =  \"Xian Ren Qiao  ( Fairy Bridge ) \"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2002 ORDER BY t3.degrees DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T3.year FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year ORDER BY t3.degrees DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t3.year  =  2003 ORDER BY t3.degrees DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t2.year   =   2002 AND t1.campus  =  \"California State University-Channel Islands\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t2.year   =   2002 AND t1.campus  =  \"California State University-Chico\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT DISTINCT T1.location FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t1.year   =   1965 AND t1.campus  =  \"California State University-Bakersfield\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Title FROM film",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id where T1.course_id = '2'",
         "databaseID": "e_learning"
      },
      {
         "query": "select date_of_registration from students where student_id = '1'",
         "databaseID": "e_learning"
      },
      {
         "query": "select T1.login_name, T1.password from students AS T1 JOIN Student_Course_Enrolment AS T2 ON T2.student_id = T1.student_id WHERE registration_id = 2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.Fname ,  T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( * )  FROM  ( SELECT * FROM Sportsinfo GROUP BY StuID having count ( * )  > 1 ) ",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID GROUP BY T1.StuID having count ( * ) >1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There  =  \"bus\" OR How_to_Get_There  =  \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   \"bus\" OR How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name ,  Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   \"bus\" OR How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   \"shuttle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name,opening_hours  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   \"shuttle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name,Location_ID  FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There   =   \"shuttle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "college_3"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count ( * )  DESC LIMIT 3 ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Fname, T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT(*)  <  3",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT city_code FROM STUDENT WHERE StuID  =  1001",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT age FROM STUDENT WHERE StuID  =  1003",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Fname, Lname, FacID from Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T3.actid",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T3.actid WHERE T3.activity_name ! =  'Canoeing' OR T3.activity_name ! =  'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.role_description  FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_id from Project_staff where staff_id  =  '5137097.0'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT date_from, date_to from Project_staff where project_id  = '7'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT outcome_code from Project_Outcomes where project_id  = '7'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id   =   T2.people_id",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id   =   T2.people_id WHERE T2.Birth_Date LIKE \"%January%\"",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT birth_place FROM people WHERE name  =  \"Jack Campbell\"",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT min ( age )  FROM people",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT max ( age )  FROM people",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT avg ( age )  FROM people",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT min ( age )  ,  max ( age )  ,  avg ( age )  FROM people",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name from airports where city  =  'Madang'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  from airports where country  =  'Papua New Guinea'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid WHERE T2.country   =   'Italy'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation from airports where name = 'Mount Hagen Kagamuga Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name_first ,  name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name_first ,  name_last FROM player where player_id  =  \"gomezle01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name_first ,  name_last FROM player where player_id  =  \"ferreri01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998 and name_first ! =  \"Rick\" or name_last ! =  \"Ferrell\" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998 and name_first ! =  \"Lefty\" or name_last ! =  \"Gomez\" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id WHERE YEAR  =  1998 and T1.player_id ! =  \"gehrilo01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name_first , name_last FROM player  where player_id  =  \"gehrilo01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT AVG(Milliseconds) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Latin\" OR T1.Name  =  \"Pop\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT GenreId FROM Genre WHERE Name = \"Latin\" OR Name = \"Pop\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AVG ( Milliseconds )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name = \"Latin\" OR T1.Name = \"Pop\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AVG ( UnitPrice )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Latin\" OR T1.Name   =   \"Pop\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Person WHERE gender  =  \"female\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person WHERE name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics'",
         "databaseID": "college_2"
      },
      {
         "query": "Select count ( * )  from instructor where dept_name  =  'Physics' and salary <  ( SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "Select name, salary from instructor where dept_name  =  'Physics' and salary <  ( SELECT avg ( salary )  FROM instructor WHERE  dept_name   =   'Physics' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( distinct login_name )  from students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( distinct login_name )  from Course_Authors_and_Tutors",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT preferred_foot ,  count(*) FROM Player_Attributes WHERE overall_rating  >  80 GROUP BY preferred_foot",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT * FROM Player_Attributes WHERE overall_rating  >  80",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'right'",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'left'",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT count ( * )  FROM Player_Attributes WHERE overall_rating  >  80 and preferred_foot  =  'right'",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT preferred_foot , count ( * )  FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT origin FROM train GROUP BY origin HAVING count(*)  >  1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( distinct origin )  FROM train",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT time FROM train order by time desc limit 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( train_number )  FROM train",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( interval )  FROM train",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' OR T3.name  =  'Psychiatry'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID   =   T2.physician JOIN department AS T3 ON T2.department   =   T3.DepartmentID WHERE T3.name   =   'Surgery' OR T3.name   =   'Psychiatry'",
         "databaseID": "hospital_1"
      },
      {
         "query": "select name,SSN from physician where employeeid  =  2",
         "databaseID": "hospital_1"
      },
      {
         "query": "select name,SSN,employeeid from physician where position  =  \"Staff Internist\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "select departmentid from department order by head desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "select departmentid,name from department order by head limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airlines WHERE active   =   'Y' GROUP BY country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT alid FROM airlines WHERE name   =   'Aloha Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT callsign from airlines where alid  =  5",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  <  100000",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District WHERE T1.Population  <  100000",
         "databaseID": "election"
      },
      {
         "query": "SELECT County_name FROM county WHERE Population  <  100000",
         "databaseID": "election"
      },
      {
         "query": "SELECT COUNT ( County_name )  FROM county WHERE Population  >  100000",
         "databaseID": "election"
      },
      {
         "query": "SELECT County_name FROM county WHERE Population  <  100000 AND Population  >  50000",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District WHERE T1.Population  <  100000",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District WHERE T1.Population  <  100000 AND T1.Population  >  50000",
         "databaseID": "election"
      },
      {
         "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution  >  720",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM files WHERE f_id = '2'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" UNION SELECT f_id FROM song WHERE resolution > 720",
         "databaseID": "music_1"
      },
      {
         "query": "select artist_name from song where song_name = 'Tumi robe nirobe'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  =  2",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count ( * )    =   2",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports where country  = 'Papua New Guinea'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation FROM airports where name  = 'Madang Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation FROM airports where name  = 'Goroka Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT sum(T1.games) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.games )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br GROUP BY T1.team_ID ORDER BY sum ( T2.w )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT semester ,  YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT YEAR FROM SECTION GROUP BY semester ,  YEAR ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT semester FROM SECTION where year  =  2002 GROUP BY semester ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM SECTION where semester  =  'Fall' and YEAR  =  2002",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.Ship_ID FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t2.age FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count(*) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products )",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM Ref_colors",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 on T1.color_code  =  T2.color_code  WHERE product_id  =  \"2\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Products WHERE product_category_code  =  \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT membership_card FROM member WHERE address  =  'Hartford' INTERSECT SELECT membership_card FROM member WHERE address  =  'Waterbury'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT age from member where name  =  'Ashby, Lazale'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Time_of_purchase from member where name  =  'Ashby, Lazale'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Level_of_membership from member where name  =  'Breton, Robert'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count(*)  >=  2",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT advisor FROM Student",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count ( * )  < 2",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor HAVING count ( * )    > =    2",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT year FROM festival_detail group by year order by count ( * )  desc limit 1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT count ( * )  FROM festival_detail group by year having year  =  2008",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT num_of_audience FROM festival_detail where year  =  2008",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( friend )  from PersonFriend  where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name,friend,year from PersonFriend  where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT t1.name,friend,year,age from PersonFriend as t1 join  Person as t2 on t1.friend = t2.name\nwhere t1.name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name  =   'Zach' AND T2.year   =    ( SELECT max ( YEAR )  FROM PersonFriend WHERE name  =   'Zach' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job FROM Person  WHERE name  =   'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person  WHERE name  =   'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT cName ,  enr FROM College WHERE enr  >  10000 AND state = \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName  FROM College WHERE enr  >  10000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT * FROM College WHERE enr  >  10000 AND state  =  \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT enr FROM College WHERE enr  >  10000 AND state  =  \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.product_name ,  sum(T2.order_quantity) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id  =  T2.product_id GROUP BY T1.product_id",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.product_name ,  sum ( T2.order_quantity )  FROM products AS T1 JOIN order_items AS T2 ON T1.product_id   =   T2.product_id GROUP BY T1.product_id",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.product_name ,  sum ( T2.order_quantity ) ,T1.product_type_code FROM products AS T1 JOIN order_items AS T2 ON T1.product_id   =   T2.product_id GROUP BY T1.product_id",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT avg ( product_price )  from products",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "select product_name from products where product_price < ( SELECT avg ( product_price )  from products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "select product_name from products where product_price> ( SELECT avg ( product_price )  from products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "select * from routes",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name   =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name   =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name  ! =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid WHERE T1.name  ! =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT * FROM customers where customer_id in  ( select customer_id from Orders ) ",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "select name,id from companies where id  =   ( SELECT company_id from office_locations group by company_id order by count ( * )  desc limit 1 ) ",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.id FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.building_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings where id  =  \"3\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Character FROM actor where Name  =  'Tom Oliver'",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Name FROM actor",
         "databaseID": "musical"
      },
      {
         "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM city",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM city",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Population FROM county_public_safety WHERE Name  =  \"Abbotsford\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Crime_rate FROM county_public_safety WHERE Name  =  \"Campbell River\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Name FROM people",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Name FROM people ORDER BY Age DESC LIMIT 1",
         "databaseID": "debate"
      },
      {
         "query": "SELECT avg ( Age )  FROM people",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT votes from player WHERE Player_name LIKE \"Jim%\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT occupation from player WHERE Player_name LIKE \"Jim%\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT player_name from player WHERE votes > 10000",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T2.raceID FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.surname = \"Nakajima\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.surname = \"Nakajima\" and T2.rank = 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count(*) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = \"Steve\" AND T1.last_name = \"Johnson\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT first_name FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT last_name FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees where last_name like 'J%'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT first_name FROM employees where last_name like 'J%'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id  =  T1.id WHERE T1.first_name  =  \"Steve\" AND T1.last_name  =  \"Johnson\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Texas\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT * FROM Addresses where address_id  =  3",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT monthly_rental from Student_Addresses where address_id  =  3",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT monthly_rental from Student_Addresses where address_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( id )  from playlists",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT avg ( unit_price  )  from tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Name FROM procedures order by cost desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Name FROM procedures order by cost asc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT MAX ( cost )  ,  MIN ( cost )  ,  AVG ( cost )  FROM procedures",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id  =  t2.organization_id JOIN individuals AS t3 ON t2.individual_id  =  t3.individual_id WHERE t1.organization_name  =  \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id   =   t2.organization_id JOIN individuals AS t3 ON t2.individual_id   =   t3.individual_id WHERE t1.organization_name   =   \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT t2.date_contact_from, t2.date_contact_to FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id   =   t2.organization_id JOIN individuals AS t3 ON t2.individual_id   =   t3.individual_id WHERE t1.organization_name   =   \"Labour Party\" ORDER BY t2.date_contact_to DESC LIMIT 1",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT avg ( followers )  FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT COUNT ( * )  FROM airlines",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid   =   T2.alid GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airlines WHERE name  =  \"Ryanair\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.Name ,  T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T2.Name  =  \"film festival\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name FROM PHOTOS where photo_id = 280",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Description FROM PHOTOS where name = 'game2'",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Tourist_Attraction_ID FROM PHOTOS where Name = 'game2'",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID WHERE T1.Name   =   \"game2\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT COUNT ( * )  FROM web_client_accelerator",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT connection FROM web_client_accelerator WHERE name  =  \"CACHEbox\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT operating_system FROM web_client_accelerator",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name  FROM web_client_accelerator",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_name FROM catalogs",
         "databaseID": "product_catalog"
      },
      {
         "query": "select catalog_publisher,count ( * )  from Catalogs group by catalog_publisher order by count ( * )  desc",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT(*)  >  2",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM Companies WHERE Headquarters  =  \"USA\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Industry FROM Companies WHERE name  =  \"General Electric\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Profits_billion FROM Companies WHERE name  =  \"General Electric\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM Companies ORDER BY Assets_billion DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Market_Value_billion FROM Companies WHERE name  =  \"BNP Paribas\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.Name ,  COUNT(*) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative  =  T2.People_ID GROUP BY T2.Name",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.Name  FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative   =   T2.People_ID GROUP BY T2.Name",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.Party FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative   =   T2.People_ID GROUP BY T2.Name",
         "databaseID": "debate"
      },
      {
         "query": "SELECT count ( * )  FROM debate_people WHERE If_Affirmative_Win  =  'T'",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT staff_details FROM  Research_Staff where staff_id = 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_type FROM   Organisations where organisation_id = 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.country   =   'United States'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.name  =  'Billund Airport'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T2.pilot, T2.velocity FROM airport AS T1 JOIN flight AS T2 ON T1.id   =   T2.airport_id WHERE T1.name  =  'Ted Stevens Airport'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Matthias\" AND t1.lname  =  \"Blume\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t1.fname   =   \"Matthias\" AND t1.lname   =   \"Blume\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT COUNT ( t1.authID )  FROM authorship as t1 join authors as t2 on t1.authID  =  t2.authID where t2.fname  =  \"Matthias\" AND t2.lname  =  \"Blume\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.document_type_code  =  \"Document\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.document_type_code  =  \"Document\" ORDER BY created_date LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.created_date   =    ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT sum ( t1.amount_claimed )  FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id   =   t2.claim_id WHERE t2.created_date   =    ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Revenue FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name,Revenue FROM manufacturers WHERE revenue  <   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name FROM manufacturers WHERE revenue  >   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name,revenue FROM manufacturers WHERE revenue  >   ( SELECT min ( revenue )  FROM manufacturers WHERE headquarter   =   'Austin' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT distinct Nominee FROM musical WHERE Award   =   \"Tony Award\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT distinct Nominee FROM musical WHERE Award   =   \"Drama Desk Award\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Nominee FROM musical WHERE Award   =   \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award   =   \"Drama Desk Award\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE Rank   =   \"Professor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( distinct building )  FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE Rank   =   \"Professor\" AND building   =   \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count(*)  >  30",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id HAVING count ( * )  > 30",
         "databaseID": "sakila_1"
      },
      {
         "query": "select count ( * )  from film_actor where actor_id = '9'",
         "databaseID": "sakila_1"
      },
      {
         "query": "select first_name,last_name from actor where actor_id = '9'",
         "databaseID": "sakila_1"
      },
      {
         "query": "select first_name, last_name from actor where first_name = 'JOE' and last_name ! =  'SWANK'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT Name FROM ship WHERE Nationality  =  \"United States\" OR Nationality  =  \"United Kingdom\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Name FROM ship WHERE Nationality   =   \"United States\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Name FROM ship WHERE Nationality   =   \"United Kingdom\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT type FROM ship WHERE name   =   \"Corbridge\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT tonnage FROM ship WHERE name   =   \"Corbridge\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT name FROM ship WHERE tonnage   =   \"3146\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT name FROM ship order by  tonnage desc limit 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT count ( distinct type )  FROM ship",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id  =  T2.skill_id GROUP BY T1.skill_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT skill_id, skill_code FROM skills where skill_id   =   1 or skill_id  =  2 or skill_id  =  3",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( distinct part_fault_id )  from skills_required_to_fix",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT skill_description from skills where skill_id  =  3",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.skill_id ,  T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id   =   T2.skill_id GROUP BY T1.skill_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT LOCATION FROM school WHERE School_ID NOT IN (SELECT School_ID FROM Player)",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT COUNT ( * )  FROM player",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Player FROM player",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Age FROM player WHERE Player  =  \"Timothy Beckham\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Position FROM player WHERE Player  =  \"Pedro Álvarez\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rank) DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id FROM item where title  =  \"cup\"",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name  =  \"Statistics\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  FROM instructor WHERE dept_name  =  \"Statistics\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name  FROM instructor where dept_name  =  \"Statistics\" order by salary desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT salary FROM instructor where dept_name  =  \"Statistics\" order by salary desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT max(support_rate) ,  min(consider_rate) ,  min(oppose_rate) FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT max ( support_rate )  FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT min ( consider_rate )   FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT min ( Oppose_rate )   FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT avg ( Unsure_rate )   FROM candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT avg(T1.age) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.student_capacity  =  (SELECT max(student_capacity) FROM dorm)",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dormid FROM dorm ORDER BY student_capacity DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT COUNT ( T1.stuid )  FROM lives_in AS T1 JOIN dorm AS T2 ON T1.dormid  =  T2.dormid WHERE T2.student_capacity   =    ( SELECT max ( student_capacity )  FROM dorm ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( T1.age )  FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid WHERE T3.student_capacity   =    ( SELECT max ( student_capacity )  FROM dorm ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2010",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT distinct ( team_id )  FROM team where name  =  \"Boston Red Stockings\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.player_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.salary )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year  =  2010",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM architect WHERE gender  =  'male' ORDER BY name",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM architect WHERE gender  =  'male' ORDER BY name",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM architect WHERE gender  =  'male'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name , nationality , id FROM architect WHERE gender  =  'male' ORDER BY name",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name FROM employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name, salary FROM employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name,  salary FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name,  salary FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT phone_number FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT email FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.id ,  T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id GROUP BY T1.id HAVING count ( * )    > =    2",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT count ( distinct browser_id )  from accelerator_compatible_browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT operating_system from Web_client_accelerator where name  =  \"CProxy\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name from Web_client_accelerator where operating_system  =  \"Appliance  ( Linux ) \"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "Select * from customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT * FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT * FROM customers EXCEPT SELECT * FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select start_date from policies",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT regional_population FROM city ORDER BY Regional_Population DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT city FROM city ORDER BY Regional_Population DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT GDP FROM city where city  =  \"Shanghai\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T1.Starting_year  >  2011",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Starting_year FROM player_coach",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Coach_name FROM coach WHERE Gender = \"M\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name ,  T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID WHERE T1.Starting_year  >  2011",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT distinct department_id FROM staff_department_assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT department_id,count ( staff_id )  FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * )  LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT flag FROM ship GROUP BY flag ORDER BY count ( * )  LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( flag )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( distinct Built_Year )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( distinct Name )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( distinct Type )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T1.staff_id ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT * FROM staff",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING count(*)  >  1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )   >  1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )    =   1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING count ( * )    =   0",
         "databaseID": "loan_1"
      },
      {
         "query": "select loan_ID from loan where loan_type = 'Mortgages'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id where loan_type = 'Mortgages'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_address FROM Apartment_Buildings",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id   =   T2.building_id WHERE T2.bedroom_count  >  1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id   =   T2.building_id WHERE T2.bathroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T2.player_id ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T2.player_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name ,  lat ,  city FROM station ORDER BY lat LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name FROM station ORDER BY lat LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT lat FROM station ORDER BY lat LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT city FROM station WHERE name  =  \"San Jose Diridon Caltrain Station\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT Country ,  COUNT(*) FROM perpetrator GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT sum ( injured )  FROM perpetrator WHERE country  =  \"China\" OR country  =  \"Japan\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Killed FROM perpetrator WHERE country  =  \"South Korea\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT location FROM perpetrator WHERE  Perpetrator_ID  =  \"3\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( Headquarter )  from Manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT max ( Price )  from Products",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= \"1975-01-01\" AND T1.date_order_placed <= \"1976-01-01\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.order_id ,T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.order_id ,T2.product_id,T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id  =  T2.order_id WHERE T1.date_order_placed  > =   \"1975-01-01\" AND T1.date_order_placed < =  \"1976-01-01\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.name ,  T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head  =  T2.EmployeeID GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT * FROM department AS T1 JOIN physician AS T2 ON T1.head   =   T2.EmployeeID GROUP BY departmentID ORDER BY count ( departmentID )  LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.name FROM department AS T1 JOIN physician AS T2 ON T1.head   =   T2.EmployeeID where T1.name = 'General Medicine'",
         "databaseID": "hospital_1"
      },
      {
         "query": "select position from physician where name  =  \"Percival Cox\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT * FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2 ) ",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT t2.customer_id FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id   =   T2.order_id GROUP BY T2.order_id HAVING count ( * )   >  2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Participants",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT Participant_Type_Code FROM Participants WHERE Participant_Details  =  \"Karlee Batz\"",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT participant_id FROM participants WHERE Participant_Details  =  \"Lupe Deckow\"",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * )   LIMIT 3",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex   =   'F' AND Major = 600",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex   =   'F'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Age FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT FName,LName FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email,followers FROM user_profiles where name  =  \"Iron Man\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles where name  =  \"Tyler Swift\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email,partitionid FROM user_profiles where name  =  \"Tyler Swift\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( Claim_Stage_ID )  from Claims_Processing_Stages",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( distinct Staff_ID )  from Claims_Processing",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T3.Number_of_hosts  >  20",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID WHERE T3.Number_of_hosts  >  20",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID order by T3.Number_of_hosts asc limit 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T3.location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID order by T2.age desc limit 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Investor   =   \"Simon Woodroffe\" OR T1.Investor   =   \"Peter Jones\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Money_Requested from entrepreneur where Investor  =  'Simon Woodroffe' or Investor  =  'Peter Jones'",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Entrepreneur_ID from entrepreneur order by Money_Requested desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Entrepreneur_ID,Investor,Company from entrepreneur order by Money_Requested desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT gradepoint,lettergrade FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT max ( gradepoint )  FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT LETTERGRADE, max ( gradepoint )  FROM GRADECONVERSION GROUP BY LETTERGRADE",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT min ( gradepoint ) , lettergrade FROM GRADECONVERSION group by lettergrade",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT min ( gradepoint )  FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT max ( gradepoint )  ,  min ( gradepoint )  FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN student AS T3 ON T2.stu_num  =  T3.stu_num WHERE T1.crs_code  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN student AS T3 ON T2.stu_num   =   T3.stu_num WHERE T1.crs_code   =   'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT COUNT ( DISTINCT CLASS_SECTION )  FROM CLASS",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CLASS_TIME FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM manufacturers WHERE revenue  <  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select Name,Revenue from Manufacturers where Headquarter = 'Austin'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select Name from Manufacturers where Revenue<100",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select Name,Revenue from Manufacturers where Revenue<100",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( hoursperweek )   FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.Fname   =   \"David\" AND T2.Lname   =   \"Shieber\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( GamesPlayed )   FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.Fname   =   \"David\" AND T2.Lname   =   \"Shieber\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Fname, Lname from student where stuid  =   ( select stuid from sportsinfo group by stuid order by sum ( hoursperweek )  desc limit 1 ) ",
         "databaseID": "game_1"
      },
      {
         "query": "select sum ( Gamesplayed )  from sportsinfo group by stuid order by sum ( hoursperweek )  desc limit 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT founded FROM university WHERE school = 'University of Delaware'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT founded FROM university WHERE school = 'Lebanon Valley College'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Affiliation FROM university WHERE school = 'University of Rhode Island'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Draft_Class from match_season WHERE season  =  1996.0",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Draft_Pick_Number from match_season WHERE season  =  \"1998.0\" AND country  =  \"6\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT player from match_season WHERE season  =  \"1996.0\" AND team  =  \"1\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT College FROM match_season WHERE POSITION   =   \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION   =   \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence FROM player where gender  =  \"M\" intersect SELECT Residence FROM player where gender  =  \"F\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count ( * )  FROM player where gender  =  \"M\" and residence  =  \"Winnipeg\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count ( * )  FROM player where gender  =  \"F\" and residence  =  \"Winnipeg\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count ( distinct residence )  FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM player GROUP BY Residence HAVING COUNT ( * )  > 1 ) ",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT residence FROM player GROUP BY Residence HAVING COUNT ( * )  > 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Poll_Source, Support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Poll_Source FROM candidate ORDER BY Date DESC LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT count ( distinct T1.Name )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1 ) ",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.Name,count ( * )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * )   >  1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  'Austria' or T1.Name  =  'Finland'",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.team_id ,  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id WHERE T1.year  =  2014 GROUP BY T1.team_id ORDER BY avg(T1.attendance) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT attendance FROM home_game where team_id  =  'CH1'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.team_id FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id WHERE T1.year   =   2014 GROUP BY T1.team_id ORDER BY avg ( T1.attendance )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT team_id FROM home_game where attendance  =  3000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT  T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id  GROUP BY T1.team_id ORDER BY avg ( T1.attendance )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.address_id ,  T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id GROUP BY T2.address_id ORDER BY AVG(monthly_rental) DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select max ( monthly_rental )  from student_addresses",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select address_id from student_addresses order by monthly_rental desc limit 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id ORDER BY monthly_rental DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name from airports where city  = 'Mount Hagen'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  from airlines where active  =  'Y'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation from airports where name  =  'Madang Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid   =   T1.dormid JOIN student AS T5 ON T5.stuid   =   T4.stuid WHERE T5.lname   =   'Smith'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Smith'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.lname  =  'Jones'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T5.age  =   ( select max ( age )  from student ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid JOIN lives_in AS T4 ON T4.dormid  =  T1.dormid JOIN student AS T5 ON T5.stuid  =  T4.stuid WHERE T1.dormid  =   ( select T1.dormid from dorm as T1 join lives_in as T4 on T1.dormid  =  T4.dormid join student as T5 on T4.stuid  =  T5.stuid where T5.sex  =  \"F\" group by T1.dormid order by count ( * )  desc limit 1 ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid jOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid where T1.student_capacity  =   ( select min ( student_capacity )  from dorm ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT student_id FROM student_course_registrations",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count(*) FROM manufacturers WHERE headquarter  =  'Tokyo' OR headquarter  =  'Beijing'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT founder from manufacturers where name  =  \"Sony\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name from manufacturers where headquarter  =  \"Austin\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT revenue from manufacturers where name  =  \"Hewlett-Packard\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( * )  FROM manufacturers WHERE headquarter   =   'Tokyo' OR headquarter   =   'Beijing'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_id HAVING count(*)  >  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_id HAVING count ( * )   >  2 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.part_name ,  T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_id HAVING count ( * )   >  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "select count ( course_id )  from course",
         "databaseID": "college_2"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1 ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.dept_name,T1.course_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.credits,T1.course_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count(*) FROM Student WHERE city_code  =  \"HKG\" OR city_code  =  \"CHI\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE city_code   =   \"HKG\" OR city_code   =   \"CHI\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT count ( * )  FROM Customers",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_name FROM Customers",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_number FROM Customers WHERE customer_name = \"Kayley\"",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T2.order_status_code FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.customer_name = \"Sterling\"",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT name FROM procedures WHERE cost  >  1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT * FROM procedures WHERE cost  >  1000",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT * FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment WHERE T1.name   =   \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM procedures WHERE cost  >  1000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment WHERE T1.name   =   \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.CertificationExpires  FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment WHERE T1.name   =   \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id",
         "databaseID": "game_injury"
      },
      {
         "query": "select count ( * )  from stadium",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.id , count ( * )  FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.id , sum ( Total_Attendance )  FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.staff_name ,  count(*) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id GROUP BY T1.staff_name",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT  fault_status from Engineer_Visits where engineer_visit_id = 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT  fault_status from Engineer_Visits where engineer_id = 8",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT  other_visit_details from Engineer_Visits where engineer_id = 8",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.address ,  T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id  =  T1.address_id WHERE T1.first_name  =  'LINDA'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM customer",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name FROM customer",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY total LIMIT 10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name, T1.last_name  FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY total LIMIT 10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT city FROM city WHERE regional_population  >  10000000 UNION SELECT city FROM city WHERE regional_population  <  5000000",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT count ( city )  FROM city WHERE regional_population  >  8000000",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT count ( city )  FROM city WHERE regional_population  <  5000000",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT city FROM city WHERE regional_population  <  5000000",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select apt_type_code from Apartments order by room_count  limit 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select building_id from Apartments where apt_number  =  'Suite 645'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy WHERE T2.allergytype  =  \"food\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Allergy_Type",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Allergy_Type",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT distinct AllergyType FROM Allergy_Type",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy   =   T2.allergy WHERE T2.allergytype   =   \"food\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Stories FROM buildings where name  =  \"Torre Reforma\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT count(*) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  Class_Senator_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE T1.city_code   =   \"NYC\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE  T2.Election_Cycle   =   \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT distinct T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   Class_Senator_Vote WHERE  T2.Election_Cycle   =   \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( stuid )  from student where major  =  600",
         "databaseID": "club_1"
      },
      {
         "query": "select stuid from student where major  =  600",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.major   =   \"600\" GROUP BY t1.clubname",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t1.clubname,count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.major   =   \"600\" GROUP BY t1.clubname ORDER BY count ( * ) ",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_id FROM Apartments where apt_number  =  \"Suite 645\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT bathroom_count, bedroom_count  FROM Apartments where  apt_number  =  \"Suite 645\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT room_count FROM Apartments where  building_id  =  624",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT min ( bathroom_count )  ,  max ( bathroom_count ) , min ( bedroom_count ) , max ( bedroom_count )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_id FROM Apartments where apt_number  =  \"Apt. 908\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   \"X\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT T2.date FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   \"X\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT dose FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician JOIN medication AS T3 ON T3.code  =  T2.medication WHERE T3.Brand   =   \"X\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Name FROM technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name ,  T2.Team FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity  <  200",
         "databaseID": "flight_company"
      },
      {
         "query": "select Vehicle_Flight_number from flight order by Velocity limit 1",
         "databaseID": "flight_company"
      },
      {
         "query": "select distinct Principal_activities from operate_company where name = 'Air Hong Kong'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id WHERE T2.velocity < 200",
         "databaseID": "flight_company"
      },
      {
         "query": "select type from operate_company where name = 'Air China'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.birth_city , T1.birth_state , T1.birth_country FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.birth_year, T1.birth_month, T1.birth_day FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select color_code from Ref_Colors where color_description = 'white'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_id,product_category_code from Products where color_code = '2'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select unit_of_measure from Ref_Product_Categories where \nproduct_category_code = 'Herbs' or product_category_code = 'Spices'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_name from Products where product_id = '2'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT t2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  ,  sex FROM Student GROUP BY sex",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND t2.year  =  2001",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT dept_code, dept_name FROM department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t2.crs_code FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE t1.dept_code   =   \"CIS\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE t1.dept_code   =   \"CIS\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT stuid FROM Student WHERE Fname  =  \"Linda\" AND Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT age FROM Student WHERE Fname  =  \"Linda\" AND Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT city_code FROM Student WHERE Fname  =  \"Linda\" AND Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports WHERE city  =  \"Goroka\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports WHERE elevation  =  5282",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT iata FROM airports WHERE name  =  \"Madang Airport\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  from employees where role_code  =  \"ED\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id  =  T2.people_id",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Name ,  birth_date FROM people EXCEPT SELECT T1.Name ,  T1.birth_date FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id   =   T2.people_id",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Name ,  birth_place FROM people EXCEPT SELECT T1.Name ,  T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id   =   T2.people_id",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Author FROM submission WHERE College  =  \"Florida\" OR College  =  \"Temple\"",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT Author FROM submission",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT author from submission where college = 'Florida' or college  = 'Temple'",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.state_province_county  =  \"Georgia\" GROUP BY T1.city ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.city  =  \"Port Melyssa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.date_of_birth FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.city  =  \"Port Melyssa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count(*) ,  city_code FROM student GROUP BY city_code HAVING count(*)  >  1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT city_code, count ( * )  FROM student group  by  city_code",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT city_code, count ( * )  FROM student group  by  city_code having count ( * ) >1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE salary  >  (SELECT max(salary) FROM instructor WHERE dept_name  =  'Biology')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name, salary FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name, salary FROM instructor WHERE dept_name  =  \"Biology\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM instructor WHERE salary >  ( SELECT salary FROM instructor WHERE name  =  \"Valtchev\" ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE salary >  ( SELECT salary FROM instructor WHERE name  =  \"Valtchev\" ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT distinct T1.city FROM city AS T1 JOIN hosting_city as T2 on T1.city_id  =  T2.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name =  'Zach' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE name =  'Zach')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name  =   'Zach' AND T2.year   =    ( SELECT max ( YEAR )  FROM PersonFriend WHERE name  =   'Zach' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person where name  =  \"Dan\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT city from Person where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age from Person where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job from Person where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT sum(T1.lesson_time) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT sum ( T1.lesson_time )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  \"Rylan\" AND T2.last_name  =  \"Goodwin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.lesson_status_code FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  \"Rylan\" AND T2.last_name  =  \"Goodwin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT customer_id FROM customers WHERE first_name  =  \"Rylan\" AND last_name  =  \"Goodwin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( DISTINCT apt_type_code )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT distinct apt_type_code FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * ) , apt_type_code FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code, count ( * )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( * )  from Services",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT service_id from Services where service_type_code  =  \"Check\"",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( * )  from Organizations",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT state FROM college WHERE enr  <  (SELECT max(enr) FROM college)",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName, enr  FROM college",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cname FROM college WHERE enr  =   ( SELECT max ( enr )  FROM college ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cname FROM college WHERE enr <  ( SELECT max ( enr )  FROM college ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cname, state FROM college WHERE enr <  ( SELECT max ( enr )  FROM college ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title,T1.id,count ( T1.id )  FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id",
         "databaseID": "store_1"
      },
      {
         "query": "select title,artist_id from albums",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id HAVING count ( T1.id )   >  10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "select distinct airline from routes where src_apid  =   ( SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM files",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM files where duration  =  \"5:23\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id FROM files where duration  =  \"5:23\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_code FROM documents WHERE document_type_code = 'Book'",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T2.name ,  count(*) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name ,  count ( * )  FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id",
         "databaseID": "shop_membership"
      },
      {
         "query": "select count ( * )  from  ( SELECT T2.name  FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year  >  2015 GROUP BY T2.branch_id ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'goalie'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'goalie'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT decision from Tryout WHERE pPos   =   'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( balance )  FROM savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN  ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance >  ( SELECT avg ( balance )  FROM savings )  ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN  ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance >  ( SELECT avg ( balance )  FROM savings )  ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( distinct country )  FROM customers",
         "databaseID": "store_1"
      },
      {
         "query": "select count ( * )  from customers where last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT country FROM customers WHERE first_name  =  \"Roberto\" AND last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( distinct StuID )  FROM Has_allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( distinct allergy )  FROM Has_allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count ( * )   > =   2",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Membership_card FROM member where Name = 'Breton, Robert'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT age FROM member where Name = 'Breton, Robert'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT T1.name ,  T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT salary, name from employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE T2.course_id IN (SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id  =  T4.course_id WHERE T3.title  =  'International Finance')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id   =   T2.id WHERE T2.course_id IN  ( SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id   =   T4.course_id WHERE T3.title   =   'International Finance' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title from  course where course_id  =  787",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name from  course where course_id  =  787",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT grade from enrolled_in where cid  =  \"550.681\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT hours from course where cname  =  \"COMPUTER LITERACY\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT days from course where cname  =  \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.cName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T2.pName LIKE 'D%'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  FROM Player WHERE yCard = \"yes\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName FROM Player ORDER BY HS ASC LIMIT 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pID FROM Player WHERE pName = \"Andrew\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pID FROM Player WHERE pName = \"Blake\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT max(capacity) ,  avg(capacity) ,  building FROM classroom GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT room_number FROM classroom WHERE capacity >  ( SELECT avg ( capacity )  FROM classroom ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT max ( capacity )  ,  min ( capacity )  ,  building FROM classroom GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM classroom order by capacity desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM classroom order by capacity limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT distinct city FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT city , count ( * )  FROM branch  GROUP BY city",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( * )  FROM branch WHERE open_year < 2010",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT city , count ( * )  FROM branch WHERE open_year < 2010 GROUP BY city",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >  (SELECT salary FROM employees WHERE employee_id = 163 )",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT salary FROM employees WHERE employee_id  =  163",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name, last_name FROM employees WHERE employee_id  =  163",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE salary  >   ( SELECT salary FROM employees WHERE employee_id  =  163  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_id FROM employees WHERE employee_id  =  163",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  from employees where department_id  =   ( select department_id from employees where employee_id  =  163 ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT distinct manager_id from employees where department_id  =   ( select department_id from employees where employee_id  =  163 ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT open_date FROM church where name  =  \"Pure Church of Christ\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT organized_by FROM church where name  =  \"Pure Church of Christ\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT church_id FROM church where name  =  \"Pure Church of Christ\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM church where organized_by  =  \"Ezra Booth\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT open_date FROM church GROUP BY open_date HAVING count ( * )    > =    2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Document_Date  FROM Documents where Document_ID = 105",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name,color_code,product_id from Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   \"catnip\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT school ,  TYPE FROM school WHERE school_id NOT IN (SELECT school_id FROM school_bus)",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT school FROM school WHERE school_id NOT IN  ( SELECT school_id FROM school_bus ) ",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT TYPE FROM school WHERE school_id NOT IN  ( SELECT school_id FROM school_bus ) ",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT school  FROM school WHERE location like \"%Hawaii%\" and school_id IN  ( SELECT school_id FROM school_bus ) ",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT school  FROM school WHERE location like \"%Indonesia\" and school_id IN  ( SELECT school_id FROM school_bus ) ",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )   FROM school WHERE location like \"%Hawaii\" and type  =  \"Private\"",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT customer_id ,  sum(amount_paid) FROM Payments GROUP BY customer_id ORDER BY sum(amount_paid) DESC LIMIT 1",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT customer_id FROM Payments GROUP BY customer_id ORDER BY sum ( amount_paid )  DESC LIMIT 1",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT sum ( amount_paid )  FROM Payments WHERE customer_id  =  12",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT payment_type_code FROM Payments WHERE customer_id  =  12",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( distinct thing_id )  from Timed_Status_of_Things WHERE Status_of_Thing_Code   =  \"Close\"",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( distinct thing_id )  from Timed_Status_of_Things WHERE Status_of_Thing_Code   =  \"Close\" AND Date_and_Date < '2017-06-19 02:59:21'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id   =   T2.thing_id WHERE T1.Status_of_Thing_Code   =   'Close' and T1.Date_and_Date  <  '2017-06-19 02:59:21'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT  thing_id from things WHERE  Type_of_Thing_Code  =  \"Electronics\" or Type_of_Thing_Code  =  \"Commen\"",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT COUNT ( * )  FROM university WHERE affiliation ! =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT school, enrollment FROM university WHERE affiliation ! =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT founded FROM university WHERE affiliation ! =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT sent_date FROM documents  WHERE document_id  =  2",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id FROM grants WHERE grant_id  = 3",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_end_date FROM grants WHERE grant_id  = 3",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T3.Name  =  \"Guruvayur Express\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Annual_entry_exit FROM station where station_id  =  \"1\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Total_Passengers FROM station where station_id  =  \"1\" or station_id  =  \"2\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id WHERE T3.Name   =   \"Ananthapuri Express\" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id WHERE T3.Name   =   \"Guruvayur Express\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT College FROM match_season GROUP BY College HAVING count(*)  >=  2",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT College FROM match_season GROUP BY College HAVING count ( * )    =   2",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Player FROM match_season where College = 'UCLA'",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Player,Position FROM match_season where College = 'UCLA'",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( * )  FROM match_season where College = 'UNLV'",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT season FROM match_season where College = 'UNLV'",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T2.Store_Name  =  \"FJA Filming\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT * FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   \"FJA Filming\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   \"FJA Filming\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T2.Store_Name   =   \"FJA Filming\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT Store_Phone FROM Stores WHERE Store_Name   =   \"FJA Filming\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE t2.apt_number  =  \"Apt. 585\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE t2.building_id  =  \"225\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT  T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id  =  T2.id JOIN enzyme AS T3 ON T1.enzyme_id  =  T3.id WHERE T3.name  =  'ALA synthase' AND T2.name  =  'Aripiprazole'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT name from enzyme where location  =  \"Cytosol\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id   =   T2.id JOIN enzyme AS T3 ON T1.enzyme_id   =   T3.id WHERE T2.name   =   'Aripiprazole' and T3.location  =  \"Cytosol\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id   =   T2.id JOIN enzyme AS T3 ON T1.enzyme_id   =   T3.id WHERE T2.name   =   'Aripiprazole' and T3.location ! =  \"Cytosol\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT distinct ( T1.interaction_type )  FROM medicine_enzyme_interaction AS T1  JOIN enzyme AS T2 ON T1.enzyme_id   =   T2.id WHERE T2.name   =   'ALA synthase'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT count(*) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  100 OR T2.ticket_price  <  10",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT count ( * )  FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  100",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT count ( * )  FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE  T2.ticket_price  <  10",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  100",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT theme FROM  exhibition order by Year desc limit 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT Ticket_Price FROM  exhibition order by Year desc limit 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID  =  T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There  =  \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( * )  FROM SHOPS",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Shop_Details FROM SHOPS",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Shop_ID FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID   =   T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There   =   \"bus\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Shop_ID FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID   =   T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID   =   T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum(hours_played)  >=  1000",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum ( hours_played )   > =   1000",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid HAVING sum ( hours_played )  < 1000",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.GType, AVG ( T1.Hours_Played )  FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T2.GType",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Name FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Louisville, Kentucky'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id JOIN member AS T3 ON T1.member_id   =   T3.member_id WHERE T3.Hometown   =   'Hiram ,  Georgia'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT basePrice FROM Rooms",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT basePrice FROM Rooms ORDER BY basePrice DESC LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT Driver_ID, If_full_time FROM school_bus",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT Driver_ID, Years_Working, If_full_time FROM school_bus",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id  =  t2.driver_id ORDER BY years_working DESC LIMIT 1",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Title FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Name FROM mountain",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT count ( Name )  FROM mountain WHERE Height  >  5000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT name FROM mountain WHERE Height  >  5000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Name FROM mountain WHERE Height  >  5000 and Prominence  >  1000 order by height desc limit 1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Country FROM mountain WHERE Height  <  5200",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Country FROM mountain WHERE Height  >  5600",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Country FROM mountain WHERE Height  >  5600 INTERSECT SELECT Country FROM mountain WHERE Height  <  5200",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend  =   'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT year from personfriend where friend  =  \"Alice\" and name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT LastName,FirstName from list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.lastname   =   \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname,Grade FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.lastname   =   \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count  ( distinct account_id )  FROM Financial_transactions where transaction_amount > 600",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT COUNT ( customer_id )  FROM Customers",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT phone_number FROM customers where first_name  =  \"Clara\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT count ( * )  FROM Companies WHERE Industry  =  \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT count ( * )  FROM Companies WHERE Industry ! =  \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT sum ( sales_billion )  FROM Companies WHERE Industry ! =  \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT max ( sales_billion )  FROM Companies WHERE Industry ! =  \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT min ( sales_billion )  FROM Companies WHERE Industry ! =  \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major ORDER BY count(Major) ASC LIMIT 1;",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT city_code from  Student where fname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT age from  Student where lname  =  \"Kim\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT stuid from  Student where city_code  =  \"WAS\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  count ( * )  FROM Student GROUP BY Major ORDER BY count ( Major )  ASC LIMIT 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T1.dorm_name ,  T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid GROUP BY T2.dormid ORDER BY count(*) LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT DISTINCT ( T1.student_capacity )  FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name  =  \"Smith Hall\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid GROUP BY T2.dormid ORDER BY count ( * )  LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid GROUP BY T2.dormid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm WHERE student_capacity  =  355",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT distinct product_name from Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * )  LIMIT 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT name FROM member WHERE Country = \"United States\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT DISTINCT Country FROM member EXCEPT SELECT Country FROM member WHERE Country = \"United States\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT name FROM member WHERE Country = \"Canada\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician ORDER BY T2.dose DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date FROM employees WHERE department_id  =  (SELECT department_id FROM employees WHERE first_name  =  \"Clara\")",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT hire_date FROM employees WHERE department_id   =    ( SELECT department_id FROM employees WHERE first_name   =   \"Clara\" ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT  avg ( SALARY )  FROM employees WHERE department_id   =    ( SELECT department_id FROM employees WHERE first_name   =   \"Clara\" ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred",
         "databaseID": "college_2"
      },
      {
         "query": "select name from student where dept_name = 'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "select ID from instructor where dept_name = 'Marketing'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name  GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.preferred_genre FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" GROUP BY T2.artist_name ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"bangla\" AND T1.preferred_genre  =  \"folk\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist  WHERE preferred_genre  =  \"folk\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist  WHERE preferred_genre  =  \"tagore\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Sales Person\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Sales Person\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"",
         "databaseID": "department_store"
      },
      {
         "query": "select customer_name,customer_address from Customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id  =  T3.id WHERE T3.name  =  'Amisulpride' AND T2.interaction_type  =  'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id   =   T3.id WHERE T3.name   =   'Amisulpride'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id   =   T3.id WHERE T3.name   =   'Amisulpride' AND T2.interaction_type   =   'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT distinct ( T1.name )  FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id   =   T3.id WHERE T2.interaction_type   =   'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T2.organisation_id ,  T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id  =  T2.organisation_id GROUP BY T2.organisation_id HAVING sum(T1.grant_amount)  >  6000",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id from grants where grant_amount  =  4094.542",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_start_date from grants where grant_amount  =  4094.542",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_end_date from grants where grant_amount  =  4094.542",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_amount from grants where organisation_id  =  14",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT uid, name FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name, followers FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT max ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT sum ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Elimination",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_id FROM courses WHERE course_name  =  \"English\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( distinct student_id )  from student_course_attendance",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( * )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T2.course_id  =  302",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO  =  T2.DNO",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DNO from Department where DNO not in  ( select DNO from Minor_in ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DName from Department where DNO not in  ( select DNO from Minor_in ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DName from Department where DNO not in  ( select DNO from Minor_in )  order by DName",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title, year FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code JOIN document_sections_images AS t3 ON t2.section_id  =  t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( document_name )  FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "select count ( * )  from  ( SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id ) ",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code JOIN document_sections_images AS t3 ON t2.section_id   =   t3.section_id",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT Market_Rate ,  name FROM furniture WHERE Furniture_ID NOT IN (SELECT Furniture_ID FROM furniture_manufacte)",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT Market_Rate  FROM furniture WHERE name  =  \"Chabudai\"",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT T2.Price_in_Dollar  FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID  =  T2.Furniture_ID  WHERE T1.name  =  \"Chabudai\"",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT T2.Manufacturer_ID  FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID  =  T2.Furniture_ID  WHERE T1.name  =  \"Chabudai\"",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT count(*) FROM EVENTS WHERE event_id NOT IN (SELECT event_id FROM Participants_in_Events)",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "select * from Participants_in_Events",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( * )  FROM EVENTS WHERE event_id NOT IN  ( SELECT event_id FROM Participants_in_Events ) ",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code  =  T3.document_type_code WHERE T3.document_description  =  'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular' INTERSECT SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id   =   T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code   =   T3.document_type_code WHERE T3.document_description   =   'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT department_id, name, creation FROM department",
         "databaseID": "department_management"
      },
      {
         "query": "select Department_ID, Name, Creation from department where creation  =   ( SELECT creation FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "department_management"
      },
      {
         "query": "select sum ( Budget_in_Billions )  from department where creation  =   ( SELECT creation FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT MAX ( Price )  FROM schedule",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT AVG ( Price )  FROM schedule",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT AVG ( Rank_in_series )  FROM film",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person where name = 'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT city FROM Person where name = 'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT Country FROM artist where Name  =  'Vijay Singh'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist ORDER BY year_join DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT Year_Join FROM artist where Name  =  'Vijay Singh'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( course_id )  FROM Student_Course_Registrations WHERE student_id  =  121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( * )  FROM Student_Course_Attendance WHERE  student_id  =  121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_id FROM student_course_registrations WHERE student_id  =  121 UNION SELECT course_id FROM student_course_attendance WHERE student_id  =  121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >   ( SELECT min ( Price )  FROM wine WHERE Winery   =   \"John Anthony\" ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Price FROM WINE WHERE Price  >   ( SELECT min ( Price )  FROM wine WHERE Winery   =   \"John Anthony\" ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Score  FROM WINE WHERE Price  >   ( SELECT min ( Price )  FROM wine WHERE Winery   =   \"John Anthony\" ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T1.name  =  \"John Williams\"",
         "databaseID": "flight_1"
      },
      {
         "query": "select name from aircraft",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T1.name   =   \"John Williams\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT t3.aid FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T1.name   =   \"John Williams\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "select name from captain where class ! =  'NULL'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Ship_ID  FROM ship WHERE name  = \"HMS Gorgon\"",
         "databaseID": "ship_1"
      },
      {
         "query": "select count (  distinct Class )  from Ship",
         "databaseID": "ship_1"
      },
      {
         "query": "select T1.Rank from captain as T1 join  Ship as T2 on  T1.Ship_ID = T2.Ship_ID where T2.Name = \"HMS Gorgon\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50 OR Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "SELECT name FROM manager order by age limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT count ( * )  FROM manager where country  =  'United States'",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id GROUP BY T1.building_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.name , T2.institution FROM building AS T1 JOIN institution AS T2 ON T1.building_id   =   T2.building_id GROUP BY T1.building_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Founded, Location FROM institution WHERE Institution = \"Ave Maria University\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Enrollment FROM institution WHERE Institution = \"Dakota State University\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT t1.address ,  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Shop_ID  from  shop  order by Num_of_staff desc  limit  1",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT  t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT t1.address , t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id  =  t2.shop_id WHERE MONTH  =  'May'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT document_description FROM Document_Types WHERE document_description LIKE 'Initial%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID WHERE T2.Country  =  \"Canada\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID",
         "databaseID": "decoration_competition"
      },
      {
         "query": "select college_id from college where college_location = 'Ottawa'",
         "databaseID": "decoration_competition"
      },
      {
         "query": "select T2.Name, T1.College_Location from college AS T1 JOIN member AS T2 ON T2.College_ID = T1.College_ID WHERE Member_ID = 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT t1.Manufacturer_ID FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT CLASS FROM race GROUP BY CLASS HAVING count(*)  >=  2",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name FROM race",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT date FROM race where name  =  \"Mexico City 250\"",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT class FROM race",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT count(*) FROM train WHERE name LIKE \"%Express%\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( * )  FROM train WHERE name LIKE \"%Express%\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT destination FROM train WHERE name  =  'Ananthapuri Express'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT train_number FROM train WHERE name  =  'Ananthapuri Express'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T2.Issue_Date FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume   =   T2.Volume_ID WHERE T1.Music_Festival  =  \"34th England Academy Prize\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.Music_Festival FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume   =   T2.Volume_ID WHERE T2.Song  =  \" Everybody Have Fun Tonight \"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume   =   T2.Volume_ID WHERE T1.Result   =   \"Nominated\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT DISTINCT interaction_type from medicine_enzyme_interaction",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id   =   T1.id WHERE T2.interaction_type   =   'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product, T1.chromosome FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id   =   T1.id WHERE T2.interaction_type   =   'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.product_name ,  T2.color_description  FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_id from products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT sum(t1.amount_claimed) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id  =  t2.claim_id WHERE t2.created_date  =  (SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1)",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( * )  from claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT max ( amount_claimed )  from claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT min ( amount_piad )  from claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT date_of_settlement from claim_headers where claim_type_code  =  \"Overtime Meal Subsidy\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T2.Position  =  \"Right Wing\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT count ( * )  FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T2.Position   =   \"Right Wing\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT count ( * )  FROM player",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT * FROM player",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT count ( DISTINCT Position )  FROM player",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT publisher FROM book_club WHERE YEAR  =  1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR  =  1990",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT publisher FROM book_club WHERE YEAR   =   1989",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT publisher FROM book_club WHERE YEAR   =   1990",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT publisher FROM book_club WHERE YEAR   =   1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR   =   1990",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT DISTINCT dormid FROM Has_amenity",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid   =   T4.amenid WHERE T4.amenity_name   =   'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid WHERE T2.dormid NOT IN  ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid   =   T4.amenid WHERE T4.amenity_name   =   'TV Lounge' ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid WHERE T2.dormid NOT IN  ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid   =   T4.amenid WHERE T4.amenity_name   =   'TV Lounge' ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid WHERE T2.dormid NOT IN  ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid   =   T4.amenid WHERE T4.amenity_name   =   'TV Lounge' ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN (SELECT Ship_ID FROM mission)",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Name FROM ship WHERE Ship_ID NOT IN  ( SELECT Ship_ID FROM mission ) ",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%'",
         "databaseID": "ship_mission"
      },
      {
         "query": "Select Name from ship \nwhere Ship_ID in  ( \nSELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%' ) ",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT rid FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'United States') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT rid FROM routes WHERE dst_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' )  AND src_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( DISTINCT T2.Location_Code )  FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id   =   T2.thing_id WHERE T1.service_details   =   'Unsatisfied'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( DISTINCT thing_id )  FROM Things where Type_of_Thing_Code  =  \"Electronics\"",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "select service_details from things where thing_id  =  2",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "select service_type_code from things where thing_id  =  2",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "select location_code, date_and_time from Timed_Locations_of_Things where thing_id  =  10",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2",
         "databaseID": "coffee_shop"
      },
      {
         "query": "select avg ( Num_of_shaff_in_charge )  from happy_hour",
         "databaseID": "coffee_shop"
      },
      {
         "query": "select count ( distinct month )  from happy_hour",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count ( * )   >  2",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( * )  FROM Visitors",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( distinct Tourist_Attraction_ID )  FROM Visits",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select count  ( * )  from  ( SELECT * FROM Visits as T1 join Visitors as T2 on T1.tourist_id  =  T2.tourist_id group by T1.tourist_id having count ( * )  >1 ) ",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( * )  FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) ",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  =  7",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT DISTINCT count ( * )  FROM station",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT DISTINCT name FROM station",
         "databaseID": "bike_1"
      },
      {
         "query": "select city from station where name  =  \"San Jose Civic Center\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT school_code from department where dept_name  =  \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_num from department where dept_name  =  \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT order_id FROM shipments WHERE shipment_date  =  (SELECT max(shipment_date) FROM shipments)",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT shipment_date FROM shipments",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT shipment_date FROM shipments order by shipment_date desc limit 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT shipment_id FROM shipments WHERE shipment_date  =   ( SELECT max ( shipment_date )  FROM shipments ) ",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT Hometown FROM people",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE Hometown  =  \"Santo Domingo\"",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Claim_ID FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Amount_Claimed FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID  =  T2.Service_ID WHERE T2.Service_Type_Code  =  'Marriage'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID   =   T2.Service_ID WHERE T2.Service_Type_Code   =  'Marriage'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( * )  FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID   =   T2.Service_ID WHERE T2.Service_Type_Code   =  'Marriage' and Event_Details  =  'Success'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT first_name ,  last_name ,  salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN  locations AS T3 ON T2.location_id  =  T3.location_id WHERE  T3.city  =  'London'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN  locations AS T3 ON T2.location_id   =   T3.location_id WHERE  T3.city   =   'London'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.document_name   =   \"King Book\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T2.Document_Date FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.document_name   =   \"King Book\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( T2.Document_Date )  FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.Document_Type_Code  =   \"CV\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( T2.Document_Date )  FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.Document_Type_Code  =   \"BK\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T2.Document_Date FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id   =   T2.project_id WHERE T2.Document_Type_Code  =   \"BK\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT start_station_name ,  end_station_name FROM trip ORDER BY id LIMIT 3",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT start_station_name FROM trip",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT start_date FROM trip where start_station_name  =  \"Howard at 2nd\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  \"Balls to the Wall\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  \"Fast As a Shark\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T2.name  =  \"For Those About To Rock  ( We Salute You ) \"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t2.attribute_id FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t2.attribute_value FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT customer_name, channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id where channel_code  =  \"Email\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id where customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = \"voluptatem\" AND T1.date_problem_reported > \"1995\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name  =  \"voluptatem\" AND T1.date_problem_reported > \"1995\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id join district as t3 on t3.district_id  =  t2.district_id where t3.district_name  =  \"Attock District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =   ( SELECT district_id FROM district ORDER BY city_population ASC LIMIT 1 ) ",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =   ( SELECT district_id FROM district ORDER BY city_population desC LIMIT 1 ) ",
         "databaseID": "store_product"
      },
      {
         "query": "sELECT city_area FROM district ORDER BY city_population desC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T1.emp_fname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T3.dept_code  =  T2.dept_code WHERE T3.dept_name  =  'History' AND T2.prof_high_degree  =  'Ph.D.'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.emp_fname from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.prof_office from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.emp_fname, T2.prof_office from employee as T1 join professor as T2 on T1.emp_num  =  T2.emp_num where T2.dept_code  =  'HIST' and T2.PROF_HIGH_DEGREE  =  'Ph.D.'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist WHERE artist_id NOT IN  ( SELECT artist_id FROM exhibition ) ",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT country FROM artist WHERE artist_id NOT IN  ( SELECT artist_id FROM exhibition ) ",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT age FROM artist WHERE artist_id NOT IN  ( SELECT artist_id FROM exhibition ) ",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist ORDER BY AGE DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist WHERE artist_id IN  ( SELECT artist_id FROM exhibition )  AND name  =  \"Jeff Sluman\"",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction < 3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select transaction_id from Transactions where transaction_type_code = 'SALE'",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select transaction_id from Transactions where transaction_type_code = 'PUR'",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction < 3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( * )  FROM FACULTY WHERE Building   =   \"Barton\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT * FROM FACULTY WHERE Building   =   \"Barton\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT lname FROM FACULTY WHERE Building   =   \"Barton\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT rank, count ( * )  FROM FACULTY WHERE Building   =   \"Barton\" group by rank",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Lname FROM FACULTY WHERE Building   =   \"Barton\" ORDER BY Lname",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM customers WHERE first_name  =  \"Eduardo\" AND last_name  =  \"Martins\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT company FROM customers WHERE first_name  =  \"Eduardo\" AND last_name  =  \"Martins\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT city FROM customers WHERE company  =  \"Woodstock Discos\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT phone FROM customers WHERE first_name  =  \"Eduardo\" AND last_name  =  \"Martins\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID, LName, Fname FROM Student",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT stuID ,sportname FROM SportsInfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID,LName,Fname FROM Student where stuID not in  ( SELECT StuID FROM Sportsinfo ) ",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )   < =   2 ) ",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )  < =  2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)",
         "databaseID": "railway"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT railway FROM railway WHERE Railway_ID IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT railway FROM railway WHERE Railway_ID not IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT built FROM railway WHERE Railway_ID not IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT headquarters FROM company WHERE main_industry  =  'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry  =  'Oil and gas'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT DEPARTMENT_ID FROM  departments where department_name   =   'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id WHERE T2.department_name   =   'Finance'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.claim_id HAVING count(*)  =  1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Date_Claim_Made FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Date_Claim_Settled FROM Claims  where Date_Claim_Made = '2018-06-14'",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count(*) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication  =  T2.Code WHERE T2.name  =  'Procrastin-X' )",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( * )  FROM patient WHERE SSN NOT IN  (  SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication   =   T2.Code WHERE T2.name   =   'Procrastin-X'  ) ",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM patient WHERE SSN NOT IN  (  SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication   =   T2.Code WHERE T2.name   =   'Procrastin-X'  ) ",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT address FROM patient WHERE SSN NOT IN  (  SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication   =   T2.Code WHERE T2.name   =   'Procrastin-X'  ) ",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( hours_played )  FROM Plays_games AS T1 JOIN Video_games where GType  =  \"Role-playing game\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT stuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid where t2.GName  =  \"Works of Widenius\" order by hours_played desc limit 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( distinct t1.StuID )  FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid where t2.GName  =  \"Works of Widenius\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT GType FROM Video_games where GName  =  \"Works of Widenius\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "select * from customer where credit_score < 100",
         "databaseID": "loan_1"
      },
      {
         "query": "select t2.loan_type from customer as t1 join loan as t2 on t1.cust_id  =  t2.cust_id where t1.cust_name  =  \"Mary\" intersect select t4.loan_type from customer as t3 join loan as t4 on t3.cust_id  =  t4.cust_id where t3.cust_name  =  \"Jack\"",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id   =   T2.branch_id JOIN customer AS T3 ON T1.cust_id   =   T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum ( T1.amount )  DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM Customers WHERE customer_id  =  9",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT payment_method FROM Customers WHERE customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT contact_number FROM Customer_Contact_Channels WHERE customer_id  =  3",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT max ( t2.active_to_date )  FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT avg(followers) FROM user_profiles WHERE UID IN (SELECT UID FROM tweets)",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM tweets",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email FROM user_profiles WHERE name  =  \"Mary\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles WHERE name  =  \"Iron Man\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT enr FROM college ORDER BY enr DESC LIMIT 3",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT state FROM college ORDER BY enr DESC LIMIT 3",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 3",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "Select count ( distinct course_id )  from student_course_registrations",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( * )  FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.station_id FROM train AS t1 JOIN route AS t2 ON t1.id   =   t2.train_id GROUP BY t2.train_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT TIME  FROM train WHERE destination   =   'Chennai'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( * )  FROM train WHERE destination   =   'Chennai'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT train_number FROM train WHERE destination   =   'Chennai'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT count ( * )  from railway",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Train_Num from train where Name  =  \"Sewagram Exp\"",
         "databaseID": "railway"
      },
      {
         "query": "SELECT location from railway where Railway  =  \"MR\"",
         "databaseID": "railway"
      },
      {
         "query": "SELECT t1.name ,  t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' GROUP BY t2.swimmer_id HAVING count(*)  >  1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' GROUP BY t2.swimmer_id HAVING count ( * )   >  1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' GROUP BY t2.swimmer_id HAVING count ( * )   >  1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name, t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' except SELECT t1.name, t1.nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' GROUP BY t2.swimmer_id HAVING count ( * )   >  1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname FROM student WHERE age BETWEEN 20 AND 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * )    > =    2",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company where Headquarters  =  \"China\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT industry FROM company where name  =  \"PetroChina\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.apt_number   =   \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.bathroom_count FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.apt_number   =   \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.apt_number   =   \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex ORDER BY avg(t2.unsure_rate) DESC LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( Poll_Source )  from candidate",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( people_id )  from people",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  from people where sex = 'F'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex = 'F'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex = 'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num  =  T2.prof_num WHERE crs_code  =  'QM-261'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_FNAME  =  \"James\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_DOB FROM EMPLOYEE WHERE EMP_FNAME  =  \"James\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_HIREDATE FROM EMPLOYEE WHERE EMP_FNAME  =  \"James\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT avg ( height )  ,  avg ( weight )  FROM people WHERE sex   =   'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  FROM people where sex  =  'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT * FROM people order by height desc limit 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE sex   =   'F'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Room FROM Faculty where Rank = \"Instructor\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Fname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor \nORDER BY count ( * )  LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select order_id from Order_items order by order_quantity limit 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select T1.payment_method from customers as T1 join customer_orders as T2 on T1.customer_id  =  T2.customer_id where T2.order_id  =  11",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM products",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( DISTINCT order_id )  FROM order_items",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_id NOT IN  (  SELECT product_id FROM Order_items  ) ",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT customer_status_code  FROM Customers WHERE first_name  =  \"Marina\" OR last_name   =   \"Kohler\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT phone_number  FROM Customers WHERE first_name  =  \"Marina\" OR last_name   =   \"Kohler\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT email_address FROM Customers WHERE first_name  =  \"Marina\" OR last_name   =   \"Kohler\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5",
         "databaseID": "formula_1"
      },
      {
         "query": "select forename,surname from drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT  ( T1.driverid )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5 ) ",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT state FROM customers GROUP BY state ORDER BY count(*) LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT state FROM customers GROUP BY state ORDER BY count ( * )  LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count ( customer_id )  FROM customers where customer_type_code  = \"Good Credit Rating\"",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT state FROM customers where customer_type_code  = \"Good Credit Rating\"",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT customer_id FROM customers where customer_type_code  = \"Good Credit Rating\"",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT avg(floors) ,  max(floors) ,  min(floors) FROM building",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT  max ( floors ) FROM building",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT  name FROM building where building_id  =  '1'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT  name FROM building where floors  =  12",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT avg ( floors )  ,  min ( floors )  FROM building",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * )  LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Place FROM people where Name  =  'Ty Conklin'",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Date FROM people where Name  =  'Ty Conklin'",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Height FROM people where Name  =  'Ty Conklin'",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Weight FROM people where Name  =  'Ty Conklin'",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Name  FROM people where Weight  =  90.0 and Name! = 'Ty Conklin'",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT TYPE FROM ship WHERE Tonnage  >  6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage  <  4000",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT distinct TYPE FROM ship WHERE Tonnage > 3000 and Tonnage<5000",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Nationality FROM ship order by Tonnage desc limit 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Nationality FROM ship order by Tonnage limit 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT max ( Tonnage ) ,min ( Tonnage )  FROM ship WHERE Type = 'Cargo ship'",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT max ( Tonnage ) ,min ( Tonnage )  FROM ship WHERE Type = 'Battle ship'",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name HAVING COUNT(*)  >  1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT count ( * )  from country",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT languages from country where name  =  \"Finland\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT speed from roller_coaster where name  =  \"Dauling Dragon\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.name ,  T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T1.register_year  =  2016 GROUP BY T2.branch_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year   =   2016 GROUP BY T2.branch_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T1.register_year   =   2016 GROUP BY T2.branch_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name, membership_amount FROM branch where membership_amount  =   ( select min ( membership_amount )  from branch where open_year like \"%2017%\" ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name, open_year FROM branch where open_year  =   ( select min ( open_year )  from branch ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.title ,  max(T1.price) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( distinct title )  from film",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT title from film",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.title, max ( price )  from film as T1 join schedule as T2 on T1.film_id  =  T2.film_id group by T1.film_id",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT * FROM Rooms ORDER BY basePrice ASC LIMIT 1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT * FROM Rooms ORDER BY basePrice desc LIMIT 1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT avg ( basePrice )  FROM Rooms",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName FROM Rooms order by maxOccupancy desc limit 1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT RESULT ,  COUNT(*) FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT RESULT ,  COUNT ( * )  FROM music_festival GROUP BY RESULT ORDER BY COUNT ( * )  DESC",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.u_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id WHERE T2.rating  =  10",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T2.rank = 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT count(*) FROM player WHERE birth_country = 'USA' AND bats  =  'R';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_country FROM player",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_state FROM player where player_id  =  \"aardsda01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_city FROM player where player_id  =  \"aardsda01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_city FROM player where player_id  =  \"aaronto01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM player WHERE birth_country  =  'USA' AND bats   =   'R'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM player WHERE birth_country  =  'USA' AND bats   =   'R' AND death_year < 2019 AND death_country  =  'USA'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM player WHERE bats   =   'R' AND death_year > 2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM player WHERE bats   =   'R' AND birth_year > 1980",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count(*) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.sex  =  \"F\" AND T1.allergy  =  \"Milk\" OR T1.allergy  =  \"Eggs\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT stuid, allergy from has_allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.allergy   =   \"Milk\" OR T1.allergy   =   \"Eggs\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "party_people"
      },
      {
         "query": "select Member_in_charge_ID, count ( * )  from party_events group by Member_in_charge_ID order by count ( * )  desc limit 1",
         "databaseID": "party_people"
      },
      {
         "query": "select Member_Name from member where Member_ID  =  4",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT max(Number_cities) ,  min(Number_cities) FROM market",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Number_cities FROM market where country  =  \"USA\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT count ( country )  FROM market",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT market_id FROM market where country  =  \"China\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT max ( Number_cities )  ,  min ( Number_cities )  FROM market",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.country ,  T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Janessa\" AND T2.last_name  =  \"Sawayn\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"MARROTTE\" AND T2.lastname  =  \"KIRK\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT lastname from list where classroom  =  101",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT firstname from list where classroom  =  102",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select count ( * )  from Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_name from Products where color_code  =  2",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select characteristic_data_type from Characteristics where characteristic_id  =  1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id where Customer_name = \"America Jaskolski\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id where Customer_name = \"Mrs. Hanna Willms\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( Policy_ID )  FROM Customers_Policies",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count(*) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Pen and Paper Gaming\"",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( * )  from club",
         "databaseID": "club_1"
      },
      {
         "query": "select clubName from club",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( * )  from member_of_club",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Pen and Paper Gaming\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT(*)  >=  3",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT avg ( lifespan )  FROM representative",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )    > =    2",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )    > =    3",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT product_id FROM Order_Items GROUP BY product_id HAVING count(*)  >  3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum(total_amount_purchased)  >  80000",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum ( total_amount_purchased )   >  80000",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_supplied_to FROM Product_Suppliers where supplier_id  =  4 order by date_supplied_to desc limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT distinct College FROM match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Player FROM match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Player FROM match_season WHERE Position = 'Midfielder'",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT College FROM match_season WHERE POSITION  =  \"Midfielder\" INTERSECT SELECT College FROM match_season WHERE POSITION  =  \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id  =  T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT last_name FROM customer WHERE customer_id  = 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT inventory_id FROM rental WHERE rental_id  = 3",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id   =   T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT TIME ,  train_number FROM train WHERE destination  =  'Chennai' ORDER BY TIME",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT TIME  FROM train WHERE destination   =   'Chennai'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT name FROM train WHERE destination   =   'Chennai'",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT origin FROM train WHERE name  =  \"Ananthapuri Express\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.age  <  20",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( gamesplayed )  FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.age  <  20",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( hoursperweek )   FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T2.age  <  20",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sportName,count ( * )  from sportsinfo where stuid in  ( select stuid from student where age < 20 )  group by sportname order by count ( * )  desc limit 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "select  actid  from Faculty_Participates_in  where FacID = 1082",
         "databaseID": "activity_1"
      },
      {
         "query": "select  Rank  from Faculty  where Fname = \"Mark\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area   =   \"Central Coast\"",
         "databaseID": "wine_1"
      },
      {
         "query": "select state from APPELLATIONS where appelation in  ( SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area   =   \"Central Coast\" ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "select avg ( price )  from wine",
         "databaseID": "wine_1"
      },
      {
         "query": "select * from wine where price >  ( select avg ( price )  from wine ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count(departmentID) LIMIT 1;",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT * FROM department GROUP BY departmentID ORDER BY count ( * )  LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT head FROM department GROUP BY departmentID ORDER BY count ( departmentID )  LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT max(gradepoint) ,  min(gradepoint) FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT max ( gradepoint )   FROM GRADECONVERSION",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT lettergrade, max ( gradepoint )   FROM GRADECONVERSION group by lettergrade",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT lettergrade, max ( gradepoint ) , min ( gradepoint )   FROM GRADECONVERSION group by lettergrade",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\" OR State  =  \"Indiana\"",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Lifespan FROM representative",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Lifespan FROM representative WHERE State  =  \"New York\"",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Lifespan FROM representative WHERE State  =  \"Indiana\"",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Title FROM film WHERE Film_ID NOT IN (SELECT Film_ID FROM film_market_estimation)",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT COUNT ( DISTINCT Title )  FROM film",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT count ( Title )  FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT film_ID FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Title from film WHERE film_ID IN  ( SELECT film_ID FROM film WHERE Film_ID NOT IN  ( SELECT Film_ID FROM film_market_estimation )  ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count  LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments ORDER BY bathroom_count desc  LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT room_count, apt_number FROM Apartments ORDER BY bathroom_count desc LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT First_name, last_name FROM employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE employee_id NOT IN  ( SELECT employee_id FROM job_history ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE employee_id IN  ( SELECT employee_id FROM job_history ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project WHERE T1.hours  >  300 GROUP BY T1.name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( distinct Scientist )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.hours  >  300",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( distinct Scientist )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.hours  <  300",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects WHERE hours > 300",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT t2.Scientist FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project WHERE T1.name  =  'Aerodynamics and Bridge Design'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( Name )   FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT sum ( membership_amount )   FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT membership_amount FROM branch  order by membership_amount desc limit  1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT min ( membership_amount )  FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT color_code from products where product_name = 'basil'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code GROUP BY t2.color_description ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products where color_code = 4",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price FROM products where product_name = 'peper'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",
         "databaseID": "baseball_1"
      },
      {
         "query": "select player_id from salary order by salary desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "select count ( player_id )  from player where birth_country  =  'USA'",
         "databaseID": "baseball_1"
      },
      {
         "query": "select team_id from team order by rank limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2005 AND T3.name  =  'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2007 AND T3.name  =  'Washington Nationals'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name FROM Person WHERE gender  =  'male' ORDER BY age",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person WHERE gender   =   'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person WHERE name   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person WHERE job   =   'doctor'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.apt_type_code ,  T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( DISTINCT building_id )  FROM apartment_buildings",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( DISTINCT apt_type_code )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.apt_type_code FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_manager  =  \"Kyle\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.VICE_President_VOTE WHERE T1.age  =  18",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.VICE_President_VOTE WHERE T1.age   =   18",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_Vote",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT DISTINCT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =  \"M\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products WHERE product_type_code  =  \"Hardware\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products WHERE product_type_code  =  \"Clothes\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id GROUP BY T1.artist_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT * FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * )  LIMIT 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT player_api_id FROM Player WHERE height  >=  180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating  >  85",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT player_api_id, player_name FROM Player",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id  =  T2.player_fifa_api_id",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id  =  T2.player_fifa_api_id WHERE T2.overall_rating > 85",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT player_api_id FROM Player WHERE height > 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT max(used_kb) , min(used_kb) , avg(used_kb) FROM screen_mode;",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT max ( used_kb )  FROM screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT min ( used_kb )  FROM screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT avg ( used_kb )  FROM screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"laurel\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_category_code FROM products WHERE product_name   =   \"laurel\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"laurel\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price FROM products where product_name   =   \"laurel\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",
         "databaseID": "chinook_1"
      },
      {
         "query": "select email from customer where customerid = '1'",
         "databaseID": "chinook_1"
      },
      {
         "query": "select count ( * )  from employee where city = 'Calgary'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )   > =   10",
         "databaseID": "chinook_1"
      },
      {
         "query": "select title from employee where employeeid =  2",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT investor_id ,  avg(share_count) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg(share_count)",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT investor_id ,  avg ( share_count )  FROM TRANSACTIONS GROUP BY investor_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT investor_id ,  avg ( share_count )  FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg ( share_count ) ",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "Select date_of_transaction from transactions",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "Select date_of_transaction from transactions where transaction_type_code  =  \"SALE\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "Select date_of_transaction from transactions where transaction_type_code  =  \"PUR\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_name FROM Employees  where Role_code  =  \"HR\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT role_code FROM Employees order by employee_id desc limit 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song ORDER BY releasedate LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM song ORDER BY releasedate LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN  ( SELECT MIN ( salary )  FROM employees GROUP BY department_id ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN  ( SELECT MAX ( salary )  FROM employees GROUP BY department_id ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "select FIRST_NAME,LAST_NAME from employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "select first_name,last_name,salary,manager_id from employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM  =  T3.EMP_NUM WHERE DEPT_NAME  =  \"Biology\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.EMP_FNAME ,  T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM   =   T3.EMP_NUM WHERE DEPT_NAME   =   \"Biology\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from employee",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT max ( prof_extension )  from professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT min ( emp_num )  from Employee",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.channel_code  =  'Email'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.channel_code   =   'Email'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name, t1.date_became_customer FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.channel_code   =   'Email'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.active_to_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.channel_code   =   'Email'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  \"Devin Mills\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT t1.customer_id FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  \"Devin Mills\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.payment_method  =   ( SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name  =  \"Devin Mills\" ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T1.year   =   2000 AND T2.city   =   'Atlanta'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT address_content FROM addresses WHERE city  =  \"East Julianaside\" AND state_province_county  =  \"Texas\" UNION SELECT address_content FROM addresses WHERE city  =  \"Gleasonmouth\" AND state_province_county  =  \"Arizona\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT country from Addresses where zip_postcode = 416",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city from Addresses where state_province_county = \"SouthCarolina\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT address_content from Addresses where state_province_county = \"Colorado\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city from Addresses where state_province_county = \"NewJersey\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city from Addresses where country = \"USA\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT title ,  phone ,  hire_date FROM employees WHERE first_name  =  \"Nancy\" AND last_name  =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT first_name FROM employees WHERE title = \"General Manager\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT TYPE ,  count(*) FROM operate_company GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM operate_company WHERE Type  =  'Subsidiary'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT * FROM rooms WHERE roomid IN  ( SELECT DISTINCT room FROM reservations ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT * FROM rooms WHERE roomid NOT IN  ( SELECT DISTINCT room FROM reservations ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT LOCATION ,  count(*) FROM gas_station GROUP BY LOCATION ORDER BY count(*)",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT LOCATION ,  count ( * )  FROM gas_station GROUP BY LOCATION ORDER BY count ( * ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT LOCATION FROM gas_station GROUP BY LOCATION having count ( * )   > 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT open_year FROM gas_station GROUP BY open_year having count ( * )   > 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT country FROM stadium WHERE capacity  >  60000 INTERSECT SELECT country FROM stadium WHERE capacity  <  50000",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT country FROM stadium group by country having count ( * )   > =   2",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT distinct country FROM stadium WHERE capacity  >  60000",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count(*) FROM driver WHERE home_city  =  'Hartford' OR age  <  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )  FROM driver WHERE home_city   =   'Hartford'",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT name FROM driver WHERE home_city   =   'Hartford'",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT name FROM driver WHERE age  <  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )  FROM driver WHERE home_city   =   'Hartford' OR age  <  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT min(membership_amount) ,  max(membership_amount) FROM branch WHERE open_year  =  2011 OR city  =  'London'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT min ( membership_amount )  FROM branch WHERE open_year   =   2011 OR city   =   'London'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT max ( membership_amount )  FROM branch WHERE open_year   =   2011 OR city   =   'London'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id = 50",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT email FROM employees WHERE commission_pct   =   \"null\" AND salary BETWEEN 7000 AND 12000 AND department_id  =  50",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT email FROM employees WHERE commission_pct  =  \"null\"",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT email FROM employees WHERE commission_pct > 0",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE salary >12000",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT FIRST_NAME,LAST_NAME  FROM employees WHERE salary >12000",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id  =  T2.people_id WHERE T1.year  =  2016 AND T2.is_male  =  'F' AND T2.country  =  'Canada'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id   =   T2.people_id WHERE T1.year   =   2016 AND T2.is_male   =   'F'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id   =   T2.people_id WHERE T1.year   =   2016 AND T2.is_male   =   'F' AND T2.country   =   'Canada'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM people WHERE country  =  \"Canada\" AND is_male  =  \"F\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id   =   T2.people_id OR T1.male_id  =  t2.people_id WHERE T1.year   =   2016",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id   =   T2.people_id OR T1.male_id  =  t2.people_id WHERE T1.year   =   2016 AND t2.country  =  \"Canada\"",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT name FROM storm WHERE storm_id NOT IN  ( SELECT storm_id FROM affected_region ) ",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT Number_city_affected from affected_region where storm_id  =   ( select storm_id from storm where Name = 'Two' ) ",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT Storm_id from storm where name  = 'Two'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person order  by age limit 1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE age  >  30 AND job   =   'engineer'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE gender = 'female'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT Official_Name FROM city WHERE City_ID NOT IN (SELECT Host_city_ID FROM farm_competition)",
         "databaseID": "farm"
      },
      {
         "query": "SELECT population FROM city WHERE City_ID  =  2",
         "databaseID": "farm"
      },
      {
         "query": "SELECT census_ranking FROM city WHERE official_name  =  \"Perth-Andover\"",
         "databaseID": "farm"
      },
      {
         "query": "SELECT hosts FROM farm_competition WHERE Theme like \"%Carnival M is back%\"",
         "databaseID": "farm"
      },
      {
         "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =    ( SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT customer_phone FROM  available_policies WHERE policy_type_code  =  \"Life Insurance\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select count ( * )  from staff where gender  =  1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select count ( * )  from staff where gender ! =  1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name LIKE '%Smith%'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN WHERE T3.name LIKE '%Smith%'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name from scientists WHERE name LIKE '%Smith%'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code HAVING count ( * )  > 4",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "select Member_ID from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "select Name from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "select member_id from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1 ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "select name from member where level in  ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * )  ASC LIMIT 1 ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count(*)  >=  2",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )    > =    2",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )    > =    3",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id,Document_Date FROM Documents GROUP BY project_id HAVING count ( * )    > =    3",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select document_date from documents where project_id in  ( SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )    > =    3 ) ",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )    > =    3",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id GROUP BY T2.staff_id HAVING COUNT (*)  >  1",
         "databaseID": "department_store"
      },
      {
         "query": "select date_assigned_to from  Staff_Department_Assignments where job_title_code  =  'Department Manager'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id GROUP BY T2.staff_id HAVING COUNT  ( * )   >  1",
         "databaseID": "department_store"
      },
      {
         "query": "select date_assigned_from from Staff_Department_Assignments where job_title_code  =  'Sales Person'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT invoice_number FROM invoices WHERE invoice_date > \"2007-12-25\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT invoice_number FROM invoices WHERE invoice_date < \"1989-09-03\" OR invoice_date > \"2007-12-25\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT name FROM Employee WHERE salary  >  (SELECT avg(salary) FROM Employee)",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee WHERE salary  >   ( SELECT avg ( salary )  FROM Employee ) ",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( salary )  FROM Employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee WHERE salary  <   ( SELECT avg ( salary )  FROM Employee ) ",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Employee WHERE salary  >   ( SELECT avg ( salary )  FROM Employee ) ",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Employee WHERE salary  <   ( SELECT avg ( salary )  FROM Employee ) ",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID ORDER BY T2.Ranking",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID ORDER BY T2.Ranking",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T3.carrier FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID where T2.District  =  \"Alberta\"",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T2.district FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID where T3.carrier  =  \"TMobile\" and T2.district ! =  \"Alberta\"",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT name FROM phone where carrier  =  \"TMobile\"",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count ( * )  FROM university WHERE affiliation  =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count ( * )  FROM university WHERE affiliation  =  'Public' and enrollment > 20000",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT distinct T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID WHERE T2.Type   =   \"Program Talent Show\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT Location from festival_detail where Festival_Name = 'LA Awards'",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT count(*) ,  T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code  =  T2.project GROUP BY T1.name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( * )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project where T1.Code = \"AeH1\"",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( * )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project where T1.Code = \"Ast3\"",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( * )  FROM projects AS T1 JOIN assignedto AS T2 ON T1.code   =   T2.project where T1.Code = \"AeH3\"",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT avg(Event_Attendance) ,  max(Event_Attendance) FROM event",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT avg ( Event_Attendance )  FROM event",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT max ( Event_Attendance )  FROM event",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT min ( Event_Attendance )  FROM event",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID ORDER BY T2.quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT name from technician order by age DESC limit 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT team from machine order by value_points DESC limit 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Making_Year from machine order by  quality_rank limit 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "select count ( * )  from ship",
         "databaseID": "ship_1"
      },
      {
         "query": "select count ( * )  from captain",
         "databaseID": "ship_1"
      },
      {
         "query": "select Captain_id from captain order by age desc  limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "select count ( distinct rank )  from captain",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM orders",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT * FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id having count ( * )   =  3",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM customers where customer_name  =  \"George\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM customers where customer_name  =  \"Jeramie\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.card_type_code ,  count(*) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id  =  T2.card_id GROUP BY T2.card_type_code",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  from Customers_Cards",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  from Customers_Cards where card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  from Customers_Cards where card_type_code  =  \"Debit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"hot\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   \"hot\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   \"hot\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.typical_selling_price FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"lotus\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code where detention_id = 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code   =   T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * ) DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT count ( * )  FROM perpetrator",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT location FROM perpetrator",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT location FROM perpetrator order by Killed desc limit 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT max(t1.low_temperature) ,  avg(t1.precipitation) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT max ( t1.low_temperature )  FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id WHERE t2.network_name   =   \"Amersham\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t1.day_of_week FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id WHERE t2.network_name   =   \"Amersham\" order by low_temperature desc  limit 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT avg ( t1.precipitation )  FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id WHERE t2.network_name  =  \"Amersham\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT lesson_date FROM Lessons",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT avg ( lesson_time )  FROM Lessons",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT price FROM Lessons ORDER BY price DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  \"Ray\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT sum(duration) ,  max(duration) FROM trip WHERE bike_id  =  636",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT sum ( duration )  FROM trip WHERE bike_id   =   636",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT max ( duration )  FROM trip WHERE bike_id   =   636",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT max ( duration )  FROM trip WHERE bike_id   =   454",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT Room FROM FACULTY WHERE Rank  =  \"Professor\" AND Building  =  \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Room, Phone FROM FACULTY WHERE FacID = 1121",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Room FROM FACULTY WHERE Rank   =   \"Professor\" AND Building   =   \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid",
         "databaseID": "twitter_1"
      },
      {
         "query": "select count ( * )  from tweets",
         "databaseID": "twitter_1"
      },
      {
         "query": "select count ( * )  from user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "select email from user_profiles where name  =  \"Iron Man\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T2.text FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid where T1.name  =  \"Iron Man\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  2",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * )   >  2",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_type_code FROM documents WHERE document_name  =  \"Learning English\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * )   >  2",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T2.Name ,  COUNT(*) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID  =  T2.technician_ID GROUP BY T2.Name",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT count ( * )  from technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T2.Name ,  T1.machine_id FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID   =   T2.technician_ID",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T2.Name ,  T1.machine_id,T2.starting_year,T2.age FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID   =   T2.technician_ID",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT title FROM item WHERE i_id NOT IN  ( SELECT i_id FROM review ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id FROM item WHERE i_id NOT IN  ( SELECT i_id FROM review ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "select count ( distinct i_id )  from review",
         "databaseID": "epinions_1"
      },
      {
         "query": "select distinct ( i_id )  from review",
         "databaseID": "epinions_1"
      },
      {
         "query": "select rating  from review where i_id  =  3",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.coupon_amount  =  500",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT t1.customer_id FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.coupon_amount   =   500",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT country FROM MATCH where Location  =  'Swan River , Perth'",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT age FROM pilot where name  =  'Mr. Cristian Halvorson II'",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT country FROM match where Location  =  \"Mina Zayid , Abu Dhabi\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id   =   t2.winning_pilot ORDER BY t1.age desc LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT country FROM MATCH where location  =  'Flamengo Beach , Rio de Janeiro'",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name  =  'Noel CV' OR document_name  =  'King Book'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select count ( * )  from documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name   =   'Noel CV'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_type_code ,  document_name ,  document_description FROM Documents WHERE document_name   =   'King Book'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Night\"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id WHERE t2.Time_of_day   =   \"Morning\" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id WHERE t2.Time_of_day   =   \"Night\"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT name from program where owner  =  \"Beijing Television  ( BTV ) \"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT launch from program where name  =  \"Kaku\"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT owner from program where name  =  \"Toonmax\"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name ,  count(T1.reports_to) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count(T1.reports_to) DESC LIMIT 1;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from employees where title like \"%manager%\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count(*) ,  T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_ID FROM Claims where Claim_ID  =  \"143\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Date_Claim_Settled FROM Claims  ORDER BY Date_Claim_Settled DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Amount_Claimed FROM Claims where Date_Claim_Settled  =  \"2018-03-09\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT CLASS FROM captain GROUP BY CLASS HAVING count(*)  >  2",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( * )  FROM captain where class  =  'Third-rate ship of the line'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name, club_id FROM CLub",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT player_id, name, club_id FROM player",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name FROM CLub WHERE Club_ID NOT IN  ( SELECT Club_ID FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT regional_population, GDP FROM city WHERE city_id  =  2",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT Jan, Apr, Oct FROM temperature WHERE city_id  =  2",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Mar > 21",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id WHERE T2.Mar  <  T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id   =   T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT city FROM city ORDER BY regional_population DESC LIMIT 3",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT avg ( GDP )  FROM city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >  (SELECT avg(transaction_amount) FROM Financial_transactions)",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT avg ( transaction_amount )  FROM Financial_transactions",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT transaction_id FROM Financial_transactions WHERE transaction_amount  >   ( SELECT avg ( transaction_amount )  FROM Financial_transactions ) ",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT transaction_date FROM Financial_transactions WHERE transaction_amount  >   ( SELECT avg ( transaction_amount )  FROM Financial_transactions ) ",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE WHERE year  =  2006 order by price desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE WHERE Price  >   ( SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006 ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Name FROM WINE WHERE Price  >   ( SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006 ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT COUNT(*) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Rock\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Jazz\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT composer FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Rock\" group by composer order by count ( * )  desc limit 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT composer FROM track where name like \"%B%\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >   ( SELECT min ( resolution )  FROM song WHERE languages   =   \"english\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "select count ( * )  from song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT GName FROM Video_games WHERE GType = \"Frist-person shooter\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT avg(damage_millions_USD) ,  max(damage_millions_USD) FROM storm WHERE max_speed  >  1000",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT avg ( damage_millions_USD )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT max ( damage_millions_USD )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT min ( damage_millions_USD )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT min ( damage_millions_USD )  FROM storm WHERE max_speed  >  1000",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT max ( damage_millions_USD )  FROM storm WHERE max_speed  >  1000",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count(*)  >=  2",
         "databaseID": "storm_record"
      },
      {
         "query": "select count ( * )  from region",
         "databaseID": "storm_record"
      },
      {
         "query": "select region_name from region",
         "databaseID": "storm_record"
      },
      {
         "query": "select region_code from region where region_name  =  \"Afghanistan\"",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id  =  T2.region_id GROUP BY T1.region_id order by count ( * )  desc limit 1",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( * )  FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT user_name FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT user_name  FROM users\nwhere user_name not in  ( \nSELECT user_name  FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Francisco State University\" AND t1.year  =  2000",
         "databaseID": "csu_1"
      },
      {
         "query": "select Id from Campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "select CampusFee from csu_fees order by  CampusFee desc limit 1",
         "databaseID": "csu_1"
      },
      {
         "query": "select Year from Campuses where Campus  =  'California State University-Bakersfield'",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Rate - T2.basePrice  <  0",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Rate - T2.basePrice  <  0",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT Room FROM Reservations GROUP BY Room ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY T2.department_name",
         "databaseID": "hr_1"
      },
      {
         "query": "select DEPARTMENT_ID,DEPARTMENT_NAME from  departments",
         "databaseID": "hr_1"
      },
      {
         "query": "select T1.DEPARTMENT_ID, count ( * )  from  departments AS T1 JOIN employees AS T2 where  T1.DEPARTMENT_ID  =  T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID",
         "databaseID": "hr_1"
      },
      {
         "query": "select T1.DEPARTMENT_ID, T1.DEPARTMENT_NAME, count ( * )  from departments AS T1 JOIN employees AS T2 where T1.DEPARTMENT_ID  =  T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name ,  customer_id FROM customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name ,  customer_id FROM customers WHERE customer_address LIKE \"%TN%\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_address FROM customers WHERE customer_address LIKE \"%TN%\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publication_Date FROM publication",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * )  DESC",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT T2.title ,  T2.film_id ,  T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.film_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  from film",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT min ( release_year ) , max ( release_year )  from film",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT min ( rental_rate ) , max ( rental_rate )  from film",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.title  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.film_id  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.description  FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT Name FROM member WHERE Country  =  \"United States\" OR Country  =  \"Canada\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT count ( Name )  FROM member WHERE Country   =   \"United States\" OR Country   =   \"Canada\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Name FROM member WHERE Country   =   \"United States\" OR Country   =   \"Canada\"",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Name FROM member WHERE Country   =   \"United States\" OR Country   =   \"Canada\"\norder by name",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT sum(T2.room_count) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T1.building_short_name  =  \"Columbus Square\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( T2.room_count )  FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id   =   T2.building_id WHERE T1.building_short_name   =   \"Columbus Square\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT bathroom_count from  Apartments  where \napt_id = 2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT Count ( distinct payment_method )  FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT Count ( * )  FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum ( t3.order_quantity )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id GROUP BY t1.customer_name ORDER BY sum(t3.order_quantity) DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum ( t3.order_quantity )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )   FROM customers where date_became_customer <  ( SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity )  DESC LIMIT 1 ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T2.Fname ,  T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID  =  T2.StuID WHERE T1.DNO  =  140",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Fname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID   =   T2.StuID WHERE T1.DNO   =   140",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Lname  FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID   =   T2.StuID WHERE T1.DNO   =   140",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT age from Student where LName  =  'Lee'",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT StuID from Student where LName  =  'Smith'",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DEPT_NAME FROM DEPARTMENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT distinct ( DEPT_CODE )  FROM DEPARTMENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname, T1.STU_LNAME FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.city  =  'new york city'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT * FROM all_star GROUP BY team_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT * FROM player AS T1 JOIN all_star AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.player_id FROM player AS T1 JOIN all_star AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "select count ( * )  from Dorm_amenity",
         "databaseID": "dorm_1"
      },
      {
         "query": "select amenity_name from Dorm_amenity",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid   =   T2.amenid GROUP BY T2.amenid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( distance )  FROM Flight",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT max ( distance )  FROM Flight",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT max ( price )  FROM Flight",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_gender,  staff_name FROM staff where staff_id = 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT  job_title_code from Staff_Department_Assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =   \"AC/DC\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t1.campus   =   \"San Jose State University\" AND t2.year   =   2000",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT sum ( degrees )  FROM degrees WHERE Campus  =  5",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t2.Campus  =  5",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t2.Campus  =  19",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT sum ( degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON t1.id   =   t2.campus WHERE t1.campus   =   \"San Jose State University\" AND t2.year   =   2001",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   \"900\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT login_name FROM customers WHERE Customer_first_name  =  \"Dee\" AND Customer_middle_initial  =  \"A\" AND Customer_last_name  =  \"Larkin\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT COUNT ( customer_id )  FROM customers",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id  =  T2.s_id GROUP BY T2.s_id HAVING count(*)  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id   =   T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred  >  115",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT distinct TYPE FROM artwork",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT TYPE FROM artwork where name  =  \"Loving you\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( DISTINCT t1.product_name )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   \"warm\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t3.characteristic_name   =   \"warm\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name from products where typical_buying_price  =  352447.2874677",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT color_code from products where typical_buying_price  =  352447.2874677",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE  amount_of_transaction  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100 OR amount_of_transaction  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT document_id , count(copy_number) FROM Draft_Copies GROUP BY document_id ORDER BY count(copy_number) DESC LIMIT 1;",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT count ( * )  FROM Draft_Copies",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT document_id FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT document_id , count ( copy_number )  FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  from addresses",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name from staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.city from addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT * from addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id WHERE T2.first_name  =  \"Kaitlin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID WHERE T2.Num_of_Audience  >  200",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID   =   T2.Debate_ID JOIN people AS T3 ON T1.Affirmative   =   T3.People_ID WHERE T2.Num_of_Audience  >  200",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID   =   T2.Debate_ID JOIN people AS T3 ON T1.Affirmative   =   T3.People_ID WHERE T2.Num_of_Audience  >  200 order by T3.age desc limit 1",
         "databaseID": "debate"
      },
      {
         "query": "SELECT party from people where name  =  \"James Humphrey\"",
         "databaseID": "debate"
      },
      {
         "query": "SELECT district from people where name  =  \"James Humphrey\"",
         "databaseID": "debate"
      },
      {
         "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_id FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code ! =  \"Credit Card\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code ! =  \"Credit Card\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code ! =  \"Credit Card\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_email, customer_phone FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code ! =  \"Credit Card\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  <  100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T1.attendance  >  500",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  <  100",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  500",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id   =   T2.exhibition_id WHERE T1.attendance  >  500",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_short_name FROM Apartment_Buildings WHERE building_id  =  133",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_manager FROM Apartment_Buildings WHERE building_full_name  =  \"Mercedes House\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_address FROM Apartment_Buildings WHERE building_manager  =  \"Melyssa\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * )  LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player GROUP BY Occupation ORDER BY COUNT ( * )  LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player GROUP BY Occupation ORDER BY COUNT ( * )  desc LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Sponsor_name FROM player GROUP BY Occupation ORDER BY COUNT ( * )  desc LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_ID,Customer_ID,Policy_Type_Code FROM policies",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_Type_Code FROM policies",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Francisco State University\" AND T2.year  =  1996",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT Campus FROM Campuses WHERE Location  =  'San Francisco'",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t1.campus   =   \"San Francisco State University\" AND T2.year   =   1996",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.Campus FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t2.year   =  1996 AND T2.CampusFee  =  2258",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.County FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id   =   t2.campus WHERE t2.year   =  1996 AND T2.CampusFee  =  2258",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT county FROM campuses WHERE Campus  =  'San Francisco State University'",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT count ( * )  FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT t2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT count ( * )  ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id GROUP BY T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT(*)  >  2",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT ( * )   >  2",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT ( * )   >  2 ORDER BY days_held DESC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT name FROM wrestler WHERE LOCATION  =  'Tokyo , Japan'",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_name  FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Document_Description FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  2 UNION SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  =  1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.id ,  T1.name  FROM architect AS T1 JOIN bridge AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id HAVING count ( * )    =   2",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id HAVING count ( * )    =   1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE city  =  \"San Francisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING bikes_available > 10",
         "databaseID": "bike_1"
      },
      {
         "query": "select name from station order by lat desc limit 1",
         "databaseID": "bike_1"
      },
      {
         "query": "select installation_date from station order by lat desc limit 1",
         "databaseID": "bike_1"
      },
      {
         "query": "select id from station where installation_date<'8/6/2013' order by dock_count desc limit 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Student WHERE sex   =   'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname   =   \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Fname, Lname FROM Student WHERE StuID  =  1002",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Fname, Lname FROM Student WHERE StuID  =  1003",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM dorm where gender  =  \"F\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM dorm where gender  =  \"M\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM dorm where gender  =  \"M\" or gender  =  \"F\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm where gender  =  \"X\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  from invoices",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  from orders",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT customer_id from orders where order_id  =  3",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.country   =   'China' GROUP BY T1.name ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT DISTINCT ( COUNT ( name )  )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT COUNT ( DISTINCT country )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE openning_year  =  2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year  =  2011",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE openning_year   =   2010",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE openning_year   =   2011",
         "databaseID": "cinema"
      },
      {
         "query": "select count ( * )  from\n ( SELECT LOCATION FROM cinema WHERE openning_year   =   2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year   =   2011 ) ",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT name ,  LOCATION ,  seating FROM track ORDER BY year_opened DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name FROM track ORDER BY year_opened DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Seating FROM track where Name  =  'Chicagoland Speedway'",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Location FROM track where Name  =  'Chicagoland Speedway'",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID WHERE T1.Population  >  1000",
         "databaseID": "farm"
      },
      {
         "query": "SELECT city_id FROM city WHERE population > 1000",
         "databaseID": "farm"
      },
      {
         "query": "SELECT DISTINCT T1.CITY_ID FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID WHERE T1.Population  <  1000",
         "databaseID": "farm"
      },
      {
         "query": "SELECT count(*) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser );",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT count ( * )  FROM web_client_accelerator",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT * FROM web_client_accelerator WHERE id NOT IN  (  SELECT accelerator_id FROM accelerator_compatible_browser  ) ",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT count ( * )  FROM web_client_accelerator WHERE id NOT IN  (  SELECT accelerator_id FROM accelerator_compatible_browser  ) ",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_price <  ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT distinct product_name FROM products WHERE product_price <  ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT document_name ,  access_count FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( * )  FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents ORDER BY access_count ASC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT  access_count FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_type_code FROM documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Flight WHERE origin   =   \"Los Angeles\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Flight WHERE origin   =   \"Los Angeles\" and destination  =  \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars )  LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year ,  director FROM  Movie where title = 'The Sound of Music'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY T1.stars DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT name FROM head WHERE head_ID  =  1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT born_state, age FROM head WHERE head_ID  =  3",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg(Gross_in_dollar)  >=  4500000",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film order by Gross_in_dollar DESC limit 1",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )    > =    4500000",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )    > =    4500000",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"",
         "databaseID": "climbing"
      },
      {
         "query": "select count ( * )  from mountain",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T1.Country  =  \"West Germany\"",
         "databaseID": "climbing"
      },
      {
         "query": "select Name from mountain order by Height desc limit 1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT sum(city_population) FROM district WHERE city_area  >  (SELECT avg(city_area) FROM district)",
         "databaseID": "store_product"
      },
      {
         "query": "select district_name from district",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT sum ( city_population )  FROM district WHERE city_area  >   ( SELECT avg ( city_area )  FROM district ) ",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT home_city FROM driver GROUP BY home_city ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )  FROM driver",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT avg ( Age )  FROM driver",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT  T2.Nationality FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T2.name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID order by T3.First_year limit 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT count(*) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items )",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT product_id from Order_Items where order_item_id = 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT product_quantity from Order_Items where order_item_id = 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT production_type_code from Order_Items as T1 join Products as T2 on T1.product_id = T2.product_id where T1.order_item_id = 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT Member_ID FROM Member  where Member_Name = 'Hon Tony Abbott'",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id  =  T2.registration_id WHERE T2.test_result  =  \"Fail\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id order by T1.date_of_completion desc limit 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( distinct student_id )  from  student_course_enrolment",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( distinct T1.student_id )  FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   \"Fail\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id   =   T2.registration_id WHERE T2.test_result   =   \"Fail\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1",
         "databaseID": "device"
      },
      {
         "query": "select shop_name from shop",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT ( * )   >  1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id  =  T2.product_id JOIN bookings AS T3 ON T2.booking_id  =  T3.booking_id WHERE T1.product_name  =  'Book collection A'",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT product_description FROM Products_for_Hire",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T3.booking_start_date ,   T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id   =   T2.product_id JOIN bookings AS T3 ON T2.booking_id   =   T3.booking_id WHERE T1.product_name   =   'Book collection A'",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT avg ( booked_amount )  FROM Products_Booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id  =  T2.college_id GROUP BY T1.college_id ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name_full ,  T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "select count ( distinct player_id )  from player_college where college_id  =   ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.city, T1.state, T1.country FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "Select year from player_college where college_id  =   ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id   =   T2.college_id GROUP BY T1.college_id ORDER BY count ( * )  DESC LIMIT 1 )  group by college_id order by year desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "Select count ( player_id )  from player_college where year  =  \"2018\" and college_id  =  \"texas\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.product_name ,  count(*) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id  =  T2.product_id JOIN Orders AS T3 ON T3.order_id  =  T1.order_id GROUP BY T2.product_name",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.product_name ,  count ( * )  FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id   =   T2.product_id JOIN Orders AS T3 ON T3.order_id   =   T1.order_id GROUP BY T2.product_name",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select unit_price from Products where production_type_code  =  \"Books\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select date_order_placed from Orders where customer_id  =  12",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count(*) FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course WHERE course_id IN  ( SELECT course_id FROM prereq ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  FROM airport WHERE id IN  (  SELECT airport_id FROM flight WHERE pilot   =   'Thompson'  ) ",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  FROM airport as T1 JOIN flight as T2 on T1.id  =  T2.airport_id WHERE T2.pilot   =   'Thompson' and T2.date > 'August 16, 1963'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Vehicle_Flight_number FROM flight WHERE pilot   =   'Thompson' and date  =  'March 1, 1963'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CLASS_ROOM FROM CLASS WHERE CLASS_SECTION   =   1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = \"Nancy\" AND T1.last_name = \"Edwards\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name  =  \"Nancy\" AND T1.last_name  =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name ! =  \"Nancy\" AND T1.last_name ! =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T2.first_name  =  \"Andrew\" AND T2.last_name  =  \"Adams\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id  =  T2.reports_to WHERE T1.first_name  =  \"Andrew\" AND T1.last_name  =  \"Adams\" and T2.first_name ! =  'Nancy' and T2.last_name ! =  'Edwards'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2 ORDER BY T1.Product_Name",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID   =   T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * )    > =    2 ORDER BY T1.Product_Name",
         "databaseID": "solvency_ii"
      },
      {
         "query": "select Product_Price  from  Products  where Product_Name = \"Men suits\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "select max ( Product_Price )   from  Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "select min ( Product_Price )   from  Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "select Product_Type_Code  from  Products  order  by Product_Price limit 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name FROM player WHERE points  >   ( SELECT avg ( points )  FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name FROM player where Points  =   ( SELECT MAX ( Points )  FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT name FROM player where Points  =   ( SELECT MAX ( Points )  FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id  =  T2.i_id GROUP BY T2.i_id HAVING count(*)  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.id FROM instructor AS T1 JOIN advisor AS T2 ON T1.id   =   T2.i_id GROUP BY T2.i_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id   =   T2.i_id GROUP BY T2.i_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Faculty WHERE Rank  =  \"Professor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Faculty WHERE Rank  =  \"AsstProf\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE rank  =  \"AsstProf\" AND Sex  =  \"F\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = \"Bosco\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT staff_id FROM staff where staff_last_name  =  \"Bosco\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT problem_id FROM problems where reported_by_staff_id = 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT count ( * )  FROM problems where reported_by_staff_id = 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT * FROM Staff where staff_last_name = 'Bosco'",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Lacey\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_last_name  =  \"Bosco\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT StuID FROM Student WHERE age  =  (SELECT max(age) FROM Student)",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Major FROM Student group by Major  order by count ( * )  desc limit 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT LName,Fname FROM Student WHERE age   =    ( SELECT max ( age )  FROM Student ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT StuID FROM Student WHERE age   =    ( SELECT max ( age )  FROM Student ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.start_date  =  (SELECT max(start_date) FROM policies)",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.start_date   =    ( SELECT max ( start_date )  FROM policies ) ",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM Customers WHERE Customer_ID  =  263",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_Type_Code from policies Where customer_id  =  334",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT name FROM program",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT name FROM program ORDER BY launch DESC LIMIT 1",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT owner FROM program ORDER BY launch DESC LIMIT 1",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT AVG(T2.UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Rock\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AVG ( T2.UnitPrice )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Rock\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AVG ( T2.Milliseconds )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Rock\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT AVG ( T2.Milliseconds )  FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId   =   T2.GenreId WHERE T1.Name   =   \"Jazz\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE order by price desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT year FROM WINE order by price desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT appelation FROM WINE where name  =  'Giana'",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE where score  =  91",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_address FROM invoices ORDER BY total DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum ( total )  FROM invoices WHERE billing_city   =   \"Chicago\" AND billing_state   =   \"IL\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country FROM invoices WHERE total   =  3.96",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Name FROM climber",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID   =   T2.Mountain_ID WHERE T2.Country   =   \"Uganda\"",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( * )  FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T1.zip_postcode   =   \"918\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T1.zip_postcode   =   \"918\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT order_status FROM orders ORDER BY date_order_placed DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( distinct DEPT_NAME )  FROM DEPARTMENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT emp_jobcode ,  count ( * )  FROM employee GROUP BY emp_jobcode ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "select EMP_HIREDATE from employee where emp_jobcode in  ( SELECT emp_jobcode FROM employee GROUP BY emp_jobcode ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT publisher FROM book_club GROUP BY publisher ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT Author_or_Editor FROM book_club where Book_Title  =  'Unicorn Mountain'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT Author_or_Editor FROM book_club where Book_Title  =  'Death Takes the Stage'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT count(*) FROM ARTIST WHERE artistid NOT IN(SELECT artistid FROM ALBUM)",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( distinct artistid )  FROM ALBUM",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( distinct t1.ArtistId )  FROM ARTIST as t1 join ALBUM as t2 on t1.artistid  =  t2.artistid  WHERE t1.name  =  'Accept'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM ALBUM",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category  =  \"Best Song\" AND RESULT  =  \"Awarded\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT avg ( volume )  FROM music_festival",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT distinct category FROM music_festival",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Date_of_ceremony FROM music_festival WHERE Category   =   \"Best Song\" AND RESULT   =   \"Awarded\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM song GROUP BY artist_name ORDER BY count ( * )  desc LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM song GROUP BY artist_name ORDER BY count ( * )  LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT country FROM artist where artist_name  =  'Enrique'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( * )  FROM Documents WHERE document_id NOT IN  (  SELECT document_id FROM Documents_with_expenses  ) ",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Budget_type_code FROM Documents_with_Expenses",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM tryout WHERE pPos   =   \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM tryout WHERE pPos  ! =   \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Date FROM race WHERE Class  =   ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Race_ID FROM race WHERE Class  =   ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
         "databaseID": "musical"
      },
      {
         "query": "select name from musical where year  =  1986 and category  =  'Best Book of a Musical' and Result  =  'Nominated'",
         "databaseID": "musical"
      },
      {
         "query": "SELECT count ( T1.Name )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE  t2.year  =  1986 and t2.category  =  'Best Book of a Musical' and t2.Result  =  'Nominated'",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE t2.year  =  1986 and t2.category  =  'Best Book of a Musical' and t2.Result  =  'Nominated'",
         "databaseID": "musical"
      },
      {
         "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code ,  max ( share_count )   FROM TRANSACTIONS GROUP BY transaction_type_code",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count  FROM TRANSACTIONS  where transaction_type_code  =  'PUR' and share_count ! =  \"\" order by share_count limit 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count FROM TRANSACTIONS where  transaction_id  =  2",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count FROM TRANSACTIONS where share_count ! =  \"\" order by share_count limit 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT(*)  >  1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT ( * )   >  1",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT Festival_Name FROM festival_detail WHERE YEAR  =  \"2007\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT YEAR FROM festival_detail WHERE Festival_Name  =  \"Cherry Awards\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  from Customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  from Customers where payment_method  =  \"Cash\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name from Customers where customer_id  =  2",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT avg(acc_bal) ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT avg ( acc_bal )  ,  acc_type FROM customer WHERE credit_score  <  50 GROUP BY acc_type",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.driverid ,  T1.forename ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  >=  2",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid ,  T1.forename ,  count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )    > =    2",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT driverRef , nationality  FROM drivers where forename = 'Fernando'",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T2.position, count ( * )   FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid  where T1.forename = 'Fernando' and rank  =  1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code WHERE T1.crs_code  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code WHERE T1.crs_code   =   'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CLASS_TIME,CLASS_ROOM from CLASS where CRS_CODE  =   'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "select distinct crs_code from class",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id WHERE t1.order_status   =   \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum ( t2.order_quantity )  FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id WHERE t1.order_status   =   \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT rating FROM song WHERE languages   =   'english'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating <  ( SELECT min ( rating )  FROM song WHERE languages  =  'english' ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE openning_year  >=  2010 GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( distinct cinema_id )  from cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT avg ( capacity )  from cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT name from cinema where capacity =  ( select min ( capacity )  from cinema )  or  capacity =  ( select max ( capacity )  from cinema ) ",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT location from cinema GROUP BY LOCATION ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE openning_year  > =   2010 GROUP BY LOCATION ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;",
         "databaseID": "store_1"
      },
      {
         "query": "select billing_address from invoices where billing_country  =  \"Germany\"",
         "databaseID": "store_1"
      },
      {
         "query": "select invoice_date from invoices where customer_id  =  2",
         "databaseID": "store_1"
      },
      {
         "query": "select distinct ( billing_city )  from invoices where billing_country  =  \"Norway\"",
         "databaseID": "store_1"
      },
      {
         "query": "select last_name from customers where state  =  \"SP\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T1.Name ,t1.Member_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T1.Name ,t1.Member_ID,T1.College_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID   =   T2.Member_ID ORDER BY Rank_in_Round ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.available_yn  =  1",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT daily_hire_cost FROM Products_for_Hire where product_id = 1",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT status_date FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id   =   T2.product_id WHERE product_name  = \"Book collection C\"",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT product_description  FROM Products_for_Hire where product_id = 3",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id   =   T2.product_id WHERE T1.available_yn   =   1",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.location ,  T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id  =  T1.id WHERE T2.interaction_type  =  'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT distinct Location from enzyme",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT Chromosome from enzyme where name  =  \"PBG deaminase\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT Product from enzyme where name  =  \"ALA synthase\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id   =   T1.id WHERE T2.medicine_id   =  3",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM song  WHERE  song_name  =  \"Tumi robe nirobe\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT rating FROM song  WHERE  song_name  =  \"Tumi robe nirobe\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT genre_is  FROM song  WHERE  song_name  =  \"Tumi robe nirobe\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song WHERE genre_is  =  \"modern\" OR languages  =  \"english\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_name FROM Customers WHERE customer_id = 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_name FROM Customers WHERE customer_id = 2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_name FROM Customers WHERE customer_id = 3",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )   < =   2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( age )  ,  max ( age )  ,  sex FROM student GROUP BY sex",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Fall' AND YEAR   =   2003 ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2003 ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student WHERE id IN  ( SELECT id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004 ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT distinct id FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT grade FROM takes WHERE semester   =   'Spring' AND YEAR   =   2004 and id  =  10838",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( distinct Official_native_language )  FROM country",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( distinct Official_native_language )  FROM country WHERE Official_native_language LIKE \"%English%\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id  =  t2.campus WHERE t2.faculty  >=  600 AND t2.faculty  <=  1000 AND T1.year  =  2004",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count ( * )  FROM campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT location FROM campuses where campus  =  \"California State University-Bakersfield\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT county FROM campuses where campus  =  \"California State University-Chico\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT weight FROM people where name  =  \"Francesco Postiglione\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Money_Requested FROM entrepreneur where People_ID  =  \"2\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT date_of_birth FROM people where name  =  \"Fabrizio Buonocore\"",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN (SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM savings))",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance from savings where custid  =  1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance from accounts as T1 join savings as T2 on T1.custid  =  T2.custid where T1.name  =  \"Wang\"",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT name from accounts where custid  =  3",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T1.name IN  ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance >  ( SELECT avg ( balance )  FROM savings )  ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.gender ,  T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name ORDER BY T2.resolution LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name ORDER BY T2.resolution LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id JOIN services AS t3 ON t2.service_id  =  t3.service_id WHERE t3.service_name  =  \"Close a policy\" OR t3.service_name  =  \"Upgrade a policy\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "select count ( Service_name )  from Services",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "select count ( * )  from Customers",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "select count ( distinct Customer_name )  from Customers",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "select count ( Policy_ID )  from First_Notification_of_Loss",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry  =  'Banking'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT avg ( Market_Value )  FROM company",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT avg ( Assets_billion )  FROM company",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT  Headquarters FROM company",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry   =   'Banking'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" OR Award  =  \"Cleavant Derricks\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT DISTINCT Award FROM musical WHERE Nominee  =  \"Bob Fosse\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT DISTINCT Award FROM musical WHERE Nominee  =  \"Cleavant Derricks\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Category FROM musical WHERE Nominee  =  \"Cleavant Derricks\" AND Result  =  \"Won\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Category FROM musical WHERE Nominee  =  \"Cleavant Derricks\" AND Result  =  \"Nominated\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Category FROM musical WHERE Nominee  =  \"Bob Fosse\" AND Result  =  \"Won\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T1.register_year  =  2016",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.register_year FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.name = \"Jeremy Jarmon\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Card_Number FROM member where name = 'Corey Peters'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Hometown FROM member where name = 'Myron Pryor'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.name ,  T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T1.register_year   =   2016",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_description FROM products  WHERE product_name   =   \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_buying_price FROM products WHERE product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT other_product_details FROM products WHERE product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT(*)  >  1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT School FROM school WHERE School_ID = '1'",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT ( * )  > 1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Location FROM school WHERE School = 'Barker College'",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT School FROM school WHERE Boys_or_Girls = 'Girls'",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "select lastname,firstname from list",
         "databaseID": "student_1"
      },
      {
         "query": "select count ( * )  from list group by classroom order by count ( * )  desc limit 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM  Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT \napt_id FROM Apartments GROUP BY \napt_id ORDER BY sum ( room_count )  DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT \napt_type_code FROM Apartments GROUP BY \napt_type_code ORDER BY sum ( room_count )  DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name FROM editor WHERE Age   =   24 OR Age   =   25",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT count ( Editor_ID )  FROM editor",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T2.Birth_Date ,  T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Total DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Total DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.name, t2.people_id FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Total DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT asset_model FROM Assets WHERE asset_id NOT IN (SELECT asset_id FROM Fault_Log)",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT asset_id, fault_log_entry_id, fault_description from Fault_Log",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "Select asset_id from Assets where asset_id not in  ( SELECT asset_id from Fault_Log ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "Select asset_model from Assets where asset_id not in  ( SELECT asset_id from Fault_Log ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\" AND nickname LIKE \"%s%\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT * from Lessons where lesson_id  =  4",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT lesson_date from Lessons where lesson_id  =  4",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT lesson_time from Lessons where lesson_id  =  4",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT salary FROM Employee ORDER BY salary ASC",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT salary FROM Employee ORDER BY salary ASC LIMIT 3",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee ORDER BY salary ASC limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT eid FROM Employee ORDER BY salary ASC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT Country FROM mountain GROUP BY Country HAVING COUNT(*)  >  1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT height FROM mountain where name = 'Kibo  ( Uhuru Pk ) '",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT count ( * )  FROM mountain where country = 'Tanzania'",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Range FROM mountain where country = 'Kenya' and name = 'Mount Kenya  ( Batian ) '",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT name FROM mountain where country = 'Tanzania' order by height desc limit 1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT name FROM mountain  order by height  limit 1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT max(budget_in_billions) ,  min(budget_in_billions) FROM department",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT count ( * )  FROM department",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Num_Employees FROM department WHERE department_id  =  2",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Name FROM department WHERE department_id  =  3",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Employee_Name FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_id FROM Employees as t1 join Documents_to_be_destroyed as t2 on t1.Employee_ID  =  t2.Destroyed_by_Employee_ID",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count(*) FROM city WHERE county_ID IN (SELECT county_ID FROM county_public_safety WHERE population  >  20000)",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT City_ID,Name FROM city",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT  Name FROM city WHERE county_ID IN  ( SELECT county_ID FROM county_public_safety WHERE population  >  20000 ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.id ,  count ( * )  FROM stadium AS T1 JOIN game AS T2 ON T1.id   =   T2.stadium_id GROUP BY T1.id",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  FROM GAME",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.Claim_id ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( * )  FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.Claim_id ,  count ( * )  FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT avg ( Date_Claim_Settled - Date_Claim_Made )  from Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T2.settlement_id,T2.amount_claimed,T2.amount_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id where T1.claim_id = 801",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( customer_details )  FROM customers WHERE customer_details LIKE \"%Diana%\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id GROUP BY T1.church_id HAVING count(*)  >=  2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT Church_id, name FROM church",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T1.name, T1.church_id FROM church AS T1 JOIN wedding AS T2 ON T1.church_id   =   T2.church_id GROUP BY T1.church_id HAVING count ( * )    > =    2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" OR T1.name  =  \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Mary\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Mary\" OR T1.name   =   \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "select uid, name from user_profiles where uid in  ( SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Mary\" OR T1.name   =   \"Susan\" ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID WHERE T2.Rank  =  1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM Player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID WHERE T2.Coach_name   =   \"Jameson Tomas\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T3.born_state  =  'Alabama'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT born_state from head where name  =  \"Sergio García\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT max ( head_ID )  from head",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.age from head as T1 Join management as t2 on t1.head_id  =  t2.head_id",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id  =  T2.id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT brand FROM camera_lens where id  =  2",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT DISTINCT ( color ) FROM photos where mountain_id  =  20",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT focal_length_mm FROM camera_lens where id  =  3",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id   =   T2.id WHERE T1.mountain_id  =  2",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT count(*) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id WHERE T2.account_name  =  \"337\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM Financial_transactions",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT * from Accounts where account_name  =  \"337\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id   =   T2.account_id WHERE T2.account_name   =   \"337\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT t3.name ,  t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT distinct t3.name  FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id JOIN train AS t3 ON t2.train_id   =   t3.id WHERE t1.local_authority   =   \"Chiltern\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t3.name , t3.time,t3.train_number ,t2.train_id  FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id JOIN train AS t3 ON t2.train_id  =  t3.id WHERE t1.local_authority  =  \"Chiltern\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( * )  FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id WHERE T1.customer_details  =  \"Ellsworth Paucek\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( * )  FROM  ( SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id GROUP BY T1.customer_id HAVING count ( * )   >  1 ) ",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id   =   T2.Customer_id GROUP BY T1.customer_id HAVING count ( * )   >  1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count(*) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT company FROM customers where company ! =  'NULL'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT total  FROM invoices  order by total desc limit 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name from aircraft",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid   =   T1.aid GROUP BY T1.aid ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT aid from aircraft where name  = 'Boeing 727'",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT min(hours) FROM projects)",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( * )  FROM projects",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name from projects WHERE hours   =    ( SELECT min ( hours )  FROM projects ) ",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count(*) FROM (SELECT city FROM airports GROUP BY city HAVING count(*)  >  3)",
         "databaseID": "flight_4"
      },
      {
         "query": "select count ( * )  from airports",
         "databaseID": "flight_4"
      },
      {
         "query": "select name from airports",
         "databaseID": "flight_4"
      },
      {
         "query": "select count ( distinct city )  from airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Lessons",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT nickname FROM Staff WHERE staff_id  =  3",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT middle_name FROM Staff WHERE staff_id  =  2",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation  =  'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Primary_conference FROM university WHERE School  =  \"Lebanon Valley College\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Nickname FROM university WHERE School  =  \"University of Rhode Island\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT location FROM university WHERE Nickname  =  \"Fightin Blue Hens\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT school FROM university WHERE founded  >  1850 OR affiliation   =   'Public'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT count ( * )  FROM musical WHERE Nominee  =  \"Bob Fosse\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Name FROM journalist WHERE Nationality   =   \"England\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Name FROM journalist WHERE Nationality   =   \"England\" OR Nationality   =   \"Wales\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( * )  FROM journalist WHERE Nationality   =   \"England\" OR Nationality   =   \"Wales\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name FROM journalist WHERE Nationality   =   \"England\" OR Nationality   =   \"Wales\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( * )  FROM journalist WHERE Nationality   =   \"England\" and years_working > 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( * )  FROM journalist WHERE Nationality   =   \"Wales\" and years_working > 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name FROM journalist WHERE Nationality   =   \"Wales\" and years_working > 1 UNION SELECT name FROM journalist WHERE Nationality   =   \"England\" and years_working > 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT home_city FROM driver WHERE age  >  40 GROUP BY home_city HAVING count(*)  >=  2",
         "databaseID": "school_bus"
      },
      {
         "query": "select count ( * )  from driver",
         "databaseID": "school_bus"
      },
      {
         "query": "select name from driver",
         "databaseID": "school_bus"
      },
      {
         "query": "select age from driver where name  =  \"Matthew Ritter\"",
         "databaseID": "school_bus"
      },
      {
         "query": "select home_city from driver where name  =  \"Dan Carter\"",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM perpetrator)",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Name FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM perpetrator ) ",
         "databaseID": "perpetrator"
      },
      {
         "query": "select weight from people where name  =  \"John Danks\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "select height from people where name  =  \"John Danks\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO   =   T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID   =   T3.FacID WHERE T1.DName   =   \"Computer Science\"",
         "databaseID": "college_3"
      },
      {
         "query": "select rank from faculty where lname  =  \"Goodrich\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE first_name LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name, last_name FROM employees WHERE first_name LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name, last_name FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.Name ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID ORDER BY T2.Height DESC LIMIT 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT max ( height )  FROM roller_coaster",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select park from roller_coaster where height  =   ( SELECT max ( height )  FROM roller_coaster ) ",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select T2.name from roller_coaster as T1 join country as T2 on T1.country_id  =  T2.country_id where T1.height  =   ( SELECT max ( height )  FROM roller_coaster ) ",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select T2.name, T2.population from roller_coaster as T1 join country as T2 on T1.country_id  =  T2.country_id where T1.height  =   ( SELECT max ( height )  FROM roller_coaster ) ",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_id FROM Courses WHERE course_name  =  \"statistics\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_description FROM courses WHERE course_name  =  \"French\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id  =  T2.course_Id GROUP BY T1.course_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.title ,  T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT max ( stars )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( stars )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT min ( year )  FROM movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Sponsor_name FROM player ORDER BY Votes asc LIMIT 1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( balance )  from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT custid from savings where balance >  ( select avg ( balance )  from savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance + T3.balance  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.balance - T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  >   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name  =  'Statistics' ORDER BY salary LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM instructor WHERE dept_name   =   'Statistics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT min ( salary )  FROM instructor WHERE dept_name   =   'Statistics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name   =   'Statistics' order by salary asc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT distinct product_type_code  FROM products GROUP BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_type_code ,  max ( product_price )  ,  min ( product_price )  FROM products GROUP BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "select distinct  product_name from products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT t1.catalog_name ,  t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id  =  t2.catalog_id WHERE catalog_level_number  >  5",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_name FROM catalogs",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT date_of_publication FROM catalogs",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t1.catalog_id FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id   =   t2.catalog_id WHERE catalog_level_number  >  5",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT sum(amount_piad) ,  avg(amount_piad) FROM claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT sum ( amount_piad )  FROM claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT avg ( amount_piad )  FROM claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT sum ( Amount_Claimed )  FROM claim_headers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT date_of_claim from claim_headers order by amount_claimed desc limit 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT date_of_claim from claim_headers order by amount_claimed limit 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.team_id  =  \"ATL\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT distinct T1.league_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.player_id  =  \"bedrost01\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT distinct T1.player_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.salary  =  545000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT stories FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Height FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT City FROM buildings ORDER BY Height DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Stories FROM buildings ORDER BY Height LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM PersonFriend where name  =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend from personfriend where name  =  \"Alice\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend from personfriend where name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT gender from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Name FROM manager ORDER BY Working_year_starts asc LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Name FROM manager where level  =   ( select max ( level )  from manager ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from STUDENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( T1.stu_fname )  FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'A'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( T1.stu_fname )  FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C' OR T2.enroll_grade   =   'A'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DISTINCT SCHOOL_CODE )  FROM DEPARTMENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code   =   T2.crs_code JOIN department AS T3 ON T2.dept_code   =   T3.dept_code GROUP BY T3.school_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code   =   T2.crs_code JOIN department AS T3 ON T2.dept_code   =   T3.dept_code GROUP BY T3.school_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE state  =  \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE state  =  \"LA\" or state  =  \"AZ\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( enr )  from college where cName  =  \"ASU\" or cName  =  \"LSU\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.City_Town ,  count(*) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID GROUP BY T1.City_Town",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT City_Town FROM Addresses",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT City_Town, State_County FROM Addresses",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "select store_email_address from Drama_Workshop_Groups",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT title FROM Movie WHERE YEAR  =  (SELECT max(YEAR) FROM Movie)",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( * )  FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year FROM Movie order by year limit 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year FROM Movie order by year DESC  limit 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE YEAR   =    ( SELECT max ( YEAR )  FROM Movie ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director FROM Movie WHERE title  =  \"Avatar\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT minister FROM party WHERE took_office  >  1961 OR took_office  <  1959",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT count ( minister )  FROM party",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT minister FROM party WHERE took_office < 1959",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT destination FROM Flight GROUP BY destination ORDER BY count(*) LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Flight where destination  =  \"Washington D.C.\" and arrival_date Like \"%04/12/2005%\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Flight where destination  =  \"Dallas\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor WHERE prof_high_degree   =   'Ph.D.' OR prof_high_degree   =   'MA'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT emp_num FROM professor WHERE prof_high_degree   =   'Ph.D.'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT PROF_OFFICE FROM professor WHERE prof_high_degree   =   'MA'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  >  5000 GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid   =   T2.eid JOIN Aircraft AS T3 ON T3.aid   =   T2.aid WHERE T3.distance  <  5000 GROUP BY T1.eid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT max(home_games) ,  min(home_games) ,  avg(home_games) FROM stadium",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Average_Attendance FROM stadium where name  =  \"Cowboys Stadium\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Total_Attendance FROM stadium where name  =  \"Cowboys Stadium\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Capacity_Percentage FROM stadium where name  =  \"New Meadowlands Stadium\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.share_count  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.Investor_details FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE T2.share_count  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT t2.transaction_id FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE T2.share_count  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT t2.transaction_type_code FROM  INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id WHERE t2.transaction_id  =  2",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Location FROM performance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT AVG ( Attendance )  FROM performance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT MAX ( Attendance )  FROM performance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT MIN ( Attendance )  FROM performance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.FirstName  =  \"Astrid\" AND LastName  =  \"Gruber\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName, T1.lastname, T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName, T1.lastname, T2.billingaddress FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName, T1.lastname, T2.billingcountry FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName, T1.lastname, T2.billingcity FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT email_address FROM Teachers WHERE first_name  =  'Lyla' and middle_name  =  'Wilson' and last_name  =  'Medhurst'",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT email_address FROM Teachers WHERE first_name  =  'Sid' and middle_name  =  'Tremayne' and last_name  =  'Brakus'",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT cell_mobile_number FROM Teachers WHERE first_name  =  'Trystan' and middle_name  =  'Alexane' and last_name  =  'Schuster'",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT name FROM track WHERE track_id NOT IN (SELECT track_id FROM race)",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name FROM track WHERE track_id NOT IN  ( SELECT track_id FROM race ) ",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT Location, Year_Opened FROM track WHERE track_id NOT IN  ( SELECT track_id FROM race ) ",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  t2.campus JOIN degrees AS T3 ON T1.id  =  t3.campus AND t2.year  =  t3.year WHERE t2.year  =  2001 ORDER BY t3.degrees LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT Year FROM Campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT County FROM Campuses",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT * FROM degrees",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   t2.campus JOIN degrees AS T3 ON T1.id   =   t3.campus AND t2.year   =   t3.year WHERE t2.year   =   2001 ORDER BY t3.degrees LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Name FROM people",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Date FROM debate",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Venue FROM debate",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name",
         "databaseID": "pilot_record"
      },
      {
         "query": "select pilot_name from pilot where pilot_ID  =  1 or pilot_ID  =  2",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT T2.Pilot_id ,  COUNT ( * )  FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID   =   T2.pilot_ID where T2.pilot_ID  =  1 or T2.pilot_id  =  2 GROUP BY T2.Pilot_id",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT pilot_ID ,  join_year FROM  pilot  where pilot_ID  =  1 or pilot_id  =  2",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT pilot_ID ,  team FROM  pilot  where pilot_ID  =  1 or pilot_id  =  2",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT sum(access_count) FROM documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT sum ( access_count )  FROM documents GROUP BY document_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT access_count FROM documents where document_type_code = 'Book'",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT access_count FROM documents where document_type_code = 'Paper'",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( fault_log_entry_id )  FROM Fault_Log",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select count ( * ) \nfrom\n ( \nSELECT fault_log_entry_id FROM Fault_Log where fault_log_entry_id in  ( \nselect fault_log_entry_id from Fault_Log_Parts ) \n   ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_log_entry_id ,  T1.fault_description ,  T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT school FROM university ORDER BY founded LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT enrollment ,  primary_conference FROM university ORDER BY founded LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000",
         "databaseID": "loan_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000 ) ",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )   >  5000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT date_of_latest_logon FROM Students WHERE family_name  =  \"Jaskolski\" OR family_name  =  \"Langosh\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT login_name FROM students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT password FROM students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT avg(revenue) ,  max(revenue) ,  sum(revenue) FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( revenue )  FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT max ( revenue )  FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT sum ( revenue )  FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT * FROM employees WHERE department_id NOT IN (SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200)",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_id FROM departments where manager_id  > =   0 and manager_id < =  100",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_id FROM departments where manager_id  > =   100 and manager_id < =  200",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id FROM employees WHERE department_id IN  ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * FROM employees WHERE department_id NOT IN  ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE  =  T2.GRAPE WHERE T1.Color  =  \"White\" GROUP BY T2.Winery ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT winery FROM wine WHERE Grape  =  \"Zinfandel\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE   =   T2.GRAPE WHERE T1.Color   =   \"White\" GROUP BY T2.Winery ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE   =   T2.GRAPE WHERE T1.Color   =   \"White\" GROUP BY T2.Winery ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Project_Staff where role_code = 'researcher'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT staff_id  FROM Project_Staff where role_code = 'researcher'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber  =  t2.dnumber WHERE t2.dlocation  =  'Houston'",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT * FROM department",
         "databaseID": "company_1"
      },
      {
         "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  from student",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  from student where sex  =  \"M\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  from student where age  =  18",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code GROUP BY T3.dept_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T4.DEPT_ADDRESS FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T4.EMP_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg(t1.age) ,  avg(Years_working) ,  t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id  =  t2.journalist_id GROUP BY t2.work_type",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( * )  FROM journalist",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Nationality FROM journalist WHERE Name  =  \"Herbert Swindells\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT age FROM journalist WHERE Name  =  \"George Gilchrist\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Shipped\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"On Road\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"Shipped\" ) ",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"On Road\" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"Shipped\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT avg(T1.ROM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT T1.ROM_MiB FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name   =   T2.chip_model WHERE T2.Company_name  =  \"Nokia Corporation\" order by T1.ROM_MiB desc limit 1",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT T1.ROM_MiB FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name   =   T2.chip_model WHERE T2.Company_name  =  \"Nokia Corporation\" order by T1.ROM_MiB limit 1",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT avg ( T1.ROM_MiB )  FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name   =   T2.chip_model WHERE T2.Company_name  =  \"Nokia Corporation\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid  =  T2.actid WHERE T2.activity_name  =  'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid   =   T2.actid WHERE T2.activity_name   =   'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid   =   T2.actid WHERE T2.activity_name   =   'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT activity_name FROM Activity WHERE actid  =  770",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id WHERE t1.product_name  =  \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_category_code from Products where product_name  =  'sesame'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.product_characteristic_value FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT sum ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT min ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "select name from user_profiles where followers  =   (  SELECT max ( followers )  FROM user_profiles  ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id from Product_Suppliers where supplier_id  =  2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  from products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 AND T2.product_price  >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price from products where product_id  =  8",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price from products where product_id  =  15",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT grant_id ,  count(*) FROM Documents GROUP BY grant_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT sent_date FROM Documents where document_type_code = \"APP\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( grant_id )  FROM Documents where document_type_code = \"APP\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT max ( grant_id )  FROM Documents where document_type_code = \"APP\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT grant_id FROM Documents where document_type_code = \"APP\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code JOIN department AS T5 ON T5.dept_code  =  T4.dept_code WHERE T5.dept_name  =  'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code JOIN department AS T5 ON T5.dept_code   =   T4.dept_code WHERE T5.dept_name   =   'Computer Info. Systems'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num WHERE T2.enroll_grade  =  'C' OR T2.enroll_grade  =  'A'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'A'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT  t1.stu_num FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t2.class_code FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT stu_class, stu_GPA FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num WHERE T2.enroll_grade   =   'C'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T1.name   =   \"IFG\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT DISTINCT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T1.name   =   \"AIB\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT t2.position FROM club AS T1 JOIN player AS T2 ON T1.Club_ID   =   T2.Club_ID WHERE T2.name   =   \"Michael Platt\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_details  =  'quo'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_type FROM organisation_Types",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id FROM Organisations where organisation_details   =   'quo'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_type FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_details   =   'quo'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Organisations where organisation_type = 'RES'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid GROUP BY T1.gameid ORDER BY sum(hours_played) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played )  ASC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( * )  FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid WHERE GName  =  'The Vanishing of Eric Calder'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT school_name FROM school ORDER BY enrollment LIMIT 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT school_name FROM school ORDER BY enrollment desc limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT school_name FROM school order by Enrollment desc limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT nationality ,  count(*) FROM swimmer GROUP BY nationality HAVING count(*)  >  1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT nationality  FROM swimmer GROUP BY nationality HAVING count ( * )   >  2",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM swimmer where id  =  5",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT Nationality FROM swimmer where name  =  \"craif colbertaldo\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT  count ( ID )  FROM swimmer",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name  FROM swimmer where id  =  4",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.first_name   =   \"Fanny\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT date_left_university FROM Students WHERE first_name   =   \"Fanny\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT cell_mobile_number FROM Students WHERE first_name   =   \"Fanny\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT name FROM web_client_accelerator WHERE name LIKE \"%Opera%\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name FROM web_client_accelerator WHERE client  =  'user'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name FROM web_client_accelerator WHERE client  =  'user' and name LIKE \"%Opera%\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT Operating_system FROM web_client_accelerator WHERE client  =  'End user, ISP'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.personal_name ,  T1.family_name ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Courses",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT COUNT ( DISTINCT author_id )  FROM Course_Authors_and_Tutors",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.personal_name  FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT  T1.family_name  FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  from all_documents where document_name   =   \"Robin CV\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT document_id from all_documents where document_name   =   \"Robin CV\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.Date_in_Location_From from all_documents as T1 join Document_Locations as T2 on T1.document_id  =  T2.document_id where T1.document_name   =   \"Robin CV\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.Date_in_Locaton_To from all_documents as T1 join Document_Locations as T2 on T1.document_id  =  T2.document_id where T1.document_name   =   \"Robin CV\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT ( * )   > =   2",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name FROM Products WHERE Product_Price > 3000",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Transactions Where share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT cmi_cross_ref_id FROM CMI_Cross_References",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT master_customer_id FROM CMI_Cross_References",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT source_system_code FROM CMI_Cross_References",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"GELL\" AND T1.lastname  =  \"TAMI\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT Grade FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT FirstName FROM list WHERE FirstName LIKE \"J%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT LastName FROM list WHERE LastName LIKE \"J%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT Classroom FROM teachers",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T1.firstname   =   \"GELL\" AND T1.lastname   =   \"TAMI\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.outcome_code  =  'No Response'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id where T2.outcome_code  =  \"No Response\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T1.customer_phone, T1.customer_email FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id   =   T2.customer_id where T2.outcome_code  =  \"No Response\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM department",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count ( departmentID )  DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT head FROM department where name  =  \"Psychiatry\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT head FROM department where name  =  \"Surgery\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT head FROM department where name  =  \"General Medicine\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT ClubDesc FROM club where ClubID = 1",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT city_code FROM Student where StuID = 1001",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( DISTINCT t1.clubname )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.fname   =   \"Eric\" AND t3.lname   =   \"Tai\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM customers where customer_name  =  \"Savannah\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT  T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE t1.customer_name  =  \"Alberto\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT  customer_details FROM customers  WHERE customer_id  =  \"2\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"On Road\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT LName, Fname FROM STUDENT",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  <  315",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T1.Total FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Total  <  315",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT COUNT ( DISTINCT mID )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Reviewer",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count(DISTINCT T1.donator_name) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  \"Glenn\"",
         "databaseID": "school_finance"
      },
      {
         "query": "select count ( * )  from school where location  =  \"Walkerton\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT count ( DISTINCT T1.donator_name )  FROM endowment AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id WHERE T2.school_name   =   \"Glenn\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT min(amount_of_transaction) FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\" AND share_count  >  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM TRANSACTIONS WHERE transaction_type_code   =   \"PUR\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM TRANSACTIONS WHERE share_count  >50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT min ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code   =   \"PUR\" AND share_count  >  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM TRANSACTIONS WHERE transaction_type_code   =   \"PUR\" AND share_count  >  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T1.other_details ,  T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id  =  T2.engineer_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT first_name FROM Maintenance_Engineers",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT   T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id   =   T2.engineer_id JOIN Skills AS T3 ON T2.skill_id   =   T3.skill_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT  other_details from  Maintenance_Engineers",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT last_name from Maintenance_Engineers",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes ASC LIMIT 1",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT count ( * )  from representative where party  =  \"Republican\"",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT count ( * )  from representative where party  =  \"Democratic\"",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT representative_id from election order by votes asc limit 1",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT party from representative where representative_id  =   ( SELECT representative_id from election order by votes asc limit 1 ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  count ( * )  FROM Student GROUP BY Major HAVING count ( Major )  BETWEEN 2 AND 30",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  Fname FROM Student where major  =   ( select major from student group by major order by count ( * )  desc limit 1 ) ",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  Fname FROM Student where major  =   ( select major from student group by major order by count ( * )  asc limit 1 ) ",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT DISTINCT T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.resolution  <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( T2.song_name )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.file_size FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T2.resolution  <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT sum(city_population) FROM district ORDER BY city_area DESC LIMIT 3",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT sum ( city_population )  FROM district ORDER BY city_area DESC LIMIT 3",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT District_name FROM district where City_Population  =   ( select max ( City_Population )  from district ) ",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT City_Population, City_Area FROM district where City_Population  =   ( select max ( City_Population )  from district ) ",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T2.dept_name ,  T2.dept_address ,  count(*) FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT dept_name from department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name, count ( * )   FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code group by T1.dept_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name ,  T2.dept_address ,  count ( * )  FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR  =  2001 ORDER BY salary DESC LIMIT 3;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   2001 ORDER BY salary DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   2001 and team_id  =  \"ATL\" ORDER BY salary DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   2001 and league_id  =  \"NL\" ORDER BY salary DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   2001 and league_id  =  \"AL\" ORDER BY salary DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.student_id ,  T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  >=  2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( * )  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id order by count ( * )  desc limit 1",
         "databaseID": "e_learning"
      },
      {
         "query": "select count ( * )  from  ( SELECT *  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id having count ( * )   =  5 ) ",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.registration_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )    =  5",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT student_id FROM Student_Course_Enrolment where registration_id  =  19",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT personal_name FROM Students where student_id  =  15",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"AC/DC\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =   \"AC/DC\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =  \"Aerosmith\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Title FROM ALBUM where ArtistId = 4",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT(*)  >=  3 ORDER BY T2.Name",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistID where T1.AlbumId  =  1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Name FROM ARTIST where ArtistId  =  3",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Name FROM ARTIST",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name ,  T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT ( * )    > =    3 ORDER BY T2.Name",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t2.customer_details  =  \"Dayana Robel\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   \"Dayana Robel\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   \"Dayana Robel\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Start_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   \"Dayana Robel\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT End_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t2.customer_details   =   \"Dayana Robel\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id  =  t2.service_id",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT booking_made_date FROM services AS t1 JOIN party_services AS t2 ON t1.service_id   =   t2.service_id where t1.service_id   =  \"1\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id   =   t2.service_id where t2.booking_id   =  \"2\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT service_descriptio FROM services where service_type_code  =  \"Welfare\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id   =   t2.service_id",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  from customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id, count ( * )  from orders group by customer_id",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.order_id ,  T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.customer_name  =  \"Jeramie\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T1.stars  >  3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT name FROM Reviewer",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( T2.rID )  FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T1.stars  >  3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T1.stars  >  3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count(*)  >  1",
         "databaseID": "school_finance"
      },
      {
         "query": "Select donator_name from endowment where amount > 8.5",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T2.School_id FROM endowment AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count ( * )   >  1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id WHERE T1.amount  >  8.5 GROUP BY T1.school_id HAVING count ( * )   >  1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT max ( booked_amount )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT min ( booked_count )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT max ( booked_count )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT min ( booked_amount )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height ASC",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height desc limit 1",
         "databaseID": "gymnast"
      },
      {
         "query": "select height from people where name = 'Nadia Caba Rodríguez'",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT t2.name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Height",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT classroom, grade FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT FirstName FROM list where firstName like \" S%\" and classroom in  ( SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT Customer_ID FROM customers where Customer_name  = 'America Jaskolski'",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT Date_Opened FROM Customers_Policies where Customer_ID  =  214",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\" OR T2.How_to_Get_There  =  \"bus\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT name from tourist_attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT name from tourist_attractions where how_to_get_there  =  \"bus\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"254 Ottilie Junction\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.location_Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T2.how_to_get_there  =  \"bus\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.address FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T2.how_to_get_there  =  \"bus\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT student_capacity from dorm where dorm_name  =  \"Smith Hall\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  from dorm where gender  =  \"F\"",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT amenity_name from dorm_amenity",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid   =   T1.amenid JOIN dorm AS T3 ON T2.dormid   =   T3.dormid WHERE T3.dorm_name   =   'Anonymous Donor Hall' ORDER BY T1.amenity_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname ,  lname FROM student WHERE age  <  (SELECT avg(age) FROM student)",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname ,  lname FROM student",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Age FROM student",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname ,  lname FROM student WHERE age  <   ( SELECT avg ( age )  FROM student ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Projects",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( project_id )  FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT avg(followers) FROM user_profiles WHERE UID NOT IN (SELECT UID FROM tweets)",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM user_profiles WHERE UID NOT IN  ( SELECT UID FROM tweets ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT avg ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT avg ( followers )  FROM user_profiles WHERE UID IN  ( SELECT UID FROM tweets ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT avg ( followers )  FROM user_profiles WHERE UID NOT IN  ( SELECT UID FROM tweets ) ",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name ,  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  <  T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name  FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T3.balance  <  T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT  T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T1.name  =  \"Weeks\"",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT  custid  FROM accounts where name  =  \"Weeks\"",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Name FROM Scientists",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.Name ,  T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T3.Name ,  T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T3.Name ,  T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT avg ( Hours )  FROM Projects",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count(*) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code  =  T2.class_code JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN department AS T4 ON T3.dept_code  =  T4.dept_code WHERE T4.dept_name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.STU_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.CRS_CODE FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code   =   T2.class_code JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN department AS T4 ON T3.dept_code   =   T4.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CLASS_TIME from CLASS where CRS_CODE = \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * FROM employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * FROM employees order by salary limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Issue_Date FROM volume WHERE Song LIKE \"%The Way%\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT volume_Issue FROM volume WHERE Song LIKE \"%The Way%\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT artist_id FROM volume WHERE Song LIKE \"%Everybody Have Fun Tonight%\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( country )  from artist",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name from song group by artist_name order by count ( * )  limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT country from artist where artist_name  =  'Enrique'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998",
         "databaseID": "browser_web"
      },
      {
         "query": "select name from browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year > 1998",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.id FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T1.name  =  \"Opera\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND faculty  >  (SELECT max(faculty) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2002 AND T1.county  =  \"Orange\")",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus from campuses where campus like \"%California State University%\" and county  =  \"Kern\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT year from campuses where campus  =  \"California State University-Chico\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus where T2.faculty  =   ( select min ( faculty )  from faculty ) ",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus from campuses where year  =  2002",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id  =  T2.assigned_to_staff_id WHERE T2.problem_id  =  1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id  =  T2.assigned_to_staff_id WHERE T2.problem_id  =  1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * )  limit 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid WHERE T3.year > 2010 and T1.surname = 'Hamilton' GROUP BY T1.driverid",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id WHERE T1.year  >  2014",
         "databaseID": "wedding"
      },
      {
         "query": "select * from wedding where year > 2014",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id WHERE T1.year  >  2014",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id WHERE T1.year  >  2014",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT(*)  >  1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT ( * )   >  1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publisher FROM publication",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Price FROM publication order by Price DESC limit 1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Price FROM publication order by Price  limit 1",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Height DESC LIMIT 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Company FROM entrepreneur",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT * FROM entrepreneur",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Height DESC LIMIT 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( * )  FROM participants",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( DISTINCT event_id )  FROM participants_in_events",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T2.event_id FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T2.event_id, T1.Participant_Details  FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id JOIN train AS T3 ON T3.train_id   =   T1.train_id",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Total_Passengers FROM station",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Main_Services FROM station",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT start_station_name ,  start_station_id FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip WHERE start_date LIKE \"8/%\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( distinct start_station_name )  FROM trip WHERE start_date LIKE \"8/%\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip WHERE start_station_name  =   ( SELECT start_station_name FROM trip WHERE start_date LIKE \"8/%\" GROUP BY start_station_name ORDER BY COUNT ( * )  DESC LIMIT 1 ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT distinct start_station_name ,  start_station_id FROM trip WHERE start_station_name  =  'San Francisco Caltrain 2  ( 330 Townsend ) '",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count(*)  >=  2",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT DISTINCT product_name FROM Products",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT DISTINCT product_type_code FROM Products",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING count ( * )    > =    2",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count(*) BETWEEN 2 AND 4;",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id GROUP BY T1.state_province_county HAVING count ( * )  > 2",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id GROUP BY T1.state_province_county HAVING count ( * )  > 2 and count ( * )  < 4",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.state_province_county  =  \"Connecticut\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.first_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.state_province_county  =  \"Connecticut\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT nickname FROM staff where first_name  =  \"Janessa\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.first_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id  =  T2.staff_address_id where T1.state_province_county  =  \"Connecticut\" order by date_joined_staff asc limit 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT country FROM airlines WHERE active  =  'Y' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airlines",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airlines WHERE active   =   'Y' GROUP BY country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT COUNT ( * )  FROM airlines WHERE active   =   'Y' AND country  =  \"United States\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = \"Rock\" OR T3.name = \"MPEG audio file\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Rock\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  \"Rock\" OR T3.name  =  \"MPEG audio file\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  \"Rock\" OR T3.name  =  \"MPEG audio file\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( distinct T2.media_type_id )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  \"Rock\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id JOIN media_types AS T3 ON T3.id  =  T2.media_type_id WHERE T1.name  =  \"Rock\" group by T3.id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rank  >  3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id HAVING avg(T2.rating)  >  5",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id, title FROM item",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title, T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rank  >  3",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title, T1.i_id, rating FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rank  >  3",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Budget_in_Billions FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Creation, Name FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id WHERE T2.temporary_acting   =   'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT count ( * )  from management WHERE temporary_acting   =   'No'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id  =  T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.vehicle_id ,  T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id   =   T2.vehicle_id",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT vehicle_details FROM Vehicles WHERE vehicle_id   =  \"1\" or vehicle_id   =  \"2\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT price FROM lessons WHERE  vehicle_id   =  \"2\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.vehicle_id ,  T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id   =   T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t1.fname  =  \"Katsuhiro\" AND t1.lname  =  \"Ueno\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "select authID from Authors where fname = 'Katsuhiro' and lname = 'Ueno'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select country from Inst where name = 'Tohoku University'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select count ( * )  from Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE Inst.name = 'Tohoku University'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select instID from Inst where name = 'Tohoku University'",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT dept_name FROM  department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM course WHERE crs_description LIKE '%Statistics%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CRS_CREDIT FROM course WHERE CRS_CODE in  ( SELECT T1.CRS_CODE FROM course AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE T2.dept_name  =  \"Computer Info. Systems\" ) ",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.name ,  T1.lat ,  min(T2.duration) FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.end_station_id GROUP BY T2.end_station_id",
         "databaseID": "bike_1"
      },
      {
         "query": "select name,lat from station",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.name ,  T1.lat ,  min ( T2.duration )  FROM station AS T1 JOIN trip AS T2 ON T1.id   =   T2.end_station_id GROUP BY T2.end_station_id",
         "databaseID": "bike_1"
      },
      {
         "query": "select name, installation_date from station",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id  =  T2.service_id WHERE T2.event_details  =  'Fail'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT student_id FROM Students WHERE first_name   =   \"Emma\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT last_name FROM Students WHERE first_name   =   \"Emma\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT email_address FROM Students WHERE first_name   =   \"Emma\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.fault_status FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  \"Etha\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.visit_start_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  \"Etha\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.visit_end_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id  =  T2.engineer_id where T1.first_name  =  \"Etha\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f2 WHERE T1.name  =  \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email FROM user_profiles ORDER BY followers DESC LIMIT 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Mary\" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid   =   T2.f2 WHERE T1.name   =   \"Susan\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT COUNT(*) FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM CUSTOMER",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Company FROM CUSTOMER group by Company order by count ( * )  desc limit 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM CUSTOMER WHERE Email LIKE \"%gmail.com%\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T1.Gymnast_ID, T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "select name from people where hometown  =  \"Santo Domingo\"",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM tryout where pPos  =   ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT decision FROM tryout where pPos  =   ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pPos FROM tryout where pPos ! =  \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM tryout where pPos ! =  \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "select country from Inst where name = 'University of Oxford'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select instID from Inst where name = 'University of Oxford'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select distinct T1.paperID from Papers AS T1 JOIN Authorship AS T2 JOIN Inst AS T3 where T3.name = 'University of Oxford'",
         "databaseID": "icfp_1"
      },
      {
         "query": "select title from Papers where paperID = '200'",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name  FROM airports ORDER BY elevation LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city  FROM airports ORDER BY elevation LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airports ORDER BY elevation LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation FROM airports where name  =  \"Bar Yehuda Airfield\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.Hometown ,  COUNT(*) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID GROUP BY T2.Hometown",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT COUNT ( * )  FROM gymnast",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT age FROM people WHERE name  =  \"Paul Hamm\"",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT first_name ,  last_name ,  salary FROM employees WHERE first_name LIKE '%m'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE first_name LIKE '%m'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,HIRE_DATE FROM employees WHERE first_name LIKE '%m'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT COMMISSION_PCT FROM employees WHERE first_name LIKE '%m'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT FIRST_NAME, LAST_NAME FROM employees order by COMMISSION_PCT desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT HIRE_DATE FROM employees order by COMMISSION_PCT asc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENTS",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT incident_type_code FROM Behavior_Incident where student_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT recommendations FROM Behavior_Incident",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT cell_mobile_number FROM students where student_id  =  1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.name ,  T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id WHERE T2.temporary_acting  =  'Yes'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT name ,  num_employees FROM department where name  =  \"Treasury\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT name ,  num_employees FROM department where name  =  \"Homeland Security\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE mID NOT IN  ( SELECT mID FROM Rating ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director from movie where title  =  \"Star Wars\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT Fname FROM FACULTY WHERE Rank  =  \"Professor\" ORDER BY Fname",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Rank FROM FACULTY WHERE Fname  =  \"Mark\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT COUNT ( * )  FROM FACULTY",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DISTINCT rank FROM FACULTY",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code JOIN course AS T4 ON T3.crs_code  =  T4.crs_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg ( STU_GPA )  FROM STUDENT",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT ENROLL_GRADE FROM ENROLL ORDER BY ENROLL_GRADE ASC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.stu_fname ,  T1.stu_lname ,  T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num   =   T2.stu_num JOIN CLASS AS T3 ON T2.class_code   =   T3.class_code JOIN course AS T4 ON T3.crs_code   =   T4.crs_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id GROUP BY T2.city ORDER BY count ( * )   LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id  where T1.customer_status_code  =  'Bad Customer' GROUP BY T2.city ORDER BY count ( * )  LIMIT 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT country from Addresses where city  =  'Ericamouth'",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Brittany Harris' OR T2.year  >  2000",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T3.name   =   'Brittany Harris'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T2.year  >  2000",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID WHERE T2.title  =  'Avatar'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pID FROM Player WHERE pName = \"Charles\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID WHERE T3.pName   =   'Charles'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID WHERE T1.cName   =   'OU'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID  =  T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID  =  T3.Journal_ID WHERE T3.Sales  >  3000",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T3.Journal_ID FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID   =   T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID   =   T3.Journal_ID WHERE T2.Name  =  \"Anna Powierza\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.Work_Type FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID   =   T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID   =   T3.Journal_ID WHERE T2.Name  =  \"Kamila Porczyk\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T1.population FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T1.Residents_per_officer FROM county_public_safety as T1 join city as T2 on T1.County_ID  =  T2.County_ID order by Population desc limit 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Indiana University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "select paperID from papers where title  =   ( SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Indiana University\" ) ",
         "databaseID": "icfp_1"
      },
      {
         "query": "select count ( * )  from authorship",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT capital from country where country_name  =  \"Indonesia\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT capital from country where country_name  =  \"Iran\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( DISTINCT T1.Official_native_language )  FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id   =   T2.Country WHERE T2.Position   =   \"Defender\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT class FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title ORDER BY T1.director ,  T1.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.title ,  T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title ORDER BY T1.director ,  T1.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.title ,  T1.director, T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title ORDER BY T1.director ,  T1.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.onscholarship  =  'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( * )  FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.fname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.major FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.sportname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT open_date FROM church GROUP BY open_date HAVING count(*)  >=  2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT open_date FROM church GROUP BY open_date HAVING count ( * )    > =    2",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM church order BY open_date desc limit 1",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT open_date FROM church order BY open_date desc limit 1",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T1.organisation_type ,  T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT employer_organisation_id , count ( * )  from Research_Staff group by employer_organisation_id",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_type from Organisations",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT staff_id from Research_Staff where employer_organisation_id  =  5",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID  =  T2.CID GROUP BY T2.CID HAVING COUNT(*)  >=  5",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.cID, COUNT ( * )  FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT * FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID HAVING COUNT ( * )    > =    5",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.cid FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID   =   T2.CID GROUP BY T2.CID HAVING COUNT ( * )    > =    5",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT  player_id FROM hall_of_fame",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT  player_id,inducted FROM hall_of_fame",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT * FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob' and T1.name ! =  \"Alice\" and T1.name ! =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT max ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT min ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName from player order by HS limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName from player order by HS desc limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.name ORDER BY count ( * )  Asc LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid where t1.name  =  \"Google\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay  =  T3.StayID WHERE T3.room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient  =  T2.SSN JOIN stay AS T3 ON T1.Stay   =   T3.StayID WHERE T3.room   =   111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM patient WHERE InsuranceID  =  68476213",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT Physician FROM Undergoes WHERE patient  =  100000001",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = \"Damianfort\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT address_id FROM Addresses WHERE city   =  \"Damianfort\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT staff_id FROM Staff WHERE staff_address_id   =  14",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT staff_id,first_name, last_name FROM Staff WHERE staff_address_id   =  14",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code  =  T2.Budget_Type_code WHERE T2.budget_type_Description  =  \"Government\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   \"Government\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.Document_Details FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   \"Government\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   \"Organisation\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T2.Budget_Type_Code FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code   =   T2.Budget_Type_code WHERE T2.budget_type_Description   =   \"Organisation\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Document_Details FROM Documents_with_expenses order by Document_ID desc limit 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count ( * )  FROM shop where score > 37",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT avg ( num_of_staff )  FROM shop",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( * )  FROM party",
         "databaseID": "election"
      },
      {
         "query": "SELECT Party FROM party",
         "databaseID": "election"
      },
      {
         "query": "SELECT Party FROM party group by Party having count ( * )  > 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT Attorney_General FROM party where Party = 'Democratic'",
         "databaseID": "election"
      },
      {
         "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT asset_acquired_date FROM Assets",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT count ( distinct Nationality )  FROM pilot",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Nationality,Pilot_name FROM pilot",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT count ( * )  FROM wrestler",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT distinct location FROM wrestler",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT wrestler_id FROM wrestler",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_name FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) ",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Role_Code FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) ",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT date_of_birth FROM Employees WHERE employee_id IN  ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) ",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'male' AND T1.job  =  'doctor'",
         "databaseID": "network_2"
      },
      {
         "query": "select city from person where name  =  \"Alice\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count(*) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE T1.EMP_LNAME  =  'Graztevski'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM  CLASS",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( distinct  EMP_NUM )  FROM employee where EMP_JOBCODE = 'PROF'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT AVG(T2.Price) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  \"Sonoma\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T2.price  =   ( select max ( price )  from wine ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT max ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   \"Sonoma\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT count ( * )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   \"Sonoma\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT min ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   \"Sonoma\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT AVG ( T2.Price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County   =   \"Sonoma\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id GROUP BY T1.track_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.Location FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id where T2.Name  =  'Auto Club Speedway'",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.Location FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id where T2.Name  =  'Chicagoland Speedway'",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.Seating FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id where T2.Name  =  'Chicagoland Speedway'",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   2010 UNION SELECT salary FROM salary WHERE YEAR   =   2001",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( salary )  FROM salary WHERE YEAR   =   2010",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Name from journalist",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T1.Event_ID,T1.Date  from event as T1 join news_report as T2 on T1.Event_ID = T2.Event_ID",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( T1.age )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id JOIN event AS t3 ON t2.event_id  =  t3.id JOIN stadium AS t4 ON t4.id  =  t3.stadium_id WHERE t1.nationality  =  'Australia'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id JOIN event AS t3 ON t2.event_id   =   t3.id JOIN stadium AS t4 ON t4.id   =   t3.stadium_id WHERE t1.nationality   =   'Australia'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM swimmer where nationality   =   'Australia'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id HAVING count(*)  >=  2",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   2",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   2",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id HAVING count ( * )   =   1",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT party_name FROM party WHERE Region_id  =  3",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T1.Name ,  max(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select name from manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.Name, T2.name  FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code",
         "databaseID": "manufactory_1"
      },
      {
         "query": "select name from products order by price desc limit 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.Name ,  max ( T1.Price )  ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code GROUP BY T2.name",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.Name ,  min ( T1.Price )  ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code GROUP BY T2.name",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( HS )  FROM player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pName FROM player where pName like 'A%'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT distinct cName FROM tryout",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT name FROM projects WHERE hours  >  (SELECT avg(hours) FROM projects)",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects ORDER BY hours LIMIT 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects WHERE hours  >   ( SELECT avg ( hours )  FROM projects ) ",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT count ( * )  FROM projects",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance  LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select balance from CHECKING where custid = '3'",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT product_name ,  product_description FROM products_for_hire WHERE product_type_code  =  'Cutlery' AND daily_hire_cost  <  20",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT COUNT ( product_id )  FROM products_for_hire WHERE product_type_code   =   'Cutlery'",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT COUNT ( product_id )  FROM products_for_hire WHERE daily_hire_cost < 20",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT count ( product_id )  FROM products_for_hire WHERE product_type_code   =   'Cutlery' AND daily_hire_cost  <  20",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT distinct ( Name )  FROM Tourist_Attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Vivian\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Tourist_Details FROM Visitors WHERE Tourist_Details ! =  \"Vivian\" and Tourist_Details! =  \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Name FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) ",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Party FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) ",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Age FROM people WHERE People_id NOT IN  ( SELECT Affirmative FROM debate_people ) ",
         "databaseID": "debate"
      },
      {
         "query": "SELECT city FROM airports WHERE country  =  'United States' GROUP BY city HAVING count(*)  >  3",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  3",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  4",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports WHERE country   =   'United States' GROUP BY city HAVING count ( * )   >  4",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports WHERE elevation > 4000",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name FROM airports WHERE elevation > 5000",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T1.Title  =  \"Balls to the Wall\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T1.Title   =   \"Balls to the Wall\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T2.Name   =   \"Accept\" AND T1.Title ! =  \"Balls to the Wall\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId WHERE T1.Title  =  \"For Those About To Rock We Salute You\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE director  =  \"James Cameron\" OR YEAR   <  1980",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE  YEAR   <  1980",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE director   =   \"James Cameron\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT Status FROM roller_coaster WHERE LENGTH  >  3300 OR Height  >  100",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH  >  3300",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH  >  3300 and Height > 100",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Roller_Coaster_ID , status FROM roller_coaster WHERE LENGTH  >  3300 and Height > 100",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Roller_Coaster_ID , status, Speed FROM roller_coaster WHERE LENGTH  >  3300 and Height > 100",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT count(*) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = \"USPS\";",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT shipping_agent_code FROM Ref_Shipping_Agents",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT shipping_agent_code, count ( * )  FROM Documents group by shipping_agent_code",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.shipping_agent_code, T1.shipping_agent_name, count ( * )  FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code  =  T1.shipping_agent_code group by T2.shipping_agent_code",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city GROUP BY t2.Host_City HAVING count(*)  >  1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT t1.city  FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city GROUP BY t2.Host_City HAVING count ( * )   >  1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT distinct t1.gdp ,  t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city where t1.city  =  'Nanjing  (  Jiangsu  ) '",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT t1.city ,t1.Hanzi FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city where t2.year =  2011",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "select count ( employee_id )  from employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( Destruction_Authorised_by_Employee_ID )  FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT sum ( employee_id )  FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars )  DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,avg ( T1.stars )  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID GROUP BY T1.mID",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID where T1.stars =  ( select min ( stars )  from Rating  ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "select sum ( GamesPlayed )  from sportsinfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( gamesplayed )  FROM Sportsinfo WHERE onscholarship   =   'Y'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT distinct sportname FROM Sportsinfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT(*)  >=  2",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Aircraft FROM aircraft",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID   =   T2.Winning_Aircraft",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID   =   T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT ( * )    > =    2",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT lname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT lname FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Cat\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT lname ,  age FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Milk\" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Cat\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT COUNT ( artwork_id )  FROM nomination",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T2.Name ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T2.Name ,  T3.Festival_Name, T3.YEAR FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"USA\" AND t2.authorder  =  2 AND t1.lname  =  \"Turon\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid JOIN inst AS t4 ON t2.instid   =   t4.instid WHERE t4.country   =   \"USA\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid JOIN inst AS t4 ON t2.instid   =   t4.instid WHERE t4.country   =   \"USA\" AND t2.authorder   =   2 AND t1.lname   =   \"Turon\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "select authid from authors where lname  =  \"Turon\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id = 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id = 3",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id WHERE T2.u_id = 3",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT avg ( T2.rating )  FROM useracct WHERE T2.u_id = 1 AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name ,  avg ( T2.rating )  FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID  =  T2.FacID WHERE T2.DNO  =  520",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID   =   T2.FacID WHERE T2.DNO   =   520",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.Fname ,  T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID   =   T2.FacID WHERE T2.DNO   =  600",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.sex FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID   =   T2.FacID WHERE T2.DNO   =  600",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( Price )  FROM products",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT * FROM products where price  > =   150",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer   =   T2.code where T1.price  > =   150",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT district_name from district where district_id  =  15",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT district_name from district where district_id  =  11",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT count ( * )  FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t3.district_id  =  15",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t3.district_id  =  15",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t3.district_id  =  11",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count  >  1 GROUP BY apt_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( apt_type_code )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments WHERE bathroom_count   > =    1 GROUP BY apt_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_id FROM Apartments WHERE apt_type_code  =  'Flat'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_id, apt_id  FROM Apartments WHERE apt_type_code  =  'Flat'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT departure_date ,  arrival_date FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT departure_date FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT arrival_date FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT price FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT flno FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.order_id FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id  =  T2.order_id WHERE T2.shipment_tracking_number  =  3452",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT shipment_date FROM Shipments WHERE order_id  =  5",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT date_order_placed FROM Orders WHERE order_id  =  5",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id  =  T2.order_id WHERE T2.invoice_number  =  13",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID ORDER BY T2.Price DESC",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Title FROM book",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT t2.price FROM book as t1 join publication as t2 on t1.book_id  =  t2.book_id",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT t2.price FROM book as t1 join publication as t2 on t1.book_id  =  t2.book_id order by t2.price asc",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT t2.price, t1.title FROM book as t1 join publication as t2 on t1.book_id  =  t2.book_id order by t2.price asc",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT t2.price, t1.title FROM book as t1 join publication as t2 on t1.book_id  =  t2.book_id order by t2.price desc",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT patient FROM stay WHERE room  =  111 ORDER BY staystart DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( patient )  FROM Stay",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT patient FROM stay WHERE room  =  112 ORDER BY staystart DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( distinct room )  FROM stay",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT product_type_code ,  max(product_price) ,  min(product_price) FROM products GROUP BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name FROM products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_PRICE FROM products WHERE product_name  =  \"red jeans\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price FROM products WHERE product_name  =  \"black jeans\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Indiana University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT distinct t1.title,t1.paperID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Indiana University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT distinct t2.authID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t1.title   =   ( SELECT distinct t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid   =   t2.paperid JOIN inst AS t3 ON t2.instid   =   t3.instid WHERE t3.name   =   \"Indiana University\" ) ",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT authID,count ( * )  from Authorship group  by authID",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT title FROM course WHERE course_id NOT IN (SELECT course_id FROM prereq)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM course WHERE course_id NOT IN  ( SELECT course_id FROM prereq )  order by credits desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Kenyatta Kuhn'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE Participant_Details  =  'Karlee Batz'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "select T1.Event_ID from Events AS T1 JOIN Participants_in_Events AS T2 JOIN Participants AS T3 where Participant_Details = 'Kenyatta Kuhn'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "select count ( * )  from Events where Event_Details = 'Fail'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id FROM course WHERE title   =   'International Finance'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'International Finance' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT count ( * )  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T1.mailshot_id FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T1.customer_id FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT count ( * )  FROM mailshot_customers where customer_id  =  1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT customer_name FROM customers where customer_id  =  1",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT count ( * )  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id where T2.customer_name  =  \"Wendell\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT chargeable_amount FROM Parts WHERE part_id  =  \"1\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_name FROM Parts WHERE part_id  =  \"3\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_name FROM Parts WHERE part_id  =  \"2\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select max ( balance )  from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select min ( balance )  from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select name from accounts",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT distinct city_id  from address where district = \"Alberta\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT distinct last_update from address where district = \"QLD\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT address from address where district = \"QLD\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Name,count ( * )  FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name ,  open_date FROM church ORDER BY open_date Asc LIMIT 3",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT Organized_by FROM church ORDER BY open_date Asc LIMIT 3",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning'",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT Channel_ID from  broadcast WHERE Time_of_day   =   'Morning'",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT t1.name,t2.Channel_ID FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id   =   t2.channel_id WHERE t2.time_of_day   =   'Morning'",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT t1.name,t2.Channel_ID,Owner FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id   =   t2.channel_id WHERE t2.time_of_day   =   'Morning'",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_id ,  SUM ( salary )  FROM employees GROUP BY department_id HAVING count ( * )    > =    2",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT FIRST_NAME , LAST_NAME FROM employees where department_id  =  90",
         "databaseID": "hr_1"
      },
      {
         "query": "select department_ID from employees where FIRST_NAME  = 'Steven' and LAST_NAME  =  'King'",
         "databaseID": "hr_1"
      },
      {
         "query": "select JOB_ID,SALARY from employees where FIRST_NAME  = 'Steven' and LAST_NAME  =  'King'",
         "databaseID": "hr_1"
      },
      {
         "query": "select EMPLOYEE_ID,SALARY from employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1",
         "databaseID": "ship_1"
      },
      {
         "query": "Select count ( * )  from  ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )   >  1 ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "Select count ( * )  from  ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )    =  1 ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "Select age from captain order by age desc limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "Select age from captain order by age limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT Name FROM Person ORDER BY AGE DESC LIMIT 1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( T2.friend )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( T2.friend )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T2.name   =   'Alice' AND T1.gender   =   'female'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  <  13000 AND state = \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state = \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  <  13000 AND state  =  \"AZ\" UNION SELECT cName FROM College WHERE enr  >  15000 AND state  =  \"LA\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr>20000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr<20000 and enr>10000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College order by enr limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College order by enr desc limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.id FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.address FROM employees AS T1 JOIN customers AS T2 ON T1.id   =   T2.support_rep_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br group by  T1.team_id ORDER BY sum ( T1.attendance )  asc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  asc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance )  desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( DISTINCT building )  FROM classroom",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM classroom WHERE capacity  >  50 GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( room_number )  FROM classroom WHERE capacity  >  50",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building, count ( room_number )  FROM classroom WHERE capacity  >  50 group by building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( * )   from  Patient",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.InsuranceID FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( DISTINCT student_id )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( DISTINCT t1.course_id )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( * )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T2.student_id  =  171",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100",
         "databaseID": "gas_company"
      },
      {
         "query": "select avg ( market_value )  from company",
         "databaseID": "gas_company"
      },
      {
         "query": "select Company from company order by assets_billion desc limit 1",
         "databaseID": "gas_company"
      },
      {
         "query": "select avg ( sales_billion )  from company where rank  =  1 or rank  =  2 or rank  =  3",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT count(*) FROM postseason WHERE YEAR  =  1885 AND ties  =  1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM postseason WHERE ties   =   1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT Major FROM STUDENT WHERE Sex  =  \"F\" GROUP BY major ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT avg ( age )  FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "select fname from student where age >  (  SELECT avg ( age )  FROM STUDENT ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "select count ( fname )  from student where age >  (  SELECT avg ( age )  FROM STUDENT ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "select count ( fname )  from student where age <  (  SELECT avg ( age )  FROM STUDENT ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "select count ( fname )  from student",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Grape ,  Winery ,  YEAR FROM WINE WHERE Price  >   100 ORDER BY YEAR",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE ORDER BY price desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE ORDER BY score desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM WINE ORDER BY cases desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Winery FROM WINE ORDER BY cases asc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT amount,payment_id,customer_id FROM payment ORDER BY amount DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT payment_id FROM payment where amount>5  ORDER BY last_update DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( salary )  FROM Employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT max ( salary )  FROM Employee",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg(T1.sales) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID  =  T2.journal_ID WHERE T2.work_type  =  'Photo'",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT avg ( T1.sales )  FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID   =   T2.journal_ID WHERE T2.work_type   =   'Photo'",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT t1.journal_id FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID   =   T2.journal_ID WHERE T2.work_type   =   'Photo'",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.cmi_cross_ref_id FROM cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT cmi_cross_ref_id FROM cmi_cross_references where cmi_cross_ref_id not in  ( Select T1.cmi_cross_ref_id from cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ) ",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.policy_type_code   =   \"Deputy\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT count ( * )  FROM Employees JOIN Circulation_History ON Circulation_History.employee_id  =  Employees.employee_id GROUP BY employees.employee_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id  =  Employees.employee_id GROUP BY employees.employee_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT count ( * )  FROM Employees JOIN Circulation_History ON Circulation_History.employee_id  =  Employees.employee_id where Employee_name  =  \"Kenyon\"",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT(*)  >=  2",
         "databaseID": "election"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2 ) ",
         "databaseID": "election"
      },
      {
         "query": "SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2",
         "databaseID": "election"
      },
      {
         "query": "SELECT Comptroller FROM PARTY WHERE US_Senate in  ( SELECT US_Senate FROM PARTY WHERE PARTY IN  ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )    > =    2 )  ) ",
         "databaseID": "election"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder   =    ( SELECT max ( authorder )  FROM authorship ) ",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( distinct authID )  fROM Authorship",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder   =    ( SELECT min ( authorder )  FROM authorship ) ",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT  paperID,avg ( authOrder )  FROM authorship group by paperID",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id  =  T2.church_id WHERE T2.year  =  2015",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  from church",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM church AS T1 JOIN wedding AS T2 ON T1.church_id   =   T2.church_id WHERE T2.year   =   2015",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id   =   T2.church_id WHERE T2.year   =   2015",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT avg(height) ,  avg(weight) FROM people WHERE sex  =  'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT height FROM people WHERE Name  =  'Hubert Henno'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE Sex  =  'M'",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT name FROM people WHERE Sex  =  'M' ORDER BY Height DESC LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Meaghan\" AND T2.customer_last_name  =  \"Keeling\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T2.customer_first_name   =   \"Meaghan\" AND T2.customer_last_name   =   \"Keeling\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT COUNT ( * )  from Customers",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT * from Customers Where customer_id = 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T2.customer_name  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'Order'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T2.payment_method  FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'Order'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'No Response'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT YEAR FROM hosting_city ORDER BY YEAR DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT MATCH_ID FROM hosting_city WHERE YEAR  =  2013",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT hOST_CITY FROM hosting_city WHERE YEAR  =  2013",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id ,count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id ,  T1.other_details ,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( * )  FROM Residents",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR   =   2008 OR YEAR   =   2010",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT Chair_Name FROM festival_detail WHERE YEAR   =   2008 OR YEAR   =   2010",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT start_station_id ,  start_station_name FROM trip GROUP BY start_station_name HAVING COUNT(*)  >=  200",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT start_station_id  FROM trip",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( DISTINCT start_station_id )  FROM trip WHERE start_station_id IN  ( SELECT start_station_id FROM trip GROUP BY start_station_name HAVING COUNT ( * )   > =   200 ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT ( * )   > =   200",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count  ( * )  from  ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count  ( * )  from  ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id where recommendations  =  \"Transfer schools\" GROUP BY T1.student_id ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.student_id ,  T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id  =  t2.id JOIN stadium AS t3 ON t3.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id   =   t2.id JOIN stadium AS t3 ON t3.id   =   t2.stadium_id GROUP BY t2.stadium_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( name )  from event",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( name )  from stadium",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT Starting_Year FROM technician WHERE Team  =  \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team  =  \"CWS\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT name from technician where team  =  \"CLE\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT name from technician where team  =  \"CWS\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Starting_Year FROM technician WHERE Team   =   \"CLE\" INTERSECT SELECT Starting_Year FROM technician WHERE Team   =   \"CWS\"",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT avg(lat) ,  avg(long) FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT avg ( lat )   FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT avg ( long )  FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT installation_date FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name,installation_date FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name,dock_count FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = \"stanley.monahan@example.org\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "select email_address from people",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.candidate_id,T1.email_address FROM people AS T1 JOIN candidates AS T2 ON T1.person_id  =  T2.candidate_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "select T2.candidate_id, T1.email_address from people AS T1 JOIN Candidates as T2 ON T1.person_id  =  T2.candidate_id WHERE T1.email_address  =  'stanley.monahan@example.org'",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.Type   =   \"City Mall\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"City Mall\" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.Type  =  \"Village Store\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Grape FROM GRAPES WHERE Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT avg ( score )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT avg ( score )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color  ! =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Name ,   T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT max ( price ) , min ( price ) ,avg ( price )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Name ,  sum(T1.Num_of_stock) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT Name FROM phone AS T2 ORDER BY price ASC LIMIT 1",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT phone_id FROM phone_market ORDER BY num_of_stock DESC LIMIT 1",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T2.Name ,  sum ( T1.Num_of_stock )  FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID   =   T2.Phone_ID GROUP BY T2.Name",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT carrier FROM phone WHERE name  =  \"IPhone 6s\"",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name FROM Customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT max ( customer_code )  FROM Customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_address FROM Customers WHERE customer_name  =  \"Ahmed\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  from document_locations where Location_Code  =  'x'",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation FROM airports WHERE name  =  \"Goroka Airport\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes WHERE dst_apid IN  ( SELECT apid FROM airports WHERE country   =   'Canada' )  AND src_apid IN  ( SELECT apid FROM airports WHERE country   =   'United States' ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"English\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_name FROM courses WHERE course_id  =  301 or course_id  =  302",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT date_of_attendance FROM student_course_attendance WHERE student_id  =  111 or student_id  =  121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( * )  FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"English\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT distinct(catalog_publisher) FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_name FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT date_of_latest_revision FROM catalogs WHERE catalog_publisher LIKE \"%Murray%\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_publisher FROM catalogs WHERE catalog_publisher LIKE \"%chocolate%\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "select count ( * )  from catalogs where catalog_publisher in  ( SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE \"%chocolate%\" ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "select catalog_name,date_of_publication from catalogs where catalog_publisher in  ( SELECT distinct ( catalog_publisher )  FROM catalogs WHERE catalog_publisher LIKE \"%chocolate%\" ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating  <   ( SELECT max ( rating )  FROM song WHERE genre_is   =   \"blues\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating  >   ( SELECT max ( rating )  FROM song WHERE genre_is   =   \"blues\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name,rating FROM song WHERE  genre_is   =   \"blues\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id  =  T2.id WHERE T2.name  =  \"Billy Cobham\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id  =  T2.id WHERE T2.name  =  \"Billy Cobham\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id  =  T2.id WHERE T2.name  =  \"Billy Cobham\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select distinct product_category_code from Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select unit_of_measure from Ref_Product_Categories where product_category_code  =  'Seeds'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code WHERE t1.product_name   =   \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select count ( * )  from Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"caraway\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count(*) FROM region AS t1 JOIN party AS t2 ON t1.region_id  =  t2.region_id JOIN party_events AS t3 ON t2.party_id  =  t3.party_id WHERE t1.region_name  =  \"United Kingdom\" AND t3.Event_Name  =  \"Annaual Meeting\"",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT event_id, event_name from party_events",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT event_id, event_name from party_events where event_name  =  \"Annaual Meeting\"",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T3.event_id, T3.event_name FROM region AS t1 JOIN party AS t2 ON t1.region_id   =   t2.region_id JOIN party_events AS t3 ON t2.party_id   =   t3.party_id WHERE t1.region_name   =   \"United Kingdom\" AND t3.Event_Name   =   \"Annaual Meeting\"",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT count(*) ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id  =  T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  ,  T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.engineer_visit_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.contact_staff_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.fault_status FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id where T2.fault_log_entry_id  =   ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.fault_description FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.other_fault_details FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id   =   T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code GROUP BY t1.document_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( * )  FROM Document_Sections",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT access_count FROM Documents ORDER BY access_count DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( DISTINCT section_title )  FROM Document_Sections",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T1.source_system_code ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.source_system_code  FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id ORDER BY T2.council_tax_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT source_system_code FROM CMI_Cross_References",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT  distinct  Grape  FROM WINE WHERE Score  >  93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT  distinct appelation   FROM WINE WHERE Score  >  93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT   Name   FROM WINE WHERE Score  >  93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT avg ( City_Population )  FROM district",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT max ( City_Population )  FROM district",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T1.clubname from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( position )  from member_of_club where clubid  =   ( SELECT T2.clubid from club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid group by T2.clubid order by count ( * )  desc limit 1 ) ",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Official_Name FROM city WHERE Population  >  1500 OR Population  <  500",
         "databaseID": "farm"
      },
      {
         "query": "SELECT Official_Name FROM city order by Area_km_2 desc limit 1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   6",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T2.Name FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id group by T1.member_id order by count ( * )  desc limit 2",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT hometown from member where name  =  \"Myron Pryor\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT t2.branch_id from member as t1 join purchase as t2 on t1.member_id  =  t2.member_id where name  =  \"Myron Pryor\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Product_Name FROM Products WHERE Product_ID NOT IN (SELECT Product_ID FROM Products_in_Events)",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT count ( * )  FROM Products WHERE Product_ID NOT IN  ( SELECT Product_ID FROM Products_in_Events ) ",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT product_name FROM Products WHERE Product_ID NOT IN  ( SELECT Product_ID FROM Products_in_Events ) ",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT sum(amount) ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id GROUP BY T1.bname",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.loan_type, T1.bname, T2.branch_ID, T2.amount FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id GROUP BY T1.bname",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT branch_ID, bname, no_of_customers from bank",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT sum ( amount )  ,  T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id GROUP BY T1.bname",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT count ( * )  FROM country WHERE country_id NOT IN  (  SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000  ) ",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select T2.Name from roller_coaster as T1 JOIN country as T2 ON T1.Country_ID  =  T2.Country_ID where T1.Length > 5000",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select max ( Length )  from roller_coaster",
         "databaseID": "roller_coaster"
      },
      {
         "query": "select Park from roller_coaster order by Speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select product_id from Products where product_name  =  'food'",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select T2.order_id from Products as T1 join Order_Items as T2 where T1.product_id  =  T2.product_id and T1.product_name  =  'food'",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select T3.customer_id from Products as T1 join Order_Items as T2 join Orders as T3 where T1.product_id  =  T2.product_id and T1.product_name  =  'food' and T3.order_id  =  T2.order_id",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.institution ,  count ( * )  FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id GROUP BY T1.institution_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T2.protein_name   FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id where T1.institution = \"Lindenwood University–Belleville\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT divergence_from_human_lineage FROM protein where protein_name = \"Centromeric protein E, putative\" or protein_name = \"conserved hypothetical protein\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT accession_number FROM protein where protein_name = \"Centromeric protein E, putative\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT sequence_identity_to_human_protein FROM protein where accession_number = \"XP_002429877.1\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT protein_name FROM protein order by  sequence_identity_to_human_protein desc limit 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select count ( distinct custid )  from accounts",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select count ( * )  from checking",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT min ( balance )  FROM savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid order by T3.balance limit 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min(bikes_available)  <  7",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name, id FROM station where id  =  1 or id  =  2",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE lat  >  37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min ( bikes_available )   <  7",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT installation_date FROM station WHERE id  =  4",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count(*) FROM people WHERE is_male  =  'F' AND age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE is_male   =   'F'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE is_male   =   'T'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE age > 30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE is_male   =   'F' AND age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id  =  t2.route_id GROUP BY t1.route_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id   =   t2.route_id GROUP BY t1.route_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT count ( route_name )  FROM Delivery_Routes",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT t2.location_code,count ( * )  FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id   =   t2.route_id",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT StuID FROM Student WHERE sex  =  'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname  =  \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Student WHERE sex   =   'F'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo WHERE sportname   =   \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Student WHERE sex   =   'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname   =   \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id   =   T2.track_id JOIN playlists AS T3 ON T2.playlist_id   =   T3.id WHERE T3.name   =   'Movies'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id   =   T2.track_id JOIN playlists AS T3 ON T2.playlist_id   =   T3.id WHERE T3.name  ! =   'Music'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT name FROM driver WHERE driver_id NOT IN (SELECT driver_id FROM school_bus)",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT name FROM driver",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT name, driver_id FROM driver",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT t1.name, t2.years_working FROM driver as t1 join school_bus as t2 where t1.driver_id  =  t2.driver_id",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE film_id = 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT film_id FROM film WHERE LENGTH > 100",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film  WHERE release_year = 2006",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film  EXCEPT SELECT title FROM film WHERE replacement_cost > 200",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count(*) LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( student_id )  FROM student_course_registrations",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( course_id )  FROM student_course_registrations",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT student_id FROM student_course_registrations GROUP BY student_id  having count ( * )   =  1 ) ",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT student_id FROM student_course_registrations GROUP BY student_id  having count ( * )   =  1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT max(T1.HS) ,  pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T1.HS  >  1000 GROUP BY T2.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( distinct pPos )  from tryout",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT * from player where hs > 1000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT hs from player order by hs desc limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  \"Balls to the Wall\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  \"Balls to the Wall\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT distinct T2.composer FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.title  =  \"Balls to the Wall\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Columbus Crew\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team   =   T2.Team_id WHERE T2.Name   =   \"Columbus Crew\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT singles_WL from player where player like \"%Hong%\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T2.address_id ,  T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id  =  T2.address_id ORDER BY monthly_rental DESC LIMIT 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select monthly_rental from Student_addresses order by monthly_rental desc limit 1",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.address_id FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id   =   T2.address_id where T2.monthly_rental  =  1297.807",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT count ( * )  from broadcast",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT * from channel",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT owner from channel where name = \"CCTV-1\"",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT name from channel where rating_in_percent  =   ( select max ( rating_in_percent )  from channel ) ",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT DISTINCT T1.id ,  T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id WHERE T2.bikes_available  >  12",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  from status",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT city from station where name  =  \"San Jose Civic Center\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  from station",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT region_id FROM region  WHERE region_name   =   'Denmark'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T3.storm_id FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.region_name  =  'Denmark'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "select count ( * )  from employees where first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "select first_name from employees where first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "select first_name,last_name from employees where first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN locations AS T3 ON T2.location_id   =   T3.location_id WHERE T1.first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT max(Cows) ,  min(Cows) FROM farm",
         "databaseID": "farm"
      },
      {
         "query": "SELECT max ( Cows )  ,  min ( Cows )  FROM farm",
         "databaseID": "farm"
      },
      {
         "query": "SELECT max ( Total_Horses )  ,  min ( Total_Horses )  FROM farm",
         "databaseID": "farm"
      },
      {
         "query": "SELECT oxen, total_cattle  FROM farm where farm_id  =  1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   \"Editor\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   \"Editor\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\" AND T1.Date_of_Birth > 1978",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT count ( state )  FROM bank where no_of_customers>0",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT state FROM bank where no_of_customers>0",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT state FROM bank GROUP BY state ORDER BY sum ( no_of_customers )  DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count(*)  >=  2",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name, time FROM swimmer",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT  t1.time, t2.event_id FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id HAVING count ( * )   > =   2",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T1.title ,  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director  =  T2.director WHERE T1.title != T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( * )  FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( director )  FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( distinct T1.director )  FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.title  FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT  T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director   =   T2.director WHERE T1.title ! =  T2.title",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.amount_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.transaction_type_description  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count   > =    10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.date_of_transaction  FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count   > =    10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  >  (SELECT avg(balance) FROM checking) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT avg(balance) FROM savings)",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( balance )  FROM checking",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( balance )  FROM savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid WHERE T2.balance  >   ( SELECT avg ( balance )  FROM checking )  INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid WHERE T2.balance  <   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT location ,  country FROM match WHERE round  =  \"1.0\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT pilot_id FROM pilot WHERE name  =  \"Prof. Zackery Collins\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id   =   t2.winning_pilot ORDER BY t1.age LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id Order by Max_speed limit 1",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT avg ( Max_speed )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT avg ( Damage_millions_USD )   FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT Employees.employee_name , count(*) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id group by t1.employee_name order by count ( * )  desc limit 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT t1.employee_name, sum ( t2.draft_number )  FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT sum ( t2.copy_number )  FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id  =  t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT apt_type_code ,  bathroom_count ,  bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum(room_count) DESC LIMIT 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code,room_count FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code,room_count FROM Apartments order by room_count desc limit 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code ,  sum ( room_count )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code ,  sum ( room_count ) , sum ( bathroom_count ) ,sum ( bedroom_count )  FROM Apartments WHERE apt_type_code  =  \"Flat\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT DISTINCT t3.customer_id FROM products AS t1 JOIN complaints AS t2 ON t1.product_id   =   t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count ( * )  LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id   =   t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id having t3.customer_id =  \"113\"",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country  FROM invoices GROUP BY billing_country ORDER BY SUM ( total )  DESC LIMIT 8",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_city  FROM invoices where billing_city  like \"%O%\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT distinct billing_address FROM invoices where billing_city  = \"Boston\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id  =  t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id   =   t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select Claim_ID from Claims_Processing_Stages AS T1 JOIN Claims_Processing AS T2 ON T1.Claim_Stage_ID  =  T2.Claim_Stage_ID WHEREClaim_Status_Name = 'Open'",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select distinct Claim_Stage_ID from Claims_Processing",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT invoice_number  from Shipments",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT invoice_number, \norder_id from Shipments",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT date_order_placed from Orders where order_id = 9",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT product FROM product WHERE product != (SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT max_page_size FROM product WHERE max_page_size ! =  'A4'",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count(*)  >  1;",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * )   >  1",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * )    =   1",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Hardware_Model_name FROM phone where Company_name  =  \"Nokia Corporation\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT T1.bname ,  T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.loan_type  =  'Business'",
         "databaseID": "loan_1"
      },
      {
         "query": "select bname from bank",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id WHERE T2.loan_type   =   'Business'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id   =   T2.branch_id WHERE T2.loan_type   =   'Business'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T3.Party_Theme ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT party_theme from party",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T2.name, T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )   LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( t3.paperID )  FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT store_id, store_name FROM store",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_id, t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t3.district_name  =  \"Khanewal District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T1.season ,  T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id  =  T2.id JOIN injury_accident AS T3 ON T1.id  =  T3.game_id WHERE T3.injury  =  'Foot injury' OR T3.injury  =  'Knee problem'",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  from game",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT total_attendance from stadium where name  =  \"FedExField\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor  =  \"8741\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor   =   \"8741\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT lname, fname from student where stuID  =  \"1001\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.StuID WHERE T2.PRESIDENT_VOTE  =  \"1004\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.StuID WHERE T2.Vice_President_Vote  =  \"1007\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT age FROM STUDENT where lname  =  \"Smith\" and fname  =  \"Linda\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT lname, fname FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT master_customer_id, cmi_details from Customer_Master_Index",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id from customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id   =   T2.master_customer_id WHERE T1.cmi_details   =   'Gottlieb, Becker and Wyman'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT max ( market_share )  FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT min ( market_share )  FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT avg ( market_share )  FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name FROM browser where market_share >  ( select avg ( market_share )  from browser ) ",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Profits_billion FROM company where company  =  \"ExxonMobil\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Company FROM company where Market_Value  =  213.7",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Headquarters FROM company where Company  =  \"General Electric\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY T2.invoice_date DESC LIMIT 5;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name, T1.city, T1.state FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name, T1.city, T1.state, T1.country FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.email FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id ORDER BY T2.invoice_date DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T2.date_problem_reported FROM problems AS T1 JOIN Problems AS T2  WHERE T2.problem_description  = \"w\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.other_staff_details FROM problems AS T2 JOIN Staff AS T1 WHERE T2.date_problem_reported  =  '1976-12-18 23:54:41' and T2.reported_by_staff_id  =  T1.staff_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM student GROUP BY dept_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT SUM ( tot_cred )  FROM student WHERE dept_name  =  \"Civil Eng.\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT ID FROM student WHERE dept_name  =  \"Civil Eng.\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count(T1.id)  >  10;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from albums",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from  ( select count ( * )  FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id HAVING count ( T1.id )   <  10 ) ",
         "databaseID": "store_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM albums AS T1 JOIN tracks AS T2 ON T1.id  =  T2.album_id GROUP BY T1.id HAVING count ( T1.id )    > =    10 ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type  =  'Full'",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  FROM phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count ( * )  FROM chip_model",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type   =   'Full'",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type   =   'Full'",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name,product_price FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price asc LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products WHERE product_type_code   =   'Hardware'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products WHERE product_type_code   =   'Clothes'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT name FROM member WHERE member_id NOT IN (SELECT member_id FROM membership_register_branch)",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name FROM member WHERE member_id IN  ( SELECT member_id FROM membership_register_branch ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name FROM member WHERE member_id NOT IN  ( SELECT member_id FROM membership_register_branch ) ",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( distinct branch_id )  FROM membership_register_branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "select Player_name from player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Sponsor_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy where StuID  =  1001",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy where StuID  =  1002",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT * FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT investor_id FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT sum(revenue) FROM manufacturers WHERE Headquarter  =  'Tokyo' OR Headquarter  =  'Taiwan'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Headquarter FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Founder FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( Revenue )  FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T2.employee_name ,  T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  from Employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Planned_Destruction_Date from Documents_to_be_Destroyed where Document_ID = 11",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Employee_Name from Employees where Employee_ID = 30",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM person EXCEPT SELECT name FROM PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job FROM person WHERE name  =  'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT t2.All_Games ,  t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE team_name  =  'Clemson'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t2.All_Home FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t2.All_Road FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Clemson'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id WHERE team_name   =   'Duke'",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT zip_postcode FROM addresses where state_province_county = 'Colorado'",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT town_city FROM addresses where state_province_county = 'Colorado'",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT town_city FROM addresses where state_province_county = 'NorthCarolina'",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT zip_postcode FROM addresses",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Liberal\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Democratic\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Liberal\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Democratic\" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Liberal\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT id FROM teaches WHERE semester   =   'Fall' AND YEAR   =   2009",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT id FROM teaches WHERE semester  =  'Fall' AND YEAR  =  2009 EXCEPT SELECT id FROM teaches WHERE semester  =  'Spring' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT count ( cust_name )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT count ( loan_type )  FROM loan",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT count ( distinct acc_type )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT avg ( acc_bal )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Annual_interchanges FROM station ORDER BY Annual_interchanges DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT sum ( Total_Passengers )  FROM station",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )    =   1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Lname, Fname FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.Lname, T2.Fname FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid where T2.Lname = \"Goodrich\" and T2.Fname = \"Michael\" UNION SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid  =  T2.Facid where T2.Lname = \"Masson\" and T2.Fname = \"Gerald\"",
         "databaseID": "activity_1"
      },
      {
         "query": "select count ( * )  from faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID GROUP BY T1.Instructor ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( distinct instructor )  from Course",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT instructor from Course group by instructor order by count ( * )  desc limit 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT * FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id   =   T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( distinct country )  from match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( distinct player )  from match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count ( distinct college )  from match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count(*) ,  T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id  =  T2.supplier_company_id GROUP BY T1.company_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  FROM assets",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  FROM Third_Party_Companies",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * )  LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_Type_Code FROM Customer_Policies where Customer_ID = '3'",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Start_Date FROM Customer_Policies where Policy_ID = '143'",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Policy_ID FROM Customer_Policies where Policy_Type_Code = 'Life'",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "select LName,Fname from student where major in  ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "select advisor from student where major  =   ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "select advisor from student where major in  ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 2 )  and major ! =   ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count(*) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses )",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( * )  FROM Documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( document_id )  FROM Documents_with_expenses",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT distinct Document_Type_Code FROM Documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT distinct Budget_Type_Code FROM Documents_with_Expenses",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Company_ID,Name,Headquarters FROM company",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * )   > =   2",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes )",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects where \nproject_id = 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_outcomes  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id  FROM Projects WHERE \nproject_id = 2",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT count ( * )  FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DISTINCT dept_name )  FROM department where school_code  =  \"BUS\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT max(resolution) FROM song WHERE rating  <  8)",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT resolution FROM song WHERE rating  <  8",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id,resolution FROM song WHERE resolution  >   ( SELECT max ( resolution )  FROM song WHERE rating  <  8 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id,resolution FROM song WHERE resolution   > =   1080",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name,rating FROM song WHERE resolution   > =   1080",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT t1.name ,  t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id ORDER BY t2.support_rate DESC LIMIT 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t2.support_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.name  =  \"Vincent Montméat\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t2.oppose_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.name  =  \"Vincent Montméat\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT max(Account_details) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Account_details FROM Accounts order by Account_details desc limit 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%5%\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Statement_ID FROM  Accounts WHERE Account_details LIKE \"%5%\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Account_details FROM Accounts WHERE Account_details LIKE \"%9%\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Account_ID FROM Accounts WHERE Account_details LIKE \"%9%\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.hours  =  (SELECT max(hours) FROM projects)",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM Projects order by hours desc limit 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT code from Projects WHERE Name  =  'A Magnetic Primer Designer'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Scientist from AssignedTo where Project ! =  'Bte2'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT(*)  >  1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )   >  1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )    =   1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T1.Official_Name, T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )   =  1",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID where T1.Official_Name  =  \"Plaster Rock\"",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID   =   T2.Host_city_ID where T2.Theme  =  \"Carnival M is back!\"",
         "databaseID": "farm"
      },
      {
         "query": "SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode  =  t2.screen_mode WHERE t2.Accreditation_type  =  'Full'",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT pixels FROM screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "select count ( * )  from screen_mode",
         "databaseID": "phone_1"
      },
      {
         "query": "select * from phone where screen_mode  =   ( select max ( screen_mode )  from phone ) ",
         "databaseID": "phone_1"
      },
      {
         "query": "select chip_model  from phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE T1.name  =  'John F Kennedy International Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT dst_apid,dst_ap FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT * FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.name   =   'John F Kennedy International Airport'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name   =   \"Dinning\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name   =   \"Trading Policy\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name   =   \"Business Policy\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT T1.part_id ,  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id  =  T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id  =  T3.part_fault_id GROUP BY T1.part_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT  T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id   =   T3.part_fault_id GROUP BY T1.part_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT   count ( * )  FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id   =   T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id   =   T3.part_fault_id   GROUP BY T1.part_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT name ,  seating FROM track WHERE year_opened  >  2000 ORDER BY seating",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name FROM track WHERE year_opened  >  2000",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name, seating FROM track WHERE year_opened  >  2000",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT name,location FROM track WHERE year_opened  >  2000",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name ,  T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id  =  T2.actor_id GROUP BY T2.actor_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id   =   T2.actor_id GROUP BY T2.actor_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT actor_id from actor where first_name  =  'GINA' and last_name  =  'DEGENERES'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT last_update from actor where first_name  =  'GINA' and last_name  =  'DEGENERES'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT count ( * )  FROM member",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Nationality FROM member where member_id  =  4",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Nationality FROM member group by Nationality order by count ( * )  desc limit 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DISTINCT T2.lettergrade FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID order by T2.gradepoint limit 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM park",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT city FROM park where park_name  =  \"Riverside Park\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT state FROM park where park_name   =  \"Columbia Park\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game where year  =  1871",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id WHERE T2.subject_name  =  \"Computer Science\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id WHERE T2.subject_name  =  \"Arts\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id WHERE T2.subject_name  =  \"Language\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.subject_name FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id   =   T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT ( * )  ASC",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION   =   \"East\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION   =   \"West\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_force FROM county_public_safety WHERE LOCATION   =   \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION   =   \"West\"",
         "databaseID": "county_public_safety"
      },
      {
         "query": "select count ( * )  from  ( SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"East\" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION  =  \"West\" ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT Headquartered_City FROM district ORDER BY city_population DESC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT City_Area FROM district ORDER BY city_population DESC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT count ( * )   FROM district where city_population > 500000",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT headquartered_city FROM district where city_population > 500000",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( T1.duration )  ,  min ( T2.rating )  ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name from song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )   FROM song where artist_name  =  \"Enrique\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT TYPE ,  count(*) FROM mill GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT TYPE  FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT TYPE, count ( * )   FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "select built_year from mill where type  =   ( SELECT TYPE FROM mill GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id  =  T2.artist_id WHERE T1.ticket_price  >  (SELECT avg(ticket_price) FROM exhibition)",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT count ( * )  FROM exhibition",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT age FROM artist where name  =  \"Vijay Singh\"",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT ticket_price FROM exhibition order by ticket_price desc limit 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.theme ,  T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id   =   T2.artist_id WHERE T1.ticket_price  >   ( SELECT avg ( ticket_price )  FROM exhibition ) ",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT player_name from player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name, T3.gender, T2.coach_name, T2.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID ORDER BY T3.Votes DESC",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT player_name, votes from player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT player_name, votes from player order by votes desc",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count(*) FROM Faculty WHERE Rank  =  \"Professor\" AND building  =  \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE Rank   =   \"Professor\" AND building   =   \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE Rank   =   \"Instructor\" AND building   =   \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty WHERE building   =   \"NEB\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( salary )  FROM salary ",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary )  DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary )  ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum(hoursperweek)  >  10",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum ( hoursperweek )  > 10",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo where SportName = 'Football'",
         "databaseID": "game_1"
      },
      {
         "query": "select avg ( HoursPerWeek )  from SportsInfo where SportName = 'Football'",
         "databaseID": "game_1"
      },
      {
         "query": "select avg ( HoursPerWeek )  from SportsInfo",
         "databaseID": "game_1"
      },
      {
         "query": "select distinct SportName from SportsInfo",
         "databaseID": "game_1"
      },
      {
         "query": "select avg ( HoursPerWeek )  from SportsInfo where SportName = 'Lacrosse'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT(*) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT DISTINCT Name FROM Tourist_attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name, Tourist_attraction_ID FROM Tourist_attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID ,   COUNT ( * )  FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "select ResName from  Restaurant where ResID  =  1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "select address from  Restaurant where ResID  =  1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "select Rating from  Restaurant where ResID  =  1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count ( * )  FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT institution from institution where founded = 2003",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id  =  T2.building_id WHERE T2.founded > 2003",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id  =  T2.building_id WHERE T2.founded < 2003",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname FROM STUDENT",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname FROM STUDENT WHERE Fname LIKE \"%a%\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT address from customers where state  =  'SP'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT country from customers where support_rep_id  =  5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT name from tracks where album_id  =  3",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT unit_price from tracks where id  =  6",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT composer from tracks where genre_id  =  1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "select name_first, name_last from player where player_id in  ( SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3 )  order by birth_year, birth_month, birth_day desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.player_id, T2.league_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id   =   T2.player_id GROUP BY T1.player_id ORDER BY count ( * )  DESC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID WHERE T2.Price  >  4000000",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT max ( T2.price )  FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID WHERE T1.Title  =  \"The Black Lamb\"",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT T2.Price FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID   =   T2.Book_ID WHERE T2.Publisher  =  \"Wiley\" and T2.Publication_Date  =  \"June 2006\"",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Writer FROM book WHERE Title  =  \"Bloody Mary\"",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT country_name, country_id FROM country where Capital   =   \"Dublin\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT position FROM match_season where country  =  4",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT player FROM match_season where country  =  4",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT T1.player FROM match_season as T1 join country as T2 on T1.country  =  T2.country_id where T2.country_name  =   \"Iraq\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT count(*) ,  class_room FROM CLASS GROUP BY class_room HAVING count(*)  >=  2",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT class_code  FROM CLASS where CLASS_ROOM  =  'BUS311'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT PROF_NUM FROM CLASS where CRS_CODE  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CLASS_TIME FROM CLASS where CLASS_SECTION  = 3",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  ,  class_room FROM CLASS GROUP BY class_room HAVING count ( * )    > =    2",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT DISTINCT dept_name FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name  =  \"Statistics\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Year FROM film_market_estimation  ORDER BY Year DESC",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\"",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID WHERE T2.Country  =  \"Japan\" ORDER BY T1.Year DESC",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Orton\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Benjamin\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Elimination_Move FROM Elimination WHERE Eliminated_By  =  \"Benjamin\" and team = 'Team Batista'",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Time FROM Elimination WHERE Eliminated_By  =  \"Benjamin\" and team = 'Team Batista'",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Team FROM Elimination WHERE Eliminated_By  =  \"Punk\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Elimination_Move FROM Elimination WHERE Eliminated_By  =  \"Punk\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"",
         "databaseID": "e_learning"
      },
      {
         "query": "select count ( student_id )  from Students where family_name  =  \"Zieme\"",
         "databaseID": "e_learning"
      },
      {
         "query": "select personal_name from Students where family_name  =  \"Zieme\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT Ref_Shipping_Agents.shipping_agent_name , count(Documents.document_id) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count(Documents.document_id) DESC LIMIT 1;",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code  =  T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count ( T2.document_id )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code  =  T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count ( T2.document_id )   LIMIT 1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T2.receipt_date FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code  =  T1.shipping_agent_code WHERE T1.shipping_agent_name = \"Airline\"",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT state FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT acc_type FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )   LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code  =  \"PUR\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.cust_name ,  T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name HAVING sum(T2.amount)  >  5000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )    > =    5000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_id,T1.cust_name,T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )    > =    5000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.credit_score,count ( * )  FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id where T1.cust_name  =  \"Owen\"",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT * FROM film WHERE special_features LIKE '%Deleted Scenes%'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  FROM film WHERE special_features LIKE '%Deleted Scenes%'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT distinct StuID FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT distinct StuID FROM Sportsinfo",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT(*)  >  2",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT name FROM roller_coaster order BY speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT height FROM roller_coaster order BY speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT status FROM roller_coaster order BY speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT ( * )   >  2",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id  =  T2.organization_id WHERE T2.organization_details  =  'Denesik and Sons Party'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT organization_id FROM Organizations\n where organization_details   =   'Denesik and Sons Party'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT service_type_code FROM services\n where service_id   =   '10'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T2.organization_details FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id   =   T2.organization_id WHERE  t1.service_id  =   '11'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id   =   T2.organization_id WHERE T2.organization_details   =   'Denesik and Sons Party'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "select max ( salary )  from  instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id   =   T2.id JOIN student AS T3 ON T1.s_id   =   T3.id WHERE T3.dept_name   =   'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "select salary from instructor where name  =  'McKinnon'",
         "databaseID": "college_2"
      },
      {
         "query": "select dept_name from instructor where name  =  'McKinnon'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select  custid,balance from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select  balance  from CHECKING",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T1.name  =  \"Weeks\"",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT max(Population) ,  min(Population) FROM county",
         "databaseID": "election"
      },
      {
         "query": "SELECT avg ( Population )  FROM county",
         "databaseID": "election"
      },
      {
         "query": "SELECT county_name FROM county order by population asc limit 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT county_name FROM county order by population desc limit 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT zip_code FROM county order by population desc limit 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT name ,  headquarter ,  founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name  FROM manufacturers ORDER BY revenue DESC LIMIT 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name  FROM manufacturers ORDER BY revenue asc LIMIT 2,1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Founder FROM manufacturers where  name = \"Creative Labs\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT avg ( Revenue )  FROM manufacturers",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT founder FROM manufacturers ORDER BY revenue DESC LIMIT 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name FROM Products WHERE Product_Type_Code  =  \"Food\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Type_Code  =  \"Food\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name, Product_Price FROM Products WHERE Product_Type_Code  =  \"Books\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name, Product_Type_Code FROM Products ORDER BY Product_Price DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Name, Product_Type_Code FROM Products WHERE Product_Price <  ( SELECT AVG ( Product_Price )  FROM Products ) ",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT max(T2.gradepoint) ,  min(T2.gradepoint) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T3.city_code  =  \"NYC\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT max ( T2.gradepoint )   FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID WHERE T3.city_code   =   \"NYC\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT min ( T2.gradepoint )   FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID WHERE T3.city_code   =   \"NYC\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT min ( T2.gradepoint )   FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade   =   T2.lettergrade AND T1.StuID   =   T3.StuID WHERE T3.city_code   =   \"HKG\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM INVOICES where payment_method_code  =  \"MasterCard\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM INVOICES where payment_method_code  =  \"Visa\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major = 600;",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count ( * )  from student where age > 18",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE  Major  =  600",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major  =  600",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount) DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT AVG ( credit_score )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT MAX ( credit_score )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT MAX ( acc_bal )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT t3.headquartered_city ,  count(*) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT count ( * )  FROM store",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT store_name FROM store",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT City_Population FROM district where  Headquartered_City  =  \"Attock City\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT Area_size FROM store where store_name  =  \"Neguac\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Name FROM WINE WHERE Winery  =  \"Brander\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Name,Year FROM WINE WHERE Winery  =  \"Brander\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Name FROM WINE WHERE YEAR  <   ( SELECT min ( YEAR )  FROM WINE WHERE Winery   =   \"Brander\" ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip WHERE duration   > =     ( SELECT avg ( duration )  FROM trip WHERE zip_code   =   94103 ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT team_id, acc_percent FROM basketball_match",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT acc_percent FROM basketball_match order by acc_percent limit 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT acc_percent FROM basketball_match order by acc_percent desc limit 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select document_date from documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select document_name from documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select document_type_code from documents",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Name FROM technician WHERE technician_id NOT IN (SELECT technician_id FROM repair_assignment)",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Name FROM technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT machine_id FROM repair_assignment",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT technician_id, age FROM technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Name FROM technician WHERE technician_id NOT IN  ( SELECT technician_id FROM repair_assignment ) ",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT count ( t2.section_title )  FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   \"David CV\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   \"David CV\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT t2.section_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   \"David CV\" and t2.section_title  =  \"after\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT t2.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code   =   t2.document_code WHERE t1.document_name   =   \"David CV\" and t2.section_title  =  \"after\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id  =  T2.document_id WHERE T1.statement_details  =  'Private Project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_type_code from documents where project_id  =  30",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT statement_details from statements where statement_id  =  197",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_name from documents where document_id  =  42",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.statement_details ,  T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id   =   T2.document_id WHERE T1.statement_details   =   'Private Project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id  =  T2.target_u_id ORDER BY trust LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name from useracct",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT target_u_id from trust",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.date_incident_start ,  T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   \"Rohan\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   \"Bergnaum\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id where T2.last_name  =  \"Hansen\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT Team FROM player ORDER BY Age DESC LIMIT 5",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Team FROM player ORDER BY Age LIMIT 1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Team FROM player WHERE Player  =  \"Timothy Beckham\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Age, Position FROM player WHERE Player  =  \"Timothy Beckham\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Position FROM player WHERE Player  =  \"Eric Hosmer\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.description, T1.rating,T1.special_features FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id GROUP BY T1.film_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT sum(T2.Killed) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Height  >  1.84",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT sum ( T2.Killed )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  1.84",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT count ( T2.Perpetrator_ID )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Height  >  1.84",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT date FROM perpetrator order by date asc limit 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Injured FROM perpetrator order by date desc limit 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT country FROM perpetrator group by country order by sum ( Killed ) +sum ( Injured )  desc limit 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id   =   T2.address_id WHERE T2.first_name   =   \"Lyla\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.city FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T2.first_name  =  \"Lyla\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT last_name  FROM teachers where first_name  =  \"Lyla\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE DEPT_NAME  =  \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE DEPT_NAME   =   \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "select course_id, prereq_id from prereq",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id from prereq GROUP BY course_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id GROUP BY T2.course_id HAVING count ( * )   >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT sum ( T3.credits )  FROM course AS T1 JOIN prereq AS T2 ON T1.course_id   =   T2.course_id join course as T3 on T3.course_id = T2.prereq_id where T1.title = \"Game Programming\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_first_name ,  customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.customer_address FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id where T2.other_account_details  =  'VIP'",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.account_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id   =   T2.customer_id where T1.customer_first_name like \"%G%\" or T1.customer_first_name like \"%A%\" or T1.customer_last_name like \"%G%\" or T1.customer_last_name like \"%A%\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Sales Person\" EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Sales Person\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id EXCEPT SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT Hardware_Model_name ,  Company_name FROM phone WHERE Accreditation_type LIKE 'Full';",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Company_name FROM phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Hardware_Model_name FROM phone",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT chip_model FROM phone WHERE Hardware_Model_name  =  \"XPERIA T, XPERIA J\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT district FROM address GROUP BY district HAVING count(*)  >=  2",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT district FROM address",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT district FROM address GROUP BY district HAVING count ( * )   > =   2",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id  =  T2.track_id GROUP BY T1.track_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "race_track"
      },
      {
         "query": "select track_id from track",
         "databaseID": "race_track"
      },
      {
         "query": "select track_id,name from track",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.track_id,T2.name,count ( * )  FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id GROUP BY T1.track_id",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT T2.track_id,T2.name,count ( * )  FROM race AS T1 JOIN track AS T2 ON T1.track_id   =   T2.track_id GROUP BY T1.track_id having count ( * )  > 1",
         "databaseID": "race_track"
      },
      {
         "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t2.station_id, count ( * )  FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT network_name   FROM station",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT services  FROM station",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_name, staff_gender FROM Staff",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT department_id, job_title_code FROM Staff_Department_Assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id Where T2.job_title_code  =  \"Sales Person\" OR T2.job_title_code  =  \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id   =   T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT email_address FROM Students WHERE first_name   =   \"Emma\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT student_id FROM Students WHERE last_name  =  \"Rohan\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT email_address FROM Students WHERE student_id  =  4",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT forename ,  surname FROM drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT nationality FROM drivers WHERE forename  =  \"Lewis\" and surname  =  \"Hamilton\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT avg(age) ,  job FROM Person WHERE gender  =  'male' GROUP BY job",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT avg ( age )  FROM Person WHERE gender   =   'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job FROM Person WHERE gender   =   'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT avg ( age )  ,  job FROM Person WHERE gender   =   'male' GROUP BY job",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  COUNT(*) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 5;",
         "databaseID": "store_1"
      },
      {
         "query": "select id,name from genres order by id desc limit 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.id,COUNT ( * )  FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT t1.id,T2.composer FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id  =  T1.id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "select composer from tracks order by milliseconds",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T2.department_name ,  T3.city ,  T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name , T1.last_name , T2.department_name  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid WHERE T1.country  =  'China' GROUP BY T1.name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "select name from airports where city = 'Goroka'",
         "databaseID": "flight_4"
      },
      {
         "query": "select country from airports where city = 'Madang'",
         "databaseID": "flight_4"
      },
      {
         "query": "select distinct rid from routes where alid = '410'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT avg(age) ,  min(age) ,  CLASS FROM captain GROUP BY CLASS",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM captain order by age desc limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "select rank from captain where name  =  \"Captain Gilbert Pears\"",
         "databaseID": "ship_1"
      },
      {
         "query": "select rank from captain where name  =  \"Captain Henry Dumaresq\"",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id NOT IN( SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01' )",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id IN (  SELECT customer_id FROM rental WHERE rental_date  < =   '2005-08-23 00:00:00'  ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT customer_id FROM customer WHERE customer_id NOT IN (  SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01'  ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name FROM customer WHERE customer_id NOT IN (  SELECT customer_id FROM rental WHERE rental_date  >  '2005-08-23 02:06:01'  ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course where dept_name  =  'Mech. Eng.'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM course where dept_name  =  'Mech. Eng.' and credits > 3",
         "databaseID": "college_2"
      },
      {
         "query": "select distinct ( dept_name )  from course where title in  ( SELECT title FROM course where dept_name  =  'Mech. Eng.' and credits > 3 )  and dept_name ! =  'Mech. Eng.'",
         "databaseID": "college_2"
      },
      {
         "query": "select count ( * )  from course where title in  ( SELECT title FROM course where dept_name  =  'Mech. Eng.' and credits > 3 )  and dept_name ! =  'Mech. Eng.'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT store_id FROM inventory GROUP BY store_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( distinct store_id )  FROM inventory",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * )  desc LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT(*)  >=  2",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT ( * )    > =    2",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Name FROM people order by weight desc limit 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Name FROM people order by weight asc limit 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT Appelation FROM WINE WHERE YEAR  >  2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area  =  \"Central Coast\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM appellations WHERE Area  =  \"Sierra Foothills\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM appellations WHERE County  =  \"Napa\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM wine WHERE Appelation  =  \"St. Helena\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT name FROM station",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT t2.id ,  t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id  =  t2.id GROUP BY t1.station_id ORDER BY avg(high_temperature) DESC LIMIT 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT  t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id   =   t2.id GROUP BY t1.station_id ORDER BY avg ( high_temperature )  DESC LIMIT 1",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT ID FROM station WHERE network_name  =  \"Chorleywood\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT local_authority FROM station WHERE network_name  =  \"Chorleywood\"",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname ,  Lname, building FROM FACULTY WHERE sex   =   \"M\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex   =   \"M\" AND Building   =   \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname ,  Lname, room FROM FACULTY WHERE sex   =   \"M\" AND Building   =   \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  FROM College WHERE enr  >  18000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  >  18000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT enr FROM College WHERE cName  =  'OU'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT enr FROM College WHERE cName  =  'LSU'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT state FROM College WHERE cName  =  'LSU'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT state FROM College WHERE cName  =  'OU'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.department_id ,  T1.name ,  count(*) FROM management AS T2 JOIN department AS T1 ON T1.department_id  =  T2.department_id GROUP BY T1.department_id HAVING count(*)  >  1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.department_id ,  T1.name ,  count ( * )  FROM management AS T2 JOIN department AS T1 ON T1.department_id   =   T2.department_id GROUP BY T1.department_id HAVING count ( * )   >  1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT  ranking, creation from department where num_employees  =   ( select max ( num_employees )  from department ) ",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT ranking, creation from department where num_employees  =   ( select min ( num_employees )  from department ) ",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT ranking, creation from department where Budget_in_Billions  =   ( select max ( Budget_in_Billions )  from department ) ",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )   < =   2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )   < =   2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.personal_name, T2.middle_name, T2.family_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id order by T1.date_of_completion desc limit 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.product_type_code  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.supplier_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name = 'red jeans'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.supplier_id,T1.total_amount_purchased FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T2.product_name = 'red jeans'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT region_name FROM region WHERE region_id NOT IN (SELECT region_id FROM affected_region)",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT region_name FROM region WHERE region_id NOT IN  ( SELECT region_id FROM affected_region ) ",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT region_name FROM region WHERE region_id IN  ( SELECT region_id FROM affected_region ) ",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id  =  T2.building_id WHERE T2.bathroom_count  >  2",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  from apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT  count ( * )  from apartments where apt_type_code  = 'Flat'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT  count ( * )  from apartments where apt_type_code  = 'Studio'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_id ORDER BY count(*) LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Customers",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT customer_id, COUNT ( * )  FROM  Complaints GROUP BY customer_id",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT product_id FROM Complaints GROUP BY product_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id WHERE T2.product_id  =  117",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT DISTINCT T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.President_VOTE WHERE T1.sex  =  \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT distinct T1.Fname ,  T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT sum ( T2.President_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT sum ( T2.Secretary_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT sum ( T2.Vice_President_VOTE )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   T2.President_VOTE WHERE T1.sex   =   \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT creation FROM department GROUP BY creation ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT creation FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT count ( * )  FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT name FROM department GROUP BY creation ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Num_Employees FROM department where name  =  \"Treasury\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT Budget_in_Billions FROM department where name  =  \"Treasury\"",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T1.project_id ,  T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count(*)  >  2",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select Project_ID from Projects",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "select Project_ID,Project_Details from Projects",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id HAVING count ( * )  > 2",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT(*)  <=  5",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT DISTINCT ( competition_type )  FROM competition",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * )    > =    5",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * )   < =   5",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_status  =  \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select order_id ,customer_id from Customer_Orders where order_status  =  'Cancelled'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select order_id from Order_Items order by order_quantity limit 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select count ( customer_id )  from Customer_Orders where order_status  =  'Delivered'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Tourist_ID FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * )  LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT  count ( * )  FROM order_items GROUP BY product_id having product_id  =  \"2\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT  count ( * )  FROM order_items GROUP BY product_id having product_id  =  \"13\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  \"Colorado\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   \"Colorado\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name, t3.address_content, t3.city, t3.zip_postcode FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   \"Colorado\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID ORDER BY T3.Rank",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT T3.Pilot_name ,  T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID   =   T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID   =   T3.Pilot_ID ORDER BY T3.Rank",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Pilot_name,Nationality  from pilot",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT distinct ( Fuel_Propulsion )  from  aircraft",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE \"%London%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE \"%Heathrow%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( International_Passengers )  FROM airport WHERE Airport_Name LIKE \"%Heathrow%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T3.Name ,  COUNT(*) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID GROUP BY T3.Name",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name ,  COUNT ( * )  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID GROUP BY T3.Name",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name , t3.age, t3.Nationality, COUNT ( * )  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID GROUP BY T3.Name",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T3.Name , t2.name  FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID   =   T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID   =   T3.journalist_ID where t3.age  =   ( select max ( age )  from journalist ) ",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age  >  40 ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend IN  ( SELECT name FROM Person WHERE age  >  40 ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1",
         "databaseID": "music_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name WHERE T2.languages   =   \"english\" GROUP BY T2.artist_name HAVING count ( * )    > =    1 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name WHERE T2.languages   =   \"english\" GROUP BY T2.artist_name HAVING count ( * )    > =    1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name WHERE T1.artist_name  =  \"Enrique\"",
         "databaseID": "music_1"
      },
      {
         "query": "select count ( * )  FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name WHERE T1.artist_name  =   ( SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name   =   T2.artist_name WHERE T2.languages   =   \"english\" and T1.artist_name ! =  \"Enrique\" GROUP BY T2.artist_name HAVING count ( * )    > =    1 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT grade FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT LastName FROM list GROUP BY classroom ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >   ( SELECT min ( order_date )  FROM Customer_Orders WHERE order_status_code   =   \"Cancelled\" ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT order_status_code FROM Customer_Orders WHERE order_id  =  3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.rank ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.rank",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor  where  T1.Rank = \"Professor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor  where  T1.Rank = \"Instructor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id   =   T2.region_id JOIN storm AS T3 ON T1.storm_id   =   T3.storm_id WHERE T2.Region_name   =   'Afghanistan'  AND T3.Dates_active  =  \"May19–May25\" INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id   =   T2.region_id JOIN storm AS T3 ON T1.storm_id   =   T3.storm_id WHERE T2.Region_name   =   'Albania' AND T3.Dates_active  =  \"May19–May25\"",
         "databaseID": "storm_record"
      },
      {
         "query": "select T1.Name from Storm as T1 join affected_region as T2 on T1.Storm_ID  =  T2.Storm_ID where T2.Number_city_affected  =  10.0 or T2.Number_city_affected  =  15.0",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM procedures order by cost desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( * )  FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.CertificationDate FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment where T3.Name = 'Complete Walletectomy'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT State FROM representative GROUP BY State HAVING COUNT(*)  >=  2",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT State FROM representative GROUP BY State HAVING COUNT ( * )    > =    2",
         "databaseID": "election_representative"
      },
      {
         "query": "select name from representative where state in  ( SELECT state FROM representative GROUP BY State HAVING COUNT ( * )    > =    2 ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT party from representative where state in  ( select state FROM representative GROUP BY State HAVING COUNT ( * )    > =    2 ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid  =  t2.paperid WHERE t1.authorder  =  (SELECT max(authorder) FROM authorship)",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT title FROM papers",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder  > 2",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid   =   t2.paperid WHERE t1.authorder   =    ( SELECT max ( authorder )  FROM authorship ) ",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT * FROM products ORDER BY product_price LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id ,  product_type_code FROM products ORDER BY product_price LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN  ( SELECT dormid FROM has_amenity ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm order by student_capacity desc limit 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm order by student_capacity asc limit 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( student_capacity )  FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dormid FROM dorm order by student_capacity asc limit 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "select count ( * )  from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'French'",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * )  LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "select count ( * )  from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'",
         "databaseID": "e_learning"
      },
      {
         "query": "select student_id from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'",
         "databaseID": "e_learning"
      },
      {
         "query": "select distinct course_name from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE student_id = '15' and course_name ! =  'Chinese Painting'",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT player_api_id FROM Player WHERE height  >=  180 AND height  <=  190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot  =  \"left\"",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Player_Attributes WHERE preferred_foot   =   \"left\"",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT player_api_id FROM Player WHERE height   > =    180 AND height  < =   190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot   =   \"left\" ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT player_api_id FROM Player WHERE height   > =    180 AND height  < =   190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot   =   \"left\"",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT player_name FROM Player AS T1 JOIN Player_Attributes\nAS T2 ON t1.player_api_id  =  T2.player_api_id WHERE T2.preferred_foot   =   \"left\" order by height desc limit 1",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "select Name from company order by Sales_in_Billion desc limit 1",
         "databaseID": "company_employee"
      },
      {
         "query": "select distinct Industry from company",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T2.Name ,  COUNT(*) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * )  desc limit 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.Year FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * )  desc limit 1",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID where T1.Character  =  \"Lou Carpenter\"",
         "databaseID": "musical"
      },
      {
         "query": "SELECT name FROM city WHERE county_ID  =  (SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1)",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT name FROM city WHERE county_ID  =   ( SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1 ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_officers FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Population FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Crime_rate FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Residents_per_officer FROM county_public_safety WHERE County_ID =  ( select County_ID from city where Name = 'Aibonito' ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT name FROM storm WHERE storm_id NOT IN (SELECT storm_id FROM affected_region)",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT AVG ( Max_speed )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT MAX ( Max_speed )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT SUM ( Number_Deaths )  FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT count(*) ,  T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.src_apid GROUP BY T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.src_apid,T2.src_ap,T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT  T1.name, count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.src_apid GROUP BY T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > \"1986-11-13\" GROUP BY T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T2.product_details FROM problems AS T1 JOIN product AS T2 ON T1.product_id  =  T2.product_id",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.Name ,  T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID  =  T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID  =  T3.journalist_ID ORDER BY T2.Event_Attendance ASC",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Nationality FROM journalist WHERE Name  =  \"Jackie Waring\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT * FROM journalist WHERE Name ! =  \"Jackie Waring\" AND Nationality  =  \"England\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT AGE FROM journalist WHERE Name  =  \"Herbert Swindells\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT customer_name FROM customers WHERE payment_method  =  (SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name, payment_method FROM Customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_Type_Code FROM policies where Customer_ID  =  380",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_Type_Code,Start_Date FROM policies where Customer_ID  =  380",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Policy_Type_Code,Start_Date,End_Date FROM policies where Customer_ID  =  380",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT city FROM branch WHERE open_year  =  2001 AND membership_amount  >  100",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( distinct city )  frOM branch WHERE  membership_amount  >  100",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Branch_ID FROM branch WHERE open_year   =   2000",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Open_year FROM branch WHERE name   =   \"Stanley\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Address_road FROM branch WHERE name   =   \"Stanley\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT date_complaint_raised from complaints order by date_complaint_raised desc limit 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT date_complaint_closed from complaints where date_complaint_raised  = '2007-10-14 21:50:43'",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT customer_id from complaints where date_complaint_raised  = '2007-10-14 21:50:43'",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT phone_number FROM customers  where customer_id  = 118",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count ( * )  FROM Restaurant",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count ( * )  FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT ResName FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID  =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID  =  Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName  =  'Sandwich'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Address FROM Restaurant where ResName = 'Subway'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Rating FROM Restaurant where ResName = 'Subway'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T1.course_name ,  COUNT(*) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT course_name FROM Courses",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.course_name , COUNT ( * )  FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id GROUP BY T1.course_name",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.LastName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T2.roomId  =  \"IBS\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT bedtype FROM rooms WHERE roomid  =  \"HBB\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.checkin, T1.checkout FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T2.roomid  =  \"RND\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Name  from company  where \nCompany_ID = 1.0",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID ORDER BY T1.Year_working",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Company_ID from company  where Headquarters = \"USA\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT avg ( Rate )  FROM Reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT CheckOut FROM Reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT CheckIn FROM Reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( Adults )  FROM Reservations WHERE CheckIn   =   \"2010-10-23\" AND FirstName   =   \"CONRAD\" AND LastName   =   \"SELBIG\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT name FROM stadium WHERE name LIKE \"%Bank%\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT COUNT ( * )  FROM stadium",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT name FROM stadium",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Average_Attendance FROM stadium WHERE name  =  \"Cowboys Stadium\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT Capacity_Percentage FROM stadium WHERE name  =  \"FedExField\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id WHERE order_status  =  \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name ,  t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_status   =   \"Delivered\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT distinct customer_id from Customer_Orders where order_status = 'Cancelled'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT distinct t1.customer_name  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id WHERE order_details  =  'NULL'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT name ,  trade_name FROM medicine EXCEPT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id JOIN enzyme AS T3 ON T3.id  =  T2.enzyme_id WHERE T3.product  =  'Protoporphyrinogen IX'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT name ,  trade_name FROM medicine",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Total  >  300",
         "databaseID": "body_builder"
      },
      {
         "query": "select count ( * )  from body_builder",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID WHERE T1.Total  >  250",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name, count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id HAVING count ( * )    > =    2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.artist_name ,  T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.song_name LIKE \"%love%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from artist",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name from song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name from song where song_name  =  \"My love\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT country from song where artist_name  =  \"Enrique\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT name ,  price FROM products WHERE price  >=  180 ORDER BY price DESC ,  name ASC",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name FROM products WHERE price   > =    180 order by  name ASC",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name, price FROM products WHERE price   > =    180 order by price asc",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name, price, manufacturer FROM products WHERE price   > =    180 order by price asc",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Railway FROM railway GROUP BY Builder having Builder = \"GWR Swindon\" ORDER BY built DESC limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Built  FROM railway  GROUP BY  Builder having Builder = \"GWR Swindon\"\norder  by Built desc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT sum(revenue) FROM manufacturers WHERE revenue  >  (SELECT min(revenue) FROM manufacturers WHERE headquarter  =  'Austin')",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Name FROM manufacturers order by revenue desc limit 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Headquarter FROM manufacturers where name = 'Iomega'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Name FROM manufacturers where Headquarter = 'Austin'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Revenue FROM manufacturers where Name = 'Creative Labs'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( * )  FROM manufacturers where revenue>100.0",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT sum ( revenue )  FROM manufacturers where revenue>100.0",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.part_name ,  count(*) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id  =  T2.part_id GROUP BY T1.part_name",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.part_id FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT chargeable_amount FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id   =   T2.part_id GROUP BY T1.part_name",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count ( DISTINCT T1.county )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count ( * )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county  =  \"Orange\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus ,  sum ( T2.degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county   =   \"Orange\" AND T2.year   > =    2000 GROUP BY T1.campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code  =  T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT DISTINCT outcome_code FROM  Project_Outcomes",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT outcome_description FROM research_outcomes",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM projects",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT outcome_details FROM project_outcomes",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code   =   T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count(*) FROM department AS T1 JOIN course AS T2 ON T1.dept_code  =  T2.dept_code WHERE dept_name  =  \"Computer Info. Systems\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   \"Computer Info. Systems\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT crs_description FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   \"Computer Info. Systems\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   \"Biology\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t2.crs_credit FROM department AS T1 JOIN course AS T2 ON T1.dept_code   =   T2.dept_code WHERE dept_name   =   \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( Name )  from event",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( distinct Capacity )  from stadium",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid WHERE T2.country   =   'Italy'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT t1.src_ap FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid   =   T2.apid JOIN airlines AS T3 ON T1.alid   =   T3.alid WHERE T2.country   =   'Italy' AND T3.name   =   'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT pcp FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )    =   1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT t1.start,t1.end FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )    =   1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T3.student_details, T1.city, T1.line_1 FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id  =  T2.address_id JOIN students AS T3 ON T2.person_id  =  T3.student_id ORDER BY  date_from DESC LIMIT 3",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id  =  T2.dept_store_id WHERE T1.department_name  =  \"managing\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"marketing\" INTERSECT SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"managing\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"marketing\" INTERSECT SELECT  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"managing\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"marketing\" INTERSECT SELECT T2.dept_store_id ,  T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id   =   T2.dept_store_id WHERE T1.department_name   =   \"managing\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name  =  'San Jose Diridon Caltrain Station'",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT distinct T1.long FROM station AS T1 JOIN trip AS T2 where T1.name  =  'Santa Clara at Almaden'",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name  =  'San Jose Civic Center'",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( DISTINCT RID )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT RID FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( stars )  FROM Rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( DISTINCT RID )  FROM Rating WHERE stars < 4",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT RID FROM Rating WHERE stars < 4",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_type_code  =  'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price FROM products WHERE product_type_code   =   'Hardware' ORDER BY product_price DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM products WHERE product_name  =  \"red jeans\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT distinct ( product_type_code )  FROM products WHERE product_name  =  \"red jeans\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT min ( Vote_Percent )   FROM election",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT max ( Vote_Percent )   FROM election",
         "databaseID": "election_representative"
      },
      {
         "query": "select election_id from election where votes  =   ( SELECT max ( votes )  FROM election ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "select election_id from election where votes  =   ( SELECT min ( votes )  FROM election ) ",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "select count ( * )  from people",
         "databaseID": "gymnast"
      },
      {
         "query": "select count ( * )  from people where Age < 21",
         "databaseID": "gymnast"
      },
      {
         "query": "select Name from people where People_ID  =  2",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   \"900\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name ,  T2.customer_last_name, T2.email_address, T2.phone_number FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.account_name   =   \"900\"",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT DISTINCT T2.customer_first_name ,  T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.other_account_details   =    ( SELECT other_account_details FROM Accounts WHERE account_name  =  900 ) ",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.account_id ,  T1.date_account_opened ,  T1.account_name ,  T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  'Meaghan'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select count ( distinct account_id )  from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'John'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select count ( distinct account_id )  from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan' or customer_first_name = 'Jessica'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select account_id from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Meaghan'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Jessica'",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  \"Dining\" OR Product_Name  =  \"Trading Policy\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  'Dinning'",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Name  =  'Trading Policy'",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT distinct Product_Type_Code FROM Products WHERE Product_Name  =  'Dinning'",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT state FROM park GROUP BY state HAVING count(*)  >  2;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT park_name FROM park where country = 'US'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT state FROM park GROUP BY state HAVING count ( * )   >  2",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count(*) FROM Person WHERE age  >  30 AND job  =  'engineer'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE job  =  \"student\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE job ! =  \"student\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person WHERE job ! =  \"student\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person WHERE job ! =  \"student\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE age  >  30 AND job   =   'engineer'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( bathroom_count )  FROM Apartments WHERE building_id  =  808",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( room_count )  FROM Apartments WHERE building_id  =  808",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T2.Nationality  =  \"United States\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT count ( * )  FROM mission",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT  T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T2.Nationality   =   \"United States\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT  T1.Fate, T1.mission_id FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T2.Nationality   =   \"United States\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pID,HS FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID GROUP BY T1.pPos order by min ( T2.HS )  limit 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT min ( T2.HS )  ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID where ppos  =  'mid' GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "select Institution from Institution order by Founded limit 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( distinct nationality )  FROM drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT nationality FROM drivers group by nationality order by count ( * )  desc limit 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid where T1.nationality  =  \"British\" ORDER BY fastestLapSpeed DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT International_Passengers FROM airport ORDER BY International_Passengers DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT company ,  main_industry FROM company WHERE company_id NOT IN (SELECT company_id FROM station_company)",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company  FROM company WHERE company_id = '1'",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company ,  main_industry FROM company WHERE company_id IN  ( SELECT company_id FROM station_company ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company ,  main_industry FROM company WHERE company_id not IN  ( SELECT company_id FROM station_company ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Name FROM company WHERE Industry  =  \"Banking\" OR Industry  =  \"Retailing\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Name FROM company WHERE Industry   =   \"Banking\" OR Industry   =   \"Retailing\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT sum ( sales_in_billion )  FROM company WHERE Industry   =   \"Banking\" OR Industry   =   \"Retailing\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT sum ( Market_Value_in_Billion )  FROM company WHERE Industry   =   \"Banking\" OR Industry   =   \"Retailing\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT avg(HS) ,  max(HS) ,  min(HS) FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * ) FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT  max ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT  min ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( HS )  FROM Player",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count(*) FROM Customers WHERE customer_id NOT IN (SELECT customer_id FROM Accounts)",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Accounts ) ",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_first_name FROM Customers WHERE customer_id NOT IN  ( SELECT customer_id FROM Accounts ) ",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_address FROM Customers WHERE customer_first_name  =  \"Armani\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.building_id FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   \"Gym\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( T2.bathroom_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   \"Gym\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( T2.bedroom_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   \"Gym\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT sum ( T2.room_count )  FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.facility_code   =   \"Gym\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" AND gender  =  \"Male\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT * FROM artist WHERE gender   =   \"Male\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country   =   \"UK\" AND gender   =   \"Male\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT preferred_genre FROM artist WHERE artist_name  =  \"Michel\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM artist WHERE preferred_genre   =   \"pop\" AND gender   =   \"Male\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM artist WHERE preferred_genre   =   \"pop\" AND gender   =   \"Female\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT preferred_genre FROM artist Group By preferred_genre order by count ( * )  desc limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT lname FROM authors",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title  =  \"Binders Unbound\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT investor_id ,  COUNT(*) FROM TRANSACTIONS WHERE transaction_type_code  =  \"SALE\" GROUP BY investor_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code from transactions where investor_id  =  18",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT amount_of_transaction from transactions where transaction_id  =  3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT name FROM Person WHERE gender  =  'male' AND age  =  (SELECT min(age) FROM person WHERE gender  =  'male' )",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job  FROM Person WHERE gender   =   'male' AND age   =    ( SELECT min ( age )  FROM person WHERE gender   =   'male'  ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT LOCATION ,  sum(number_of_platforms) ,  sum(total_passengers) FROM station GROUP BY LOCATION",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT number_of_platforms FROM station where Main_services  =  \"South Western Main Line West of England Main Line\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Total_Passengers FROM station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Annual_interchanges FROM station where name  =  \"London Bridge\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T2.name  =  'A Puzzling Parallax'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN WHERE T2.name   =   'A Puzzling Parallax'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.name,T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project   =   T2.code JOIN scientists AS T3 ON T1.scientist   =   T3.SSN",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT COUNT ( DISTINCT EMPLOYEE_ID )  FROM employees WHERE COMMISSION_PCT > 0",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT department_id FROM employees GROUP BY department_id HAVING COUNT ( commission_pct )  > 10 ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT * FROM item WHERE i_id  =  4",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT rating FROM review WHERE i_id  =   ( select i_id from item where title  =  \"avocado\" ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT rank FROM review WHERE i_id  =   ( select i_id from item where title  =  \"avocado\" ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Alison\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Alison\" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Rosalind\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT max(T2.fastestlapspeed) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = \"Monaco Grand Prix\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( DISTINCT year )  FROM races",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT max ( T2.fastestlapspeed )  FROM races AS T1 JOIN results AS T2 ON T1.raceid  =  T2.raceid WHERE T1.year  =  2008 AND T1.name  =  \"Monaco Grand Prix\"",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count(*) ,  cName FROM tryout GROUP BY cName ORDER BY count(*) DESC",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )   FROM tryout",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  ,  cName FROM tryout GROUP BY cName",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  ,  cName FROM tryout GROUP BY cName ORDER BY count ( * )  DESC",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT Name FROM member WHERE Member_ID NOT IN (SELECT Member_ID FROM member_attendance)",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT count ( distinct Performance_ID )  from member_attendance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT  T2.Performance_ID,T1.Role from member as T1 join member_attendance as  T2 on T1.Member_ID  = T2.Member_ID group  by T2.Performance_ID",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT  name ,Nationality from member",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Name from  Track where TrackId = '2'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT UnitPrice from  Track where name = 'Fast As a Shark'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Milliseconds from  Track  where TrackId = 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )   from  Genre",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T3.grant_amount  FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id   =   T2.grant_id WHERE T2.grant_amount  >  100",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301 ORDER BY date_of_attendance LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT student_id FROM student_course_attendance WHERE course_id  =  301 ORDER BY date_of_attendance DESC LIMIT 1",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance FROM checking WHERE custid  =  2",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT name FROM accounts WHERE custid  =  2",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance FROM savings WHERE custid  =  2",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid WHERE T1.name   =   'Brown'",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >  ( SELECT max(salary) FROM employees WHERE job_id  =  'PU_MAN' )",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE job_id   =   'PU_MAN'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT salary FROM employees WHERE job_id   =   'PU_MAN'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE salary  >   (  SELECT salary FROM employees WHERE job_id   =   'PU_MAN'  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  first_name ,  last_name ,  job_id FROM employees WHERE salary  >   (  SELECT max ( salary )  FROM employees WHERE job_id   =   'PU_MAN'  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Employees",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT COUNT ( employee_id )  FROM circulation_history WHERE document_id  =  1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.employee_name FROM employees as T1 JOIN circulation_history AS T2 ON T1.employee_id  =  T2.employee_id WHERE T2.document_id  =  1",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT journalist_ID FROM journalist\nwhere journalist_ID not in  ( SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1 ) \nORDER BY Years_working DESC LIMIT 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Name FROM journalist where journalist_ID = 4",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT nationality FROM journalist where journalist_ID = 4",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( journalist_ID )  FROM journalist where Nationality = 'England'",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT journalist_ID FROM journalist where Nationality = 'England' order by \nYears_working limit 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT journalist_ID FROM journalist order by \nYears_working limit 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Employee EXCEPT SELECT eid FROM Certificate",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Employee EXCEPT SELECT aid FROM Certificate",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT ID FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT id, name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name, dept_name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id  =  T2.building_id WHERE T2.founded  =  2003",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Team FROM institution WHERE Institution   =   'Ave Maria University'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Floors FROM building WHERE Name   =   'Tampa City Hall'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Street_address FROM building WHERE Name   =   'Tampa City Hall'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Type FROM institution WHERE Institution   =   'Ave Maria University'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT Location FROM institution WHERE Institution   =   'Dakota State University'",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'",
         "databaseID": "college_2"
      },
      {
         "query": "select dept_name from  student where name = \"Rumat\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city FROM addresses WHERE zip_postcode LIKE \"4%\" and state_province_county  =  \"Colorado\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city FROM addresses WHERE zip_postcode LIKE \"4%\" and state_province_county  =  \"Texas\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( distinct city )  FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company ORDER BY Sales_in_Billion DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT headquarters FROM company where name  =  \"Royal Dutch Shell\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Industry FROM company where name  =  \"Royal Dutch Shell\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Human Resource\" OR T2.role_name  =  \"Manager\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   \"Human Resource\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   \"Human Resource\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE  T2.role_name   =   \"Manager\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE  T2.role_name   =   \"Human Resource\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.dept_name ,  T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name  FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )   FROM student AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT dept_address from department where dept_name  =  \"Accounting\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.stu_fname, T2.stu_lname from department as T1 join student as T2 on T1.dept_code  =  T2.dept_code where T1.dept_name  =  \"Accounting\" and T2.stu_GPA > 3.0",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT sum ( stu_transfer )  from student",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT max(market_share) ,  min(market_share) ,  avg(market_share) FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share FROM browser where name  =  \"Internet Explorer\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share FROM browser where name  =  \"Firefox\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share FROM browser where name  =  \"Safari\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT count(*) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year  <  1850 );",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT nationality FROM architect WHERE name  =  'Zaha Hadid'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT gender FROM architect WHERE name  =  'Frank Gehry'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT built_year FROM mill WHERE architect_id  =  2",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT location FROM mill WHERE id  =  3",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type  =  T2.organisation_type WHERE T2.organisation_type_description  =  'Sponsor' ORDER BY organisation_details",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id  FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( organisation_id )   FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type   =   T2.organisation_type WHERE T2.organisation_type_description   =   'Sponsor' ORDER BY organisation_details",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.student_id ,  T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( * )  FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count(*) FROM university WHERE LOCATION LIKE \"%NY%\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Location FROM University",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT School FROM University",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count ( * )  FROM University WHERE Location LIKE \"%NY%\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id from products order by product_price desc limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name from products order by product_price desc limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name from products order by product_price limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT customer_first_name ,  customer_last_name FROM Customers",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT customer_id FROM Customers",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT distinct other_account_details FROM Accounts",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM architect",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT * FROM architect where nationality = 'American'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count(*)  =  1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM PersonFriend GROUP BY name HAVING count ( * )    =   1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM PersonFriend where friend = 'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM PersonFriend where friend = 'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend FROM PersonFriend where name = 'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend FROM PersonFriend where name = 'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( distinct name )  FROM PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( distinct friend )  FROM PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   \"South\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   \"West\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.store_address FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   \"East\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.store_phone FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   \"West\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.store_email FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id   =   T2.dept_store_chain_id WHERE T2.dept_store_chain_name   =   \"West\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition WHERE competition_type   =   'Tournament' GROUP BY country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition WHERE competition_type   =   'Tournament' GROUP BY country ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Competition_type FROM competition WHERE country  =  \"Russia\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.apt_number  =  \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "select * from apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT * FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.apt_number   =   \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.apt_number   =   \"Suite 634\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT title ,  director FROM movie WHERE YEAR  <=  2000 ORDER BY gross_worldwide DESC LIMIT 1",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT title ,  director FROM movie WHERE YEAR  < =   2000 ORDER BY gross_worldwide DESC LIMIT 1",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  \"aut\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  \"rem\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  \"aut\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id where T1.problem_id =  1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_id FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id where T1.problem_id =  1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id  =  T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT location FROM school where School_name  =  \"Bremen\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT enrollment FROM school where School_id  =  \"2\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT Invested FROM school AS T1 JOIN budget AS T2 ON T1.school_id   =   T2.school_id WHERE t1.mascot  =  \"Falcons\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T1.School_name ,  T1.Mascot ,  T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id   =   T2.school_id WHERE Budgeted  >  6000 OR YEAR  <  2003 ORDER BY T2.total_budget_percent_invested ,  T2.total_budget_percent_budgeted",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')",
         "databaseID": "network_2"
      },
      {
         "query": "select avg ( age )  from person",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from person where gender  =  \"female\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE age  >   ( SELECT max ( age )  FROM person WHERE job   =   'engineer' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT country FROM airlines WHERE name LIKE 'Orbit%'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT * FROM airlines WHERE name LIKE 'Private%'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT DISTINCT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' OR T2.friend  =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT DISTINCT T1.name, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    > =  1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    > =    1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )   <  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT Name FROM journalist WHERE Nationality  =  \"England\" OR Nationality  =  \"Wales\"",
         "databaseID": "news_report"
      },
      {
         "query": "select count ( * )  from journalist",
         "databaseID": "news_report"
      },
      {
         "query": "select Name from journalist where journalist_ID  = 2",
         "databaseID": "news_report"
      },
      {
         "query": "select Nationality from journalist where journalist_ID  = 1",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code not  LIKE '%en%'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT master_customer_id  FROM cmi_cross_references WHERE source_system_code = 'Electoral'",
         "databaseID": "local_govt_mdm"
      },
      {
         "query": "SELECT name ,  flag FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain WHERE rank  =  'Midshipman')",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name, flag FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT flag FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Name, flag FROM ship WHERE ship_id NOT IN  ( SELECT ship_id FROM captain WHERE rank   =   'Midshipman' ) ",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT(*)  >  2",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Nationality,count ( * )  FROM ship  WHERE Nationality = 'United Kingdom' GROUP BY Nationality",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Nationality FROM ship WHERE Nationality ! =  'United Kingdom' GROUP BY Nationality HAVING COUNT ( * )  > 2",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT distinct Type FROM ship where Nationality = 'United States'",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT distinct Type FROM ship where Nationality = 'United Kingdom'",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name, avg ( salary )  FROM instructor GROUP BY dept_name",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  ASC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT  avg ( Price )  from wine",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * from wine where price  =   ( select max ( price )  from wine ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT avg ( price )  FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT color from grapes where grape  =  \"Roussanne\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT phone FROM employees WHERE first_name  =  \"Nancy\" AND last_name  =  \"Andrews\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT phone FROM employees WHERE first_name  =  \"Nancy\" AND last_name  =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT fax FROM employees WHERE first_name  =  \"Nancy\" AND last_name  =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT title FROM employees WHERE first_name  =  \"Nancy\" AND last_name  =  \"Edwards\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from employees where title  =  \"Sales Manager\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.statement_id FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  >=  2",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name ,  Tourist_Attraction_ID FROM Tourist_Attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name ,  T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    > =    2",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name ,  count ( * )  FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    > =    2",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT name ,  furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT name, num_of_component FROM furniture ORDER BY num_of_component",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T1.balance + T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance FROM checking",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT balance FROM savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T1.balance + T2.balance",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT count ( * )  FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T1.blockcode  =  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.roomnumber FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T1.blockcode  =  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor   =   T2.blockfloor AND T1.blockcode   =   T2.blockcode where T2.roomnumber  =  201",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT roomtype from room where roomnumber  =  101",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM actor GROUP BY first_name ,  last_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t2.policy_id FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id   =   t2.customer_id where t1.customer_name  =  \"America Jaskolski\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum(T1.budgeted)  >  100 OR sum(T3.amount)  >  10",
         "databaseID": "school_finance"
      },
      {
         "query": "select School_name from School",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN endowment AS T3 ON T2.school_id  =  T3.school_id GROUP BY T2.school_name HAVING sum ( T1.budgeted )  > 100 OR sum ( T3.amount )  > 10",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "select count ( organization_id )  from Organizations",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "select organization_id from Organizations where organization_id  in  ( SELECT parent_organization_id FROM organizations ) ",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count ( organization_id )  FROM organizations where organization_id not in  ( SELECT parent_organization_id FROM organizations ) ",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "select location_code from Document_Locations order by Date_in_Location_From desc limit 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT max(Price) ,  max(Score) ,  YEAR FROM WINE GROUP BY YEAR",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT max ( Price )  ,  max ( Score )  ,  YEAR FROM WINE GROUP BY YEAR",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT  No  FROM WINE    order  BY  Score  desc   limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT city ,  count(*) FROM airports GROUP BY city HAVING count(*)  >  1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count ( * )   >  1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city ,  count ( * )  FROM airports GROUP BY city HAVING count ( * )   >  1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count ( * )    =   3",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count ( * )    > =   4",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city, count ( * )  FROM airports GROUP BY city HAVING count ( * )    > =   4",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid  FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid, t1.dob FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT Major ,  count(*) FROM Student GROUP BY Major HAVING count(Major) BETWEEN 2 AND 30;",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  count ( * )  FROM Student GROUP BY Major HAVING count ( Major )  BETWEEN 2 AND 30",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major ,  count ( * )  FROM Student GROUP BY Major HAVING count ( Major )  BETWEEN 2 AND 20",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT custid FROM savings order by balance asc limit 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT count ( * )  from savings where balance  > =   30000",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select count ( staff_id )  from staff",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select count ( customer_id )  from Customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * )  ASC LIMIT 3",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name ,  T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  <  2",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles where uid  = 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles where name  =  'Mary'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.partitionid, T1.name FROM user_profiles AS T1 join tweets AS T2 where T1.uid  =  T2.uid  group by T2.uid having count ( * ) <2",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( * )  FROM Reservations WHERE FirstName  =  \"ROY\" AND LastName   =   \"SWEAZY\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( DISTINCT room )  FROM Reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( adults ) , count ( kids )  FROM Reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT checkin, checkout FROM Reservations WHERE code  =  10105",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count(*) FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid WHERE country  =  'Canada'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE country   =   'Canada'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE country   =   'United States'",
         "databaseID": "flight_4"
      },
      {
         "query": "select count ( * )  from  ( SELECT rid FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid WHERE T1.country   =   'United States' intersect SELECT rid FROM airports AS T3 JOIN routes AS T4 ON T3.apid   =   T4.src_apid WHERE T3.country   =   'Canada' ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "select t1.name from airports as t1 join routes as t2 on t1.apid  =  t2.src_apid where t1.name like 'A%'",
         "databaseID": "flight_4"
      },
      {
         "query": "select distinct ( t1.name )  from airports as t1 join routes as t2 on t1.apid  =  t2.src_apid where t1.name like 'A%' and t1.country  =  \"Canada\"",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT campus FROM campuses WHERE YEAR  >=  1935 AND YEAR  <=  1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count ( campus )  FROM campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT county from campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus from campuses WHERE YEAR   > =    1935 AND YEAR  < =   1939",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.Location FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.Main_Services FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.Station_ID FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T2.Annual_interchanges FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Name FROM station where Station_ID  =  3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "select name from technician",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  2",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  2 order by quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID and t1.machine_id  =  1 order by quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id   =   T2.machine_id JOIN technician AS T3 ON T1.technician_ID   =   T3.technician_ID ORDER BY T2.quality_rank",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating  >  ( SELECT avg(overall_rating) FROM Player_Attributes )",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  >   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  <   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT count ( DISTINCT T1.id )  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  <   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT avg ( T1.height )  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  <   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT avg ( T1.height )  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating  >   (  SELECT avg ( overall_rating )  FROM Player_Attributes  ) ",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T2.role_name  =  \"Editor\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T2.role_name   =   \"Editor\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT role_code,role_name FROM ROLES",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Employee_ID,Role_Code FROM Employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Role_Code,Role_Description FROM Roles",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Mountain Climbing'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Mountain Climbing' INTERSECT SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN activity AS T3 ON T2.actid   =   T2.actid WHERE T3.activity_name   =   'Kayaking'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.Festival_ID ,  T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT(*)  >=  2",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT ( * )    > =    2",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T3.festival_id, T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID   =   T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT ( * )    > =    2",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T2.name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID   =   T2.Artwork_ID  where T1.result  =  \"Won\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT t1.name ,  t1.sex ,  min(oppose_rate) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id GROUP BY t1.sex",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  from people where sex  =  \"F\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )  from people where sex  =  \"M\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT min ( oppose_rate )  FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  \"M\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  \"M\" and oppose_rate  =  0.32",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT min ( oppose_rate )  FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  \"F\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id   =   t2.people_id where t1.sex  =  \"F\" order by oppose_rate asc limit 1",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT * FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id GROUP BY t2.product_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT sum ( product_price )  FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id Where t1.product_name  =  'dvds'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT sum ( product_price )  FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id   =   t2.product_id Where t1.product_name  =  'electronics'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_first_name, customer_last_name from customers where customer_id  =  1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code from Customers_Cards where customer_id  =  6",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_address from Customers where customer_id  =  2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot  =  \"left\" AND T2.overall_rating  >=  85 AND T2.overall_rating  <=  90",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.overall_rating   > =    85 AND T2.overall_rating  < =   90",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.preferred_foot   =   \"left\" AND T2.overall_rating   > =    85 AND T2.overall_rating  < =   90",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id WHERE T2.preferred_foot   =   \"right\"",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId   =   T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )    > =    10",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.FirstName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )   > =   10",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT Company from Customer where FirstName = \"Diego\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID WHERE T2.Year  =  1995",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT * FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID   =   T2.Film_ID WHERE T2.Year   =   1995",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT director  FROM film where title  =  'ET the Extra-Terrestrial'",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT low_estimate, high_estimate FROM film_market_estimation where Year  =  1995",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select count ( * )  from orders group by customer_id order by count ( * )  desc  limit 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select customer_id from orders group by customer_id order by count ( * )  desc  limit 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select T1.customer_last_name, T1.customer_id, T1.phone_number from Customers as T1 join orders as T2 on T1.customer_id  =  T2.customer_id group by T2.customer_id order by count ( * )  desc  limit 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE  T1.year   =  1871",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game WHERE team_id  =  \"BS1\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT rank FROM team WHERE team_id  =  \"BS1\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name ,  T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY potential DESC LIMIT 5",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT distinct T1.player_name  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT distinct T1.birthday  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT distinct T1.weight  FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY potential DESC LIMIT 5",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "select location, count ( * )  from station group by Location order by count ( * )  desc limit 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT sum ( Total_Passengers )  from station where Location  = 'London'",
         "databaseID": "train_station"
      },
      {
         "query": "select sum ( Number_of_Platforms )  from station where Location  = 'London'",
         "databaseID": "train_station"
      },
      {
         "query": "select Name from station where Location  =  'London'",
         "databaseID": "train_station"
      },
      {
         "query": "select Main_Services from station where Location  =  'London'",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_id = '1'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_category_code = 'Spices'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_category_code   =   \"Spices\" AND typical_buying_price  >  1000",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles where name  =  \"Celine Dion\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles where name  =  \"Tyler Swift\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email FROM user_profiles where name  =  \"Tyler Swift\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT count ( * )  from  Institution",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT count ( * )  from building",
         "databaseID": "protein_institute"
      },
      {
         "query": "select count ( distinct team )  from institution",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100 OR amount_of_transaction  >  1000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_id FROM TRANSACTIONS WHERE share_count  >  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE amount_of_transaction  >  1000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id NOT IN (SELECT u_id FROM review)",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id NOT IN  ( SELECT u_id FROM review ) ",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT count ( * )  FROM review",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT count ( * )  FROM review WHERE rating  > =   5",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.major  =  \"600\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.major FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT * FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.sex = \"F\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Weight FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Weight FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT t1.manufacturer_id ,  t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id  =  t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT t1.Name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id   =   t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT Manufacturer_ID FROM manufacturer where name  =  'Tomorrow'",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT Num_of_Shops FROM manufacturer where name  =  'Tomorrow'",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT languages FROM song GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( resolution ) , max ( resolution )  FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( rating ) , max ( rating )  FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT languages FROM song WHERE resolution  <  500 GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT languages FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT count ( * )  FROM Customers GROUP BY payment_method having payment_method  =  \"Visa\"",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_email FROM Customers where  payment_method  =  \"Visa\"",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_phone FROM Customers where  payment_method  =  \"Visa\"",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_name from customers where payment_method  =  \"Visa\" order by date_became_customer limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT date_became_customer from customers where payment_method  =  \"Visa\" order by date_became_customer limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT location_code FROM Document_locations GROUP BY location_code HAVING count(*)  >=  3",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT distinct location_code FROM Document_locations",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT distinct document_id FROM Document_locations",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Date_in_Location_From FROM Document_locations WHERE Document_ID = '81'",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T1.title ,  T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id   =   T2.film_id JOIN rental AS T3 ON T2.inventory_id   =   T3.inventory_id GROUP BY T2.inventory_id",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id JOIN rental AS T3 ON T2.inventory_id  =  T3.inventory_id GROUP BY T2.inventory_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT special_features FROM film  WHERE title  =  \"ACADEMY DINOSAUR\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id HAVING COUNT(*)  >  1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.building_id HAVING COUNT ( * )   >  1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T2.name  =  \"Torre KOI\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  \"JPMorgan Chase\" and T2.name ! =  \"Torre KOI\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  \"HSBC\" and T2.name  =  \"Torre Mitikah\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name from companies where id  =  4",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  \"ExxonMobil\" and T2.name  =  \"Punto Chapultepec\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T3.name  =  \"General Electric\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id where T2.name  =  \"Corporativo BBVA Bancomer\" and T3.name ! =  \"General Electric\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.customer_name ,  T3.city ,  T1.date_from ,  T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_id FROM Customer_Address_History",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id JOIN addresses AS T3 ON T1.address_id  =  T3.address_id",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T2.customer_name From customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id JOIN addresses AS T3 ON T1.address_id   =   T3.address_id GROUP BY T2.customer_name having count ( * )  > 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000 OR YEAR  >  2010",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  <  2000",
         "databaseID": "wine_1"
      },
      {
         "query": "select year from wine group by year order by count ( * )  desc limit 1",
         "databaseID": "wine_1"
      },
      {
         "query": "select winery from wine where year  =  2007",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT Name FROM WINE WHERE YEAR  >  2010",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"0\" GROUP BY classroom",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct classroom )  FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct Grade )  FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct \nLastName )  FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct \nFirstName )  FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT Grade FROM list where LastName = 'CAR'",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid  =  T2.gameid JOIN Student AS T3 ON T3.Stuid  =  T1.Stuid WHERE T3.Lname  =  \"Smith\" AND T3.Fname  =  \"Linda\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid JOIN Student AS T3 ON T3.Stuid   =   T1.Stuid WHERE T3.Lname   =   \"Smith\" AND T3.Fname   =   \"Linda\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM video_games WHERE Gname  =  \"RNG Stone\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT city_code FROM student WHERE Lname  =  \"Jones\" AND Fname  =  \"Shiela\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.hours_played FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid WHERE Gname  =  \"The Vanishing of Eric Calder\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T3.Fname, T3.lname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid   =   T2.gameid JOIN Student AS T3 ON T3.Stuid   =   T1.Stuid WHERE T2.Gname  = \"The Vanishing of Eric Calder\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sum ( hours_played )  FROM Plays_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.name  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.How_to_Get_There  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Opening_Hours  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Other_Details  FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID WHERE T1.Name  =  \"game1\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Nationality FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM employment ) ",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Graduation_college FROM people WHERE name  =  \"Reggie Lewis\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT distinct count ( * )  from detention",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select count ( * )  from  ( SELECT last_name  FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName  from Tryout  where  decision = \"yes\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id  =  T2.country_id GROUP BY T2.country_id HAVING count(*)  >=  3",
         "databaseID": "sakila_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )   >  1 ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )    > =    3 ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id   =   T2.country_id GROUP BY T2.country_id HAVING count ( * )    > =    3",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT distinct pilot FROM flight",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT pilot FROM flight GROUP BY pilot ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT DISTINCT POSITION FROM match_season WHERE College  =  \"UCLA\" OR College  =  \"Duke\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT DISTINCT college FROM match_season",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT college, count ( * )  FROM match_season group by college",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT DISTINCT draft_class FROM match_season WHERE College   =   \"UCLA\" OR College   =   \"Duke\"",
         "databaseID": "match_season"
      },
      {
         "query": "Select draft_pick_number from match_season where draft_class in  ( \nSELECT DISTINCT draft_class FROM match_season WHERE College   =   \"UCLA\" OR College   =   \"Duke\" ) ",
         "databaseID": "match_season"
      },
      {
         "query": "Select player, draft_pick_number from match_season where draft_class in  ( \nSELECT DISTINCT draft_class FROM match_season WHERE College   =   \"UCLA\" OR College   =   \"Duke\" ) ",
         "databaseID": "match_season"
      },
      {
         "query": "Select position, player, draft_pick_number from match_season where draft_class in  ( \nSELECT DISTINCT draft_class FROM match_season WHERE College   =   \"UCLA\" OR College   =   \"Duke\" ) ",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT avg(price_in_euros) ,  min(price_in_euros) FROM catalog_contents",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT avg ( price_in_euros )  ,  min ( price_in_euros )  FROM catalog_contents",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT avg ( price_in_euros )  ,  min ( price_in_euros )  FROM catalog_contents where catalog_entry_name  =  'Cola'",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT avg ( price_in_dollars )  ,  min ( price_in_dollars )  FROM catalog_contents where catalog_entry_name  =  'Cola'",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT avg ( price_in_dollars ) ,  min ( price_in_dollars )  FROM catalog_contents where catalog_entry_name  =  'Root beer'",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT min(Crime_rate) ,  max(Crime_rate) FROM county_public_safety",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT count ( * )  FROM county_public_safety",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM county_public_safety ORDER BY Crime_rate ASC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name, Crime_rate FROM county_public_safety WHERE Name  =  'Campbell River' OR Name  =  'Central Saanich'",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name, Crime_rate FROM county_public_safety WHERE Name  =  'Campbell River' OR Name  =  'Central Saanich' ORDER BY Crime_rate ASC",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.city FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT address FROM address WHERE address LIKE \"%S%\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT sum ( Number_city_affected )  from affected_region",
         "databaseID": "storm_record"
      },
      {
         "query": "Select region_name from region",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.region_name ,  count ( * )  FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id  =  T2.region_id GROUP BY T1.region_id",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT country FROM people WHERE age  <  25 INTERSECT SELECT country FROM people WHERE age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT distinct country FROM people WHERE age<30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT distinct country FROM people WHERE age>30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT count ( * )  FROM people WHERE age > =  30 and Is_Male = 'T' and country = 'Canada'",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT avg(T1.salary) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( T1.salary )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "select league_id from team where name  =  'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "select year,rank from team where name  =  'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT max(product_price) ,  min(product_price) ,  product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT max ( product_price )  ,  min ( product_price )  FROM products GROUP BY product_type_code ORDER BY product_type_code",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name  FROM products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT * FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT product_id FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id   =   t2.order_id WHERE order_status = 'Cancelled'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT order_date FROM customer_orders where customer_id  =  5",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT avg ( order_quantity )  from order_items",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_phone FROM customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT supplier_phone FROM suppliers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Aircraft from aircraft",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Description from aircraft WHERE Aircraft = 'Robinson R-22'",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID   =   T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID   =   T3.Airport_ID WHERE T3.Airport_Name   =   \"London Gatwick\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT count ( * )  FROM ship",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Nationality FROM ship",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT School FROM school WHERE Founded  <  1890",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT Denomination FROM school WHERE Founded  <  1890",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT school FROM school WHERE Founded  >  1900",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT denomination FROM school WHERE Founded  >  1900",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName JOIN player AS T3 ON T2.pID  =  T3.pID WHERE T3.pName  =  'Charles'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID WHERE T3.pName   =   'Charles'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.cName, T3.pID FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName JOIN player AS T3 ON T2.pID   =   T3.pID",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT HS from Player where pName = 'Charles'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName from College",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count(DISTINCT dept_name) ,  school_code FROM department GROUP BY school_code HAVING count(DISTINCT dept_name)  <  5",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name )   <  5",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM department where school_code  =  \"BUS\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DISTINCT dept_name )  ,  school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name )   <  5",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.student_id ,  count(*) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT count ( * )  from students",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT distinct T1.student_id FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T1.student_id ,  count ( * )  FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t2.customer_details ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( * )  FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT count ( * )  FROM device where Software_Platform  =  \"Android\"",
         "databaseID": "device"
      },
      {
         "query": "SELECT count ( * )  FROM device where Software_Platform  =  \"iOS\"",
         "databaseID": "device"
      },
      {
         "query": "SELECT device FROM device where Software_Platform  =  \"Android\"",
         "databaseID": "device"
      },
      {
         "query": "SELECT count ( distinct carrier )  FROM device",
         "databaseID": "device"
      },
      {
         "query": "SELECT carrier FROM device where device  =  \"Samsung\"",
         "databaseID": "device"
      },
      {
         "query": "SELECT avg(price) FROM wine WHERE Appelation NOT IN (SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation WHERE T1.County  =  'Sonoma')",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT avg ( t2.price )  FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation   =   T2.Appelation WHERE T1.County ! =   'Sonoma'",
         "databaseID": "wine_1"
      },
      {
         "query": "select distinct Winery from wine",
         "databaseID": "wine_1"
      },
      {
         "query": "select distinct Winery, price from wine",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count(*) DESC LIMIT 1 )",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE organisation_id IN  (  SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_id FROM Projects WHERE organisation_id IN  (  SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects order by project_id limit 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "Select song_name, resolution from song where song_name in  ( SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000 ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN Activity AS T3 ON T3.actid  =  T2.actid WHERE T1.fname  =  \"Mark\" AND T1.lname  =  \"Giuliano\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID JOIN Activity AS T3 ON T3.actid   =   T2.actid WHERE T1.fname   =   \"Mark\" AND T1.lname   =   \"Giuliano\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Rank from faculty where Lname  =  'Giuliano' and fname  =  'Mark'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT fname from faculty order by fname asc",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T3.Name ,  T2.Date ,  T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
         "databaseID": "debate"
      },
      {
         "query": "SELECT name  from  people",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.Date FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID  =  T2.Debate_ID JOIN people AS T3 ON T1.Affirmative  =  T3.People_ID",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou ( Zhejiang )\"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id   =   T2.host_city WHERE T2.match_id  =  1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT gdp FROM city where city_id  =  2",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT Hanyu_Pinyin FROM city where city  =  \"Nanjing  (  Jiangsu  ) \"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T1.city  =  \"Taizhou  (  Zhejiang  ) \"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T1.name  =  'Fasterfox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'CACHEbox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T1.name   =   'Fasterfox'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share from browser where name  =  \"Firefox\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share from browser where name  =  \"Safari\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT nationality FROM swimmer WHERE name  =  \"Grant Hackett\" OR name  =  \"Craig Stevens\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT StuID FROM Has_allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"animal\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT age FROM Student WHERE StuID IN  (  SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"animal\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT avg ( age )  FROM Student WHERE StuID IN  (  SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"animal\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR  =  2010 UNION SELECT salary FROM salary WHERE YEAR  =  2001",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT salary FROM salary WHERE YEAR   =   1985",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT player_id FROM salary order by salary desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  <  6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id  =  t3.manufacturer_id WHERE t1.num_of_component  >  10",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT name FROM furniture where Num_of_Component < 6",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT name FROM furniture where Num_of_Component > 10",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Physician",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Name FROM Procedures",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Position FROM Physician WHERE Name  =  \"John Dorian\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Cost FROM Procedures WHERE Name  =  \"Reverse Rhinopodoplasty\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT decor ,  count(*) FROM Rooms WHERE bedType = \"King\" GROUP BY decor;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( * )  FROM Rooms WHERE bedType  =  \"King\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT avg ( basePrice )  FROM Rooms WHERE bedType  =  \"King\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT (*) DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count  ( distinct formats )  FROM files",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT formats, count ( * )  FROM files group by formats",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT formats FROM files GROUP BY formats ORDER BY COUNT  ( * )  DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT country FROM addresses GROUP BY country HAVING count(address_id)  >  4",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT country FROM addresses GROUP BY country HAVING count ( address_id )  > 4",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT zip_postcode FROM addresses where city  =  'Lucasville'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( address_id )  FROM addresses",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE state  =  'AZ'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr = 22000",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM College WHERE enr  >  12000  ORDER BY cName , state",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id  =  t2.swimmer_id WHERE RESULT  =  'Loss'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT t1.name, t1.Nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Win' INTERSECT SELECT t1.name, t1.Nationality  FROM swimmer AS t1 JOIN record AS t2 ON t1.id   =   t2.swimmer_id WHERE RESULT   =   'Loss'",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT(*) DESC LIMIT 3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  DESC LIMIT 3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  DESC LIMIT 3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * )  ASC LIMIT 3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id ORDER BY T2.date_of_transaction ASC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count(*) ,  rank FROM captain WHERE age  <  50 GROUP BY rank",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM captain order by age desc limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM captain order by age asc limit 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( * )  ,  rank FROM captain WHERE age  <  50 GROUP BY rank",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count(*) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id  =  T2.start_station_id AND T2.id  =  T4.id AND T3.id  =  T4.end_station_id WHERE T1.city  =  \"Mountain View\" AND T3.city  =  \"Palo Alto\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   \"Howard\" AND T3.city   =   \"San Fransisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   \"South Van Ness\" AND T3.city   =   \"San Fransisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id   =   T2.start_station_id AND T2.id   =   T4.id AND T3.id   =   T4.end_station_id WHERE T1.city   =   \"Mountain View\" AND T3.city   =   \"Palo Alto\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major ! =  600 AND Sex  =  'F'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major ! =  600 AND Sex  =  'M'",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Fname , Lname FROM Student WHERE   Major ! =  600 AND Sex  =  'M' order by Age desc limit 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Major , Advisor FROM Student WHERE LName = \"Thornton\" and FName = \"Ian\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "select Fname , Lname FROM Student  where Sex  =  'F' and Major = 520",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT distinct interaction_type FROM medicine_enzyme_interaction",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT interaction_type FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT count ( distinct interaction_type )  FROM medicine_enzyme_interaction",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id HAVING count ( * )    > =    2",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected )   > =   10",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count ( * )   > =   2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected )   > =   10",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT count(*) FROM airports WHERE name LIKE '%International%'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports WHERE name LIKE '%International%'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airports GROUP BY country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT max ( elevation )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT min ( elevation )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airports WHERE elevation  =   ( SELECT min ( elevation )  FROM airports ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "select rid from routes where dst_apid  =  '2990'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( DISTINCT dst_apid )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
         "databaseID": "flight_4"
      },
      {
         "query": "select dst_apid from routes where rid  =  39",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN (SELECT Railway_ID FROM train)",
         "databaseID": "railway"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN  ( SELECT Railway_ID FROM train )  AND LOCATION  =  \"York\"",
         "databaseID": "railway"
      },
      {
         "query": "SELECT ObjectNumber FROM railway WHERE Railway_ID IN  ( SELECT Railway_ID FROM train ) ",
         "databaseID": "railway"
      },
      {
         "query": "SELECT builder FROM railway WHERE ObjectNumber  =  \"1975-7006\"",
         "databaseID": "railway"
      },
      {
         "query": "SELECT song_name FROM song WHERE rating  <   (SELECT min(rating) FROM song WHERE languages  =  'english')",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name from song where country  =  'India'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id from song where languages  =  'bangla'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT rating from song where resolution  =  512",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name from song where genre_is  =  'tagore'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name from song where country  =  'Bangladesh'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT job_title ,  AVG(salary) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id GROUP BY T2.job_title",
         "databaseID": "hr_1"
      },
      {
         "query": "select min_salary from jobs where JOB_TITLE  = 'president'",
         "databaseID": "hr_1"
      },
      {
         "query": "select Max_SALARY from jobs where JOB_TITLE  = 'President'",
         "databaseID": "hr_1"
      },
      {
         "query": "select FIRST_NAME from employees where employee_id  =  100",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_id  FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.organisation_id, t1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.organisation_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.outcome_code  FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id where t1.project_details  =  \"deleniti\"",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT POSITION FROM pilot WHERE Join_Year\t <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year\t >  2005",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT POSITION FROM pilot WHERE Join_Year <  2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year >  2005",
         "databaseID": "pilot_record"
      },
      {
         "query": "select age from pilot where position  =  \"Center Team\"",
         "databaseID": "pilot_record"
      },
      {
         "query": "select nationality from pilot where position  =  \"Forward-Center Team\"",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname   =   \"OTHA\" AND T2.lastname   =   \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T1.grade   =   1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname   =   \"OTHA\" AND T2.lastname   =   \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count(DISTINCT T2.camera_lens_id) FROM mountain AS T1 JOIN photos AS T2 ON T1.id  =  T2.mountain_id WHERE T1.country  =  'Ethiopia'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT count ( DISTINCT T2.camera_lens_id )  FROM mountain AS T1 JOIN photos AS T2 ON T1.id   =   T2.mountain_id WHERE T1.country   =   'Ethiopia'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT count ( DISTINCT T2.camera_lens_id )  FROM mountain AS T1 JOIN photos AS T2 ON T1.id   =   T2.mountain_id WHERE T1.country  ! =   'Ethiopia'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id   =   T2.mountain_id WHERE T1.country  ! =   'Ethiopia'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT distinct  Headquarters FROM company WHERE Industry   =   \"Banking\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT distinct Headquarters FROM company WHERE Industry  =  \"Oil and gas\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Headquarters FROM company WHERE Industry  =  \"Banking\" INTERSECT SELECT Headquarters FROM company WHERE Industry  =  \"Oil and gas\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( distinct PROF_NUM )  FROM CLASS WHERE CRS_CODE  =  \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_FNAME, PROF_OFFICE FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num WHERE T1.CRS_CODE  =  \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CRS_DESCRIPTION FROM COURSE WHERE CRS_CODE  =  \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name   =   'Comp. Sci.'  AND salary  >  80000",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor order by salary desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor where name  =  \"Wieland\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  from instructor where dept_name  =  \"Pol. Sci.\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  from instructor where dept_name  =  \"Cybernetics\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name, ID from instructor order by salary asc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.order_date DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.order_date DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( distinct customer_id )  FROM customer_orders where order_status = 'Cancelled'",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id where t1.customer_name = \"Eunice Morar\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT payment_method FROM customers where customer_name = \"Eunice Morar\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count(*) FROM university WHERE school_id NOT IN (SELECT school_id FROM basketball_match)",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT school FROM university WHERE school_id NOT IN  ( SELECT school_id FROM basketball_match ) ",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT founded FROM university WHERE school  =  \"University of Rhode Island\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT affiliation FROM university WHERE school  =  \"University of Rhode Island\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( * )  FROM Documents where Document_Type_Code  =  \"BK\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( * )  FROM Documents where Document_Type_Code  =  \"CV\"",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id JOIN bridge AS T3 ON T3.architect_id  =  T2.id WHERE T3.length_meters  >  80",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT length_meters from bridge where name  =  \"Fairy Bridge\"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT * from bridge where name  =  \"Xian Ren Qiao  ( Fairy Bridge ) \"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT * from bridge as T1 join architect as T2 on T1.architect_id  =  T2.id where T1.name  =  'Xian Ren Qiao  ( Fairy Bridge ) '",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT * from bridge as T1 join architect as T2 on T1.architect_id  =  T2.id where T2.name  =  \"Frank Lloyd Wright\" and T1.name ! =  \"Xian Ren Qiao  ( Fairy Bridge ) \"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT * FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id JOIN bridge AS T3 ON T3.architect_id   =   T2.id WHERE T3.length_meters  >  80",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Name FROM  people WHERE Age   =   35 OR Age   =   36",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Age FROM  people WHERE name  =  \"Luther C. Carter\"",
         "databaseID": "debate"
      },
      {
         "query": "SELECT Age FROM  people WHERE name  =  \"William B. Maclay\"",
         "databaseID": "debate"
      },
      {
         "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2",
         "databaseID": "election"
      },
      {
         "query": "SELECT County_name FROM county order by County_name",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.County_name,COUNT ( * )  FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District GROUP BY T1.County_id",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District GROUP BY T1.County_id HAVING COUNT ( * )    > =    2",
         "databaseID": "election"
      },
      {
         "query": "SELECT name FROM building WHERE building_id NOT IN (SELECT building_id FROM institution)",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT name FROM building",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT name FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) ",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT floors FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) ",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT name FROM building WHERE building_id NOT IN  ( SELECT building_id FROM institution ) ",
         "databaseID": "protein_institute"
      },
      {
         "query": "select Street_address from building where name  =  \"Bank of America Tower\"",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT name, street_address FROM building WHERE building_id IN  ( SELECT building_id FROM institution ) ",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT count(*) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name FROM Staff where first_name LIKE \"%a%\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * ) , T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.first_name LIKE \"%a%\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor ORDER BY salary DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count(*)  >  60",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT FirstName from Reservations where \nCode = 10105",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT LastName from Reservations where Code = 10105",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room HAVING count ( * )  > 60",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count(*) FROM salary AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  = 'Boston Red Stockings' AND T1.year  =  2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings' AND T1.year   =   2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT SUM ( salary )  FROM salary AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =  'Boston Red Stockings' AND T1.year   =   2000",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t2.acc_percent LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count ( * )  from university",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id   =   t2.school_id ORDER BY t2.acc_percent LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Name FROM editor WHERE Age  =  24 OR Age  =  25",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name FROM editor WHERE Age   =   24",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name FROM editor WHERE Age   =   25",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name, age FROM editor WHERE Age   =    ( select max ( age )  from editor ) ",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name, age FROM editor WHERE Age   =    ( select min ( age )  from editor ) ",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT count ( * )  FROM editor WHERE Age>25 and age<45",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT name FROM editor WHERE Age>25 and age<45",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT college_id FROM member GROUP BY college_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT name FROM member where college_id  =  4",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Mortgages'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id   =   T2.cust_id WHERE loan_type   =   'Auto'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE department_id   =   70 OR department_id   =   90",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT PHONE_NUMBER from  employees where first_name  =  'Steven' and last_name  =  'King'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT EMPLOYEE_ID from  employees where first_name  =  'Steven' and last_name  =  'King'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count ( distinct Payment_Method_Code )  from payments",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  desc LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Payment_Method_Code, count ( * )  FROM Payments GROUP BY Payment_Method_Code having Payment_Method_Code  =  \"American Express\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Payment_Method_Code, count ( * )  FROM Payments where Payment_Method_Code  =  \"MasterCard\"",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT distinct Payment_Method_Code FROM Payments",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT sum(T1.attendance) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Cleveland Forest Citys'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( T1.attendance )  FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br WHERE T2.name   =   'Chicago White Stockings'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br order by T1.span_first limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id   =   T2.team_id_br order by T1.span_first desc limit 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count(*) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT dept_store_chain_name from  Department_Store_Chain  where   \ndept_store_chain_id  = 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT store_name from   Department_Stores",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id  =  T2.dept_store_chain_id WHERE T2.dept_store_chain_name  =  \"South\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT distinct payment_method_code FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM INVOICES where payment_method_code  =  \"MasterCard\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T1.SportName  =  \"Football\" OR T1.SportName  =  \"Lacrosse\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( * )  FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   \"Football\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( * )  FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   \"Lacrosse\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T2.lname ,  T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID   =   T2.StuID WHERE T1.SportName   =   \"Lacrosse\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName,T2.decision FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'striker'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision  =  \"no\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName,T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T1.HS > 700",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName,T2.cName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T1.HS > 700",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.event_id ,  T1.service_id FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID   =   T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * )   >  1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID   =   T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * )   >  1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.name ,  T1.city ,  T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid  =  T2.dst_apid GROUP BY T2.dst_apid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airports where city  =  'Goroka'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name ,  T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid   =   T2.dst_apid GROUP BY T2.dst_apid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.personal_name   =   \"Karson\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT personal_name, middle_name, family_name FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT count ( distinct Headquarters )  FROM company",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Industry FROM company GROUP BY Industry ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Name FROM company order  by Market_Value_in_Billion desc  limit 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name ,  operating_system FROM web_client_accelerator EXCEPT SELECT T1.name ,  T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.name  =  'Opera'",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT Operating_system FROM Web_client_accelerator WHERE Connection  =  \"Broadband, Satellite, Wireless, Fiber, DSL\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT market_share FROM browser WHERE name  =  \"Safari\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T2.compatible_since_year FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.accelerator_id WHERE T1.name  =  \"CProxy\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT COUNT ( * )  FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT name  FROM browser",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT Name FROM WINE WHERE Price  >  (SELECT max(Price) FROM WINE WHERE YEAR  =  2006)",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Name FROM WINE WHERE YEAR   =   2006",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Price FROM WINE WHERE YEAR   =   2006",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT max ( Price )  FROM WINE WHERE YEAR   =   2006",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT name FROM WINE WHERE price>200",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    =   1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    =   1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Opening_Hours FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID   =   T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )    =   1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance + T3.balance LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T2.balance>3000",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid where T3.balance>20000",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select  balance from SAVINGS order  by  balance  desc  limit  1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select  min ( balance )  from SAVINGS",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select  max ( balance ) ,min ( balance )  from CHECKING",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"sesame\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id WHERE t1.product_name   =   \"sesame\" AND t3.characteristic_type_code  =  \"Grade\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id  order by t1.typical_selling_price desc limit 1",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id  =  T2.player_api_id ORDER BY overall_rating DESC LIMIT 3",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY overall_rating DESC LIMIT 3",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id   =   T2.player_api_id ORDER BY dribbling DESC LIMIT 1",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT birthday from Player where player_name  =  \"Cristiano Ronaldo\"",
         "databaseID": "soccer_1"
      },
      {
         "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   \"America Jaskolski\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count ( * )  FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.customer_name   =   \"Ellsworth Paucek\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT count(*) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits )",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( * )  FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) ",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Tourist_Details FROM Visitors WHERE Tourist_ID NOT IN  (  SELECT Tourist_ID FROM Visits  ) ",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Tourist_Details FROM Visitors AS T1 JOIN Visits AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID ORDER BY Visit_Date LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code  =  T2.product_category_code WHERE T2.product_description LIKE '%t%'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.typical_buying_price FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT avg ( T2.typical_buying_price )  FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code   =   T2.product_category_code WHERE T2.product_description LIKE '%t%' AND T2.typical_buying_price  =  \"\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT sum(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = \"Lucas\" AND T1.last_name = \"Mancini\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM invoices AS T2 JOIN customers AS T1 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  \"Lucas\" AND T1.last_name  =  \"Mancini\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum ( T2.total )  FROM customers AS T1 JOIN invoices AS T2 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  \"Lucas\" AND T1.last_name  =  \"Mancini\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T1.id  =  T2.customer_id WHERE T1.first_name  =  \"Lucas\" AND T1.last_name  =  \"Mancini\" ORDER BY t2.invoice_date DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  COUNT ( * )  FROM invoices WHERE billing_country   =   \"USA\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  billing_state, COUNT ( * )  FROM invoices WHERE billing_country   =   \"USA\" group by billing_state",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  billing_country, COUNT ( * )  FROM invoices group by billing_country",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  billing_city, COUNT ( * )  FROM invoices where billing_country  =  \"USA\" group by billing_city",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT  billing_city, COUNT ( * )  FROM invoices where billing_country ! =  \"USA\" group by billing_city",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id JOIN driver AS T3 ON T1.driver_id  =  T3.driver_id",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT T2.school ,  T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id   =   T2.school_id JOIN driver AS T3 ON T1.driver_id   =   T3.driver_id",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT mID ,  avg(stars) FROM Rating GROUP BY mID HAVING count(*)  >=  2",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( * )  FROM rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count ( * )  FROM  ( SELECT * FROM Rating GROUP BY mID HAVING count ( * )   <  2 ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT stars FROM Rating ORDER BY stars DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT stars FROM Rating ORDER BY stars aSC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( stars )  FROM Rating ORDER BY stars aSC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT donator_name ,  sum(amount) FROM endowment GROUP BY donator_name ORDER BY sum(amount) DESC",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  DESC",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  DESC limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name ,  sum ( amount )  FROM endowment GROUP BY donator_name ORDER BY sum ( amount )  asc limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T2.name  =  \"Airbus A340-300\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distinct aid FROM Aircraft WHERE name   =   \"Airbus A340-300\"",
         "databaseID": "flight_1"
      },
      {
         "query": "select sum ( distance )  from flight where aid  =   ( SELECT distinct aid FROM Aircraft WHERE name   =   \"Airbus A340-300\" ) ",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid   =   T2.aid WHERE T2.name   =   \"Airbus A340-300\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  <  (SELECT avg(age) FROM person)",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name from person where job  =  \"doctor\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name from person where city  =  \"new york city\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T1.age  <   ( SELECT avg ( age )  FROM person ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Ray\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Customers",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT lname ,  sex FROM Student WHERE StuID IN (SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Call of Destiny\" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID  =  T2.GameID WHERE T2.Gname  =  \"Works of Widenius\")",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT GType from Video_games where GName = 'The Vanishing of Eric Calder'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Hours_Played FROM  student as T1 JOIN Plays_Games AS T2  WHERE Lname = 'Kim' and Fname = 'Tracy'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT city_code from student where Fname  = 'Shiela' and Lname  =  'Jones'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count(DISTINCT name) FROM products WHERE name NOT IN (SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony')",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM products WHERE name NOT IN  ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code WHERE T2.name   =   'Sony' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM products WHERE name IN  ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code WHERE T2.name   =   'Creative Labs' ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to  <  (SELECT max(date_assigned_to) FROM Staff_Department_Assignments WHERE job_title_code  =  'Clerical Staff')",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT job_title_code FROM Staff_Department_Assignments WHERE department_id = 4",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_assigned_from  FROM Staff_Department_Assignments WHERE \nstaff_id = 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT distinct department_id  FROM Staff_Department_Assignments WHERE \njob_title_code = \"Sales Person\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_assigned_to FROM Staff_Department_Assignments WHERE \njob_title_code = \"Clerical Staff\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_assigned_from,date_assigned_to FROM Staff_Department_Assignments where job_title_code  = \"Sales Person\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT Name FROM artist",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT Name FROM artist WHERE age > 46",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT count ( * )  FROM artist WHERE age > 46 AND Year_Join > 1990",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name , id FROM station",
         "databaseID": "bike_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available )   >  14 UNION SELECT name FROM station WHERE installation_date LIKE \"12/%\" ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available )   >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT nickname FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT date_joined_staff FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT phone_number FROM Customers",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count(*) ,  t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id  =  t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT count ( * )   FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t1.network_name ,  t1.services FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT t1.network_name ,  t1.services,station_id FROM station AS t1 JOIN route AS t2 ON t1.id   =   t2.station_id GROUP BY t2.station_id",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds  =   2 AND decor   =   'modern'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName, roomid FROM Rooms WHERE basePrice  =   ( select max ( baseprice )  from rooms ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT baseprice, roomName, roomid FROM Rooms WHERE basePrice  =   ( select min ( baseprice )  from rooms ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomid, roomName, decor FROM Rooms WHERE beds  =   ( select max ( beds )  from rooms ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( * )  FROM Products",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT min ( Price )  FROM Products",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name from products where price  =   ( select min ( Price )  FROM Products ) ",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE \"%court%\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_description  =  'Studio'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_manager FROM Apartment_Buildings WHERE building_description  =  'Studio'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name like '%Court%'",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T3.Name ,  T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID  =  T3.Phone_ID",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT market_id, district from market",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT t1.market_id,t1.district,t2.phone_id from market as t1 join phone_market as t2 on t1.market_id  =  t2.market_id",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID   =   T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID   =   T3.Phone_ID order by t1.phone_id",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT count ( * )  FROM enzyme ",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT count ( distinct enzyme_id )  FROM medicine_enzyme_interaction",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT Residence FROM player GROUP BY Residence HAVING COUNT(*)  >=  2",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count ( distinct Residence )  FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT distinct Residence FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence FROM player group by Residence HAVING COUNT ( * )   > =   1",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT count(*) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount  >  200 )",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.product_id, T2.booked_amount from Products_for_Hire as T1 join Products_Booked as T2 on T1.product_id  =  T2.product_id",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT product_id FROM Products_for_hire WHERE product_id NOT IN  (  SELECT product_id FROM products_booked WHERE booked_amount > 200  ) ",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( distinct gtype )  FROM Video_games",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype, count ( * )  FROM Video_games GROUP BY gtype",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * )  LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT capacity, length, height, width FROM catalog_contents WHERE catalog_entry_name  =  \"Cola\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT price_in_dollars, price_in_euros, price_in_pounds FROM catalog_contents WHERE catalog_entry_name  =  \"Cream Soda\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor WHERE dept_code  =  \"HIST\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor WHERE dept_code  =  \"HIST\" and prof_high_degree  =  \"Ph.D.\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( distinct dept_code )  FROM professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT distinct dept_code from professor where dept_code  =  \"ENG\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor where dept_code  =  \"ENG\" and prof_high_degree  =  \"Ph.D.\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT prof_office from professor where dept_code  =  \"HIST\" and prof_high_degree  =  \"Ph.D.\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor where prof_high_degree  =  \"Ph.D.\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor where prof_high_degree  =  \"Ph.D.\" and dept_code  =  \"ACCT\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT prof_office from professor where prof_high_degree  =  \"Ph.D.\" and dept_code  =  \"ACCT\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT prof_extension from professor where prof_high_degree  =  \"Ph.D.\" and dept_code  =  \"ACCT\" and prof_office  =  \"KLR 229D\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM captain ORDER BY age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT age FROM captain ORDER BY age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT name FROM captain ORDER BY age desc LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT lname FROM student WHERE sex  =  'F' AND city_code  =  'BAL' UNION SELECT lname FROM student WHERE sex  =  'M' AND age  <  20",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex   =   'F' AND city_code   =   'BAL'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Lname FROM student WHERE sex   =   'F' AND city_code   =   'BAL'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Lname FROM student WHERE sex   =   'M' AND age < 20",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN (SELECT Submission_ID FROM acceptance)",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT count ( * )  FROM Acceptance",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT scores FROM submission ORDER BY scores DESC LIMIT 1",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT Author FROM submission",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT College FROM submission WHERE Author = \"Steve Niehaus\"",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT Author FROM submission WHERE Submission_ID NOT IN  ( SELECT Submission_ID FROM acceptance ) ",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT  max ( age )  FROM artist WHERE country   =   'United States'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT  count ( Artist_ID )  FROM artist WHERE country   =   'United States' and Year_Join>1993",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT  year_join FROM artist WHERE  Name =   'Vijay Singh'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT DISTINCT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.grade  =  1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT avg ( Grade )  FROM list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT FirstName From teachers",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT FirstName From teachers WHERE FirstName LIKE \"M%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT T1.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T1.grade   =   1 EXCEPT SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname   =   \"OTHA\" AND T2.lastname   =   \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT avg(ticket_price) ,  min(ticket_price) ,  max(ticket_price) FROM exhibition WHERE YEAR  <  2009",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR  <  2009",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT min ( ticket_price )   FROM exhibition WHERE YEAR  <  2009",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT max ( ticket_price )   FROM exhibition WHERE YEAR  <  2009",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR   =  2005",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT avg ( ticket_price )   FROM exhibition WHERE YEAR  < 2006",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT count ( * )  FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id   =   T2.id WHERE T2.brand   =   'Olympus'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id   =   T2.id group by T1.name having T2.brand   =   'Olympus'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT  T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT  count ( * )  from photos as T1 join camera_lens as T2 on  T1.camera_lens_id = T2.id where T2.brand  =  'Sigma'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT  T1.name from photos as T1 join camera_lens as T2 on  T1.camera_lens_id = T2.id where T2.brand  =  'Sigma'",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id  =  t2.party_id WHERE t2.form_id  =  (SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT count ( * )  FROM parties",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT count ( * )  FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id   =   t2.party_id WHERE t2.form_id   =    ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id   =   t2.party_id WHERE t2.form_id   =    ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT T1.staff_name ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.date_assigned_from LIKE \"2016%\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( distinct department_id )  from Staff_Department_Assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT job_title_code from Staff_Department_Assignments where department_id  =  5",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  from Staff_Department_Assignments where job_title_code  =  \"Department Manager\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT name FROM races ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  FROM races",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT date FROM races  ORDER BY date  LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT date FROM races  ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name,date FROM races  ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T3.first_name,T3.middle_name,T3.last_name FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T1.candidate_id  =  111",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T3.email_address FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T3.login_name  =  \"zops\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.assessment_date FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id  =  T2.candidate_id JOIN people AS T3 ON T1.candidate_id  =  T3.person_id WHERE T2.candidate_id  =  121",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country != \"China\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country ! =  \"China\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name, T2.Country FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country ! =  \"China\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT count ( * )  FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry  =  'Banking' ORDER BY sales_billion ,  profits_billion",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT rank ,  company ,  market_value FROM company WHERE main_industry   =   'Banking' ORDER BY sales_billion ,  profits_billion",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT company FROM company  ORDER BY market_value LIMIT 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT market_value FROM company WHERE Company  =  \"BP\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT COUNT ( * )  FROM problem_log",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT log_entry_date FROM problem_log ORDER BY log_entry_date asc LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT log_entry_date FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name   =   'Statistics' EXCEPT SELECT title FROM course WHERE dept_name   =   'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT credits FROM course WHERE title   =   'Care and Feeding of Cats'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id FROM course WHERE title   =   'Care and Feeding of Cats'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT DISTINCT Residence FROM player",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence, count ( * )  FROM player GROUP BY Residence",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence, count ( * )  FROM player EXCEPT SELECT Residence, count ( * )  FROM player WHERE count ( * )  < 2",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Player_name, Gender FROM player WHERE Residence  =  \"Winnipeg\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT count ( Device_ID )  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID where Shop_Name = 'Dinas Device'",
         "databaseID": "device"
      },
      {
         "query": "SELECT count ( Device_ID )  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID where Shop_Name = 'Best Buy'",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name,Location  FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name  =  T2.name JOIN PersonFriend AS T3 ON T1.friend  =  T3.name JOIN PersonFriend AS T4 ON T3.friend  =  T4.name WHERE T2.name  =  'Alice' AND T4.name != 'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name   =   T2.name JOIN PersonFriend AS T3 ON T1.friend   =   T3.name JOIN PersonFriend AS T4 ON T3.friend   =   T4.name WHERE T2.name   =   'Alice' AND T4.name ! =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "select city from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "select name from person where city  =  \"austin\"",
         "databaseID": "network_2"
      },
      {
         "query": "select friend from PersonFriend where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "select name, job from person where name in  ( select friend from PersonFriend where name  =  \"Zach\" ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT name_first, name_last, name_given FROM player",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name_first , T2.name_last, T2.name_given FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2007 AND T3.name  =  'Washington Nationals'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.name_first ,  T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id  =  T2.player_id JOIN team AS T3 ON T3.team_id_br  =  T1.team_id WHERE T1.year  =  2005 or T1.year  =  2007",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person WHERE city  =  \"austin\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM PersonFriend WHERE name  =  \"Alice\" OR name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT  name FROM PersonFriend WHERE friend  IN  ( SELECT name FROM person WHERE city  =  'austin' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T2.emp_lname FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num   =   T2.emp_num ORDER BY T2.emp_fname",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num   =   T2.emp_num ORDER BY T2.emp_fname",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT prof_high_degree from professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count(DISTINCT T2.Delegate) FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T1.Population  >  50000",
         "databaseID": "election"
      },
      {
         "query": "SELECT zip_code from county where county_id  =  2",
         "databaseID": "election"
      },
      {
         "query": "SELECT population from county where zip_code  =  \"D21\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT county_name from county where zip_code  =  \"D02\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT election_id from election where district  =  2",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( DISTINCT T2.Delegate )  FROM county AS T1 JOIN election AS T2 ON T1.County_id   =   T2.District WHERE T1.Population  >  50000",
         "databaseID": "election"
      },
      {
         "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT * FROM university ORDER BY enrollment DESC LIMIT 3",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT * FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT Primary_conference FROM university where school  =  \"Rutgers University\"",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT t2.fname ,  t2.lname FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE StuID NOT IN  ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT lname, fname FROM Student WHERE StuID NOT IN  ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID  =  T2.StuID ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_name from parts",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_id from parts",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT part_id ,  chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  from person where city  =  \"new york city\"",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from  ( SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Bob' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T2.Birth_Date LIKE \"%January%\";",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT weight from people where name  =  \"Ty Conklin\"",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT height from people where name  =  \"Jack Campbell\"",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT sum(Domestic_Passengers) FROM airport WHERE Airport_Name LIKE \"%London%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( Domestic_Passengers )  FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( International_Passengers )  FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT airport_name FROM airport order by Domestic_Passengers desc limit 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT sum ( Domestic_Passengers )  FROM airport WHERE Airport_Name LIKE \"%London%\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type  =  'saving'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type   =   'saving'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT acc_type FROM customer where acc_type ! =  \"saving\"",
         "databaseID": "loan_1"
      },
      {
         "query": "select cust_name from customer order by credit_score desc limit 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count(*)  >  1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT date_of_latest_revision FROM Catalogs",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1",
         "databaseID": "product_catalog"
      },
      {
         "query": "select catalog_name from Catalogs where date_of_latest_revision in  ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )  > 1 ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "select catalog_name, date_of_latest_revision from Catalogs where date_of_latest_revision in  ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1 ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * )   >  1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT count(*) FROM artist WHERE age  >  46 AND year_join  >  1990",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT avg ( age )  FROM artist",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT name FROM artist order by age desc limit 1",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT distinct Country FROM artist",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT color FROM grapes WHERE Grape  =  \"Barbera\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT grape FROM wine WHERE score > 90",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"White\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT count(*) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot  =  'Thompson' );",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT count ( * )  FROM flight WHERE pilot   =   'Thompson'",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT name FROM airport WHERE id NOT IN  (  SELECT airport_id FROM flight WHERE pilot   =   'Thompson'  ) ",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >  (SELECT min(resolution) FROM song WHERE languages  =  \"english\")",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT DISTINCT song_name FROM song WHERE resolution  >   ( SELECT min ( resolution )  FROM song WHERE languages   =   \"english\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT  country FROM song WHERE resolution  >   ( SELECT min ( resolution )  FROM song WHERE languages   =   \"english\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT  country,song_name, resolution FROM song WHERE resolution  >   ( SELECT min ( resolution )  FROM song WHERE languages   =   \"english\" ) ",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT  song_name FROM song order by rating desc limit 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT  song_name,artist_name FROM song order by rating desc limit 3",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count(*) ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT count ( * )  ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid GROUP BY T1.name",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT  max ( balance )   from  checking",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT  min ( balance )   from  checking",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance DESC LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT * FROM CHECKING",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT * FROM SAVINGS",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT * FROM ACCOUNTS",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance DESC LIMIT 1",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT sum(acc_bal) ,  state FROM customer WHERE credit_score  >  100 GROUP BY state",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT sum ( acc_bal )  FROM customer WHERE credit_score  >  100 GROUP BY state",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT acc_type from customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT credit_score from customer where cust_name  =  \"Mary\"",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Category FROM music_festival",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT ( * )  > 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T1.Total_Points DESC",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID ORDER BY T1.Total_Points DESC",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID ORDER BY T1.Total_Points DESC",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT Height FROM  people where name = 'Paul Hamm'",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT Hometown FROM  people where name = 'Paul Hamm'",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT sum ( Total_Points )  FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID where t2.Name = 'Paul Hamm'",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT Rings_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID   =   T2.People_ID where t2.Name = 'Paul Hamm'",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select count ( * )  from customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select customer_name from customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "select customer_details from customers",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T2.order_status FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id  =  T2.customer_id AND T2.order_id  =  T3.order_id AND T3.product_id  =  T4.product_id where T1.customer_name  =  \"George\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT * FROM team AS T1 JOIN salary AS T2 ON T1.team_id  =  T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary )  ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( salary )  from salary",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( distinct team_id )  from salary",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t1.product_name ,   t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select product_name from products",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select max ( product_price )  from products",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t2.product_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select product_price from Products where product_name = 'dvds'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT id FROM instructor WHERE dept_name  =  \"Psychology\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT salary FROM instructor WHERE id  =  22591",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT salary FROM instructor WHERE id  =  96895",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.engineer_id ,  T1.first_name ,  T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "select visit_start_datetime, visit_end_datetime from engineer_visits where engineer_id  =   ( SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN (SELECT employee_address_id FROM Employees)",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id  =  T2.employee_address_id group by T1.state_province_county order by count ( * )  desc limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id  =  T2.employee_address_id group by T1.state_province_county order by count ( * )   limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT state_province_county FROM addresses WHERE address_id NOT IN  ( SELECT employee_address_id FROM Employees ) ",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id GROUP BY t2.ship_id HAVING count(*)  >  1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( * )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )   >  1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id GROUP BY t2.ship_id HAVING count ( * )    =   1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( distinct CRS_CODE )  from course",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DEPT_CODE )  from department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Statistics'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CRS_DESCRIPTION from course",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Intro. to Statistics'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code WHERE T1.crs_description  = 'Intro. to Statistics'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count(DISTINCT T2.id) ,  count(DISTINCT T3.id) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name  =  T2.dept_name JOIN instructor AS T3 ON T1.dept_name  =  T3.dept_name GROUP BY T3.dept_name",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( DISTINCT T2.id ) ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name   =   T2.dept_name JOIN instructor AS T3 ON T1.dept_name   =   T3.dept_name GROUP BY T3.dept_name",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( DISTINCT T2.id )  ,  count ( DISTINCT T3.id )  ,  T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name   =   T2.dept_name JOIN instructor AS T3 ON T1.dept_name   =   T3.dept_name GROUP BY T3.dept_name",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  from student",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name   =   T2.dept_name where T1.dept_name = 'Astronomy'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name,T2.salary FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name   =   T2.dept_name where T1.dept_name = 'Astronomy'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Name FROM cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Name FROM cinema ORDER BY Openning_year ASC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT avg ( Capacity )  FROM cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count(*)  >=  2",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Name FROM branch ORDER BY membership_amount ASC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Open_year FROM branch WHERE Branch_ID = 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT open_year FROM branch GROUP BY open_year HAVING count ( * )    > =    2",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Jul OR T2.Mar  >  T2.Oct",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id   =   T2.city_id order by Mar  limit  1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar < T2.Jul",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE  T2.Mar > T2.Oct",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT complaint_status_code ,  count(*) FROM complaints WHERE complaint_type_code  =  \"Product Failure\" GROUP BY complaint_status_code",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_status_code , count ( * )  FROM complaints WHERE complaint_type_code   =   \"Product Failure\" GROUP BY complaint_status_code",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_status_code  FROM complaints WHERE complaint_type_code   =   \"Product Failure\"",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id GROUP BY T2.investor_id HAVING COUNT(*)  >=  2",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select count ( * )  from investors",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select count ( * )  from  ( SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )    > =    2 ) ",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id   =   T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )    > =    2",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT marketing_region_name from marketing_regions",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT marketing_region_code from stores where store_name  =  \"Rob Dinning\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.marketing_region_name from marketing_regions as T1 join stores as T2 on T1.marketing_region_code  =  T2.marketing_region_code where T2.store_name  =  \"Rob Dinning\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT * from stores where store_name  =  \"Rob Dinning\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code  =  T2.Marketing_Region_Code WHERE T2.Store_Name  =  \"Rob Dinning\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID  =  T2.Editor_ID GROUP BY T1.Name HAVING COUNT(*)  >=  2",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )    > =    2",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T2.Work_Type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID where T1.Name  =  \"Kamila Porczyk\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T1.Age FROM editor AS T1 where T1.Name  =  \"Anna Powierza\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T2.Work_Type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID   =   T2.Editor_ID where T1.Name  =  \"Anna Powierza\"",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY catalog_publisher DESC",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_publisher, count ( * )  FROM catalogs GROUP BY catalog_publisher",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid   =   T2.amenid GROUP BY T2.amenid ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "select dormid from has_amenity where amenid  =   ( SELECT T1.amenid FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid   =   T2.amenid GROUP BY T2.amenid ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.amenid FROM dorm_amenity AS T1 where T1.amenity_name  =  'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.FacID ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.FacID ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  rank from faculty where fname  =  \"Mark\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T2.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211' AND T1.stu_lname LIKE 'S%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT ENROLL_GRADE from ENROLL where STU_NUM = 324257",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from Class",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from student",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DEPT_CODE from student where STU_NUM = 324257",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT company FROM customers WHERE first_name = \"Eduardo\" AND last_name = \"Martins\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT company FROM customers WHERE first_name  =  \"Eduardo\" AND last_name  =  \"Martins\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT phone FROM customers WHERE first_name  =  \"Eduardo\" AND last_name  =  \"Martins\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid where T1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T3.age from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT avg ( T3.age )  from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T3.fname, T3.lname from Club as T1 join member_of_club as T2 on T1.clubid  =  T2.clubid join student as T3 on T2.stuid  =  T3.stuid where T1.clubname  =  \"Bootup Baltimore\" and T2.position  =  \"President\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT clublocation from club where clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"Red\" AND T2.price  >  50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.state FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Color   =   \"Red\" AND T2.price  >  50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT department_id ,  SUM(salary) FROM employees GROUP BY department_id HAVING count(*)  >=  2",
         "databaseID": "hr_1"
      },
      {
         "query": "select count ( * )  from employees",
         "databaseID": "hr_1"
      },
      {
         "query": "select SALARY from employees where EMPLOYEE_ID  =  101",
         "databaseID": "hr_1"
      },
      {
         "query": "select PHONE_NUMBER from employees where EMPLOYEE_ID  =  102",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT capacity FROM cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT max ( capacity )  FROM cinema",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT location FROM cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.payment_method_code  =  'Credit Card' GROUP BY T1.customer_id HAVING count(*)  >  2",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_name from customers where payment_method_code  =  'Credit Card'",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.payment_method_code   =   'Credit Card' GROUP BY T1.customer_id HAVING count ( * )   >  2",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.payment_method_code   =   'Credit Card' GROUP BY T1.customer_id HAVING count ( * )   >  2",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation  =  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department  =  T2.departmentid WHERE PrimaryAffiliation   =   1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT departmentID from department where name  =  \"Surgery\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "select count ( * )  from Customer",
         "databaseID": "chinook_1"
      },
      {
         "query": "select BirthDate from Employee where FirstName is 'Andrew' and LastName is 'Adams'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T2.Name, T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T2.Name, T2.State FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T2.Name, T1.Vote_Percent FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T2.Name, T1.date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID   =   T2.Representative_ID ORDER BY votes DESC",
         "databaseID": "election_representative"
      },
      {
         "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = \"Koby\";",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code  =  T2.role_code WHERE T2.employee_name  =  \"Koby\"",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T1.role_code FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code  =  T2.role_code WHERE T2.employee_name  =  \"Koby\"",
         "databaseID": "cre_Doc_Control_Systems"
      },
      {
         "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID WHERE T1.cName  =  (SELECT cName FROM college ORDER BY enr DESC LIMIT 1)",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  FROM  tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID WHERE T1.cName   =  \"OU\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM college ORDER BY enr DESC LIMIT 1",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.pName FROM  tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID WHERE T1.cName   =   \"OU\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT LName FROM STUDENT WHERE Sex  =  \"F\" ORDER BY Age DESC",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT LName, age, FName FROM STUDENT WHERE stuid  =  1003 or stuid  =  1004",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT sex, city_code FROM STUDENT WHERE stuid  =  1005 or stuid  =  1004",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT sex, count ( * )  FROM STUDENT group by sex",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT LName FROM STUDENT WHERE Sex   =   \"F\" ORDER BY Age DESC",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "select avg ( age )  from student where major  =   ( SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "select sex from student where major  =   ( SELECT major FROM Student GROUP BY major ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.id ,  T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id HAVING count(*)  >=  3",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT count ( * )  from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T1.name  =  \"Frank Lloyd Wright\"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT count ( * )  from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T1.name  =  \"Frank Gehry\"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.name from architect as T1 join bridge as T2 on T1.id  =  T2.architect_id  where T2.name  =  \"Xian Ren Qiao  ( Fairy Bridge ) \"",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT name from architect where id  =  2",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id GROUP BY T2.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Date FROM flight ORDER BY Date LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Pilot FROM flight ORDER BY Date LIMIT 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT AVG ( Altitude )  FROM flight",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT T1.company_id ,  T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id  =  T2.company_id GROUP BY T1.company_id HAVING count(*)  >=  2 UNION SELECT T3.company_id ,  T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id  =  T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count(*)  >=  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT company_name from Third_Party_Companies",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT company_address from Third_Party_Companies where company_name  =  \"Dooley and Sons\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT first_name from Maintenance_Engineers where first_name like \"E%\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count(*) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident )",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  FROM game",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  FROM game WHERE id NOT IN  (  SELECT game_id FROM injury_accident  ) ",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  FROM game WHERE id  IN  (  SELECT game_id FROM injury_accident  ) ",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT stadium_id  FROM game WHERE id NOT IN (  SELECT game_id FROM injury_accident  ) ",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id WHERE t1.store_name  =  \"Blackville\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.store_name   =   \"Blackville\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t3.City_Population FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id WHERE t1.store_name   =   \"Blackville\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id   =   t2.store_id JOIN district AS t3 ON t2.district_id   =   t3.district_id order by t3.city_population desc limit 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.city_code  =  \"NYC\" AND T2.Election_Cycle  =  \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT lname, fname FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT count ( distinct T1.StuID )  FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   SECRETARY_Vote WHERE T1.city_code   =   \"NYC\" AND T2.Election_Cycle   =   \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T1.lname, T1.fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID   =   SECRETARY_Vote WHERE T1.city_code   =   \"NYC\" AND T2.Election_Cycle   =   \"Spring\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT sex ,  count(*) FROM Faculty WHERE rank  =  \"AsstProf\" GROUP BY sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT FNAME, LNAME FROM Faculty WHERE FacID  =  1082",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Sex FROM Faculty WHERE Rank  =  \"Professor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT phone FROM Faculty WHERE Lname  =  \"Goodrich\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Lname FROM Faculty WHERE Fname  =  \"Mark\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT problem_log_id ,  problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT * FROM problem_log",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT problem_status_code FROM problem_log WHERE problem_category_code  =  'Middleware'",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT * FROM problem_log WHERE problem_category_code ! =  'Middleware'",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM airlines",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name, count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count ( * )  DESC LIMIT 10",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT email ,  phone FROM customers WHERE first_name = \"Astrid\" AND last_name = \"Gruber\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT address  FROM customers WHERE first_name = \"Luís\" and last_name = \" Köhler\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT address  FROM customers WHERE id = 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT email,phone  FROM customers WHERE first_name = \"Astrid\" and last_name = \"Gruber\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT postal_code  FROM customers where  id = 3",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT id from campuses where year  =  1956",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t2.TotalEnrollment_AY FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus where t1.campus  =  \"California State University-Channel Islands\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t1.county FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus where t2.FTE_AY  =  178",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay > 400 AND FTE_AY > 200",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT count ( * )  FROM Employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Employee_Name FROM Employees",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Date_of_Birth FROM Employees WHERE employee_name   =   \"Ebba\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code   =   T2.role_code WHERE T1.employee_name   =   \"Ebba\"",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "select count ( Allergy )  from Allergy_Type where AllergyType  =  'food'",
         "databaseID": "allergy_1"
      },
      {
         "query": "select count ( Allergy )  from Allergy_Type where AllergyType  =  'animal'",
         "databaseID": "allergy_1"
      },
      {
         "query": "select count ( Allergy )  from Allergy_Type where AllergyType  =  'environmental'",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT user_name ,  password FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT role_code FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT user_login FROM users GROUP BY role_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID  =  T2.School_ID GROUP BY T1.School_ID HAVING COUNT(*)  >  1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T2.School FROM player AS T1 JOIN school AS T2 ON T1.School_ID   =   T2.School_ID GROUP BY T1.School_ID HAVING COUNT ( * )   >  1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT T2.School, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID   =   T2.School_ID GROUP BY T1.School_ID HAVING COUNT ( * )   >  1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT POSITION FROM player GROUP BY name HAVING avg(Points)  >=  20",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT * FROM player WHERE Points > 20",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Position FROM player WHERE Points > 20",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Name FROM player WHERE Points > 20",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Name FROM player WHERE Points  =   ( Select max ( Points )  FROM player ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT count(*) FROM Student WHERE sex  =  \"M\" AND StuID IN (SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE sex   =   \"M\" AND StuID IN  ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy WHERE T2.allergytype   =   \"food\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T3.Fname, T3.Lname,T2.Allergy FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student as T3 on T3.StuID = T1.StuID WHERE T2.allergytype  =  \"food\" and T3.sex = 'M'",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Has_allergy AS T1 JOIN Student as T2 on T2.StuID = T1.StuID WHERE T1.Allergy  =  \"Cat\" and T2.sex = 'F'",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.party_name ,  count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  2 GROUP BY T1.party_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T1.party_id, count ( T2.party_name )   FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  1",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT  T2.Took_office,T2.Region_ID  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id where T1.party_id  =  1",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID  =  T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count(*) BETWEEN 1 AND 3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID   =   T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * )  = 1",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.Customer_Event_ID  FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID   =   T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * )  BETWEEN 1 AND 3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.Customer_Event_ID  ,  T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID   =   T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * )  BETWEEN 1 AND 3",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT count ( * )  FROM savings WHERE balance  >   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT * FROM savings WHERE custid = 1339",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.transaction_type_description ,  T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count ( * )  from transactions WHERE share_count  >  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code   =   T2.transaction_type_code WHERE T2.share_count  <  10",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.customer_last_name ,  T1.customer_id ,  T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT count ( * )  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 2",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "select date_order_placed from Orders where customer_id in  ( SELECT  T1.customer_id  FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1 )  order by date_order_placed desc limit 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.gender FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max ( T1.duration )  ,  max ( T2.resolution )  ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max ( T1.duration )  ,  max ( T2.resolution )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.country ORDER BY T2.country",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.country ORDER BY T2.country",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT weight from people order by weight desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT people_id, weight from people order by weight desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT people_id, name, weight from people order by weight desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT customer_details FROM customers WHERE customer_details LIKE \"%Diana%\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT count ( distinct customer_id )  from  customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT * from customers where customer_details like \"%Diana%\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details from customers where customer_id  =  263",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.dept_code ORDER BY count(*) LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  desc LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT * FROM professor AS T1 JOIN department AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * )  LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT name ,  member_id FROM member WHERE age  <  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT name ,  member_id FROM member WHERE Membership_card   =   'Black'",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT name ,  member_id FROM member WHERE Membership_card   =   'Black' OR age  >  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count ( * )  FROM member WHERE Membership_card   =   'Black' OR age  >  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT name FROM member WHERE Membership_card   =   'Black' OR age  >  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT count ( * )  FROM district",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT city_area FROM district where District_name  =  \"Bahawalnagar District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT city_population FROM district where District_name  =  \"Attock District\"",
         "databaseID": "store_product"
      },
      {
         "query": "SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad'",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT coupon_id, coupon_amount FROM Discount_Coupons",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.good_or_bad_customer   =   'good' INTERSECT SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id   =   T2.coupon_id WHERE T2.good_or_bad_customer   =   'bad'",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT date_issued from discount_coupons where coupon_id in  ( SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'good' INTERSECT SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id  =  T2.coupon_id WHERE T2.good_or_bad_customer  =  'bad' ) ",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT sum(T2.balance) ,  T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select max ( balance )  from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select min ( balance )  from savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "select name from ACCOUNTS",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT sum ( T2.balance )  , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid GROUP BY T1.name",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT FacID FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID   =   T2.advisor GROUP BY T1.FacID HAVING count ( * )    > =    2",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.major FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID   =   T2.advisor GROUP BY T1.FacID HAVING count ( * )    > =    2",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT avg ( Days_held )  FROM wrestler",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT name FROM wrestler order by Days_held limit 1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT name FROM wrestler where Wrestler_ID  =  1",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id GROUP BY t3.city ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id GROUP BY t3.city ORDER BY count ( * )  LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T2.name ,  T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id   =   T2.id",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name, T2.salary  FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\" ORDER BY T2.customer_id",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_address FROM customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT order_date FROM customer_orders",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_phone FROM customers",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t3.order_quantity  =  ( SELECT max(order_quantity) FROM order_items)",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id WHERE t3.order_quantity   =    (  SELECT max ( order_quantity )  FROM order_items ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name, T1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id WHERE t3.order_quantity   =    (  SELECT max ( order_quantity )  FROM order_items ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t1.customer_name, T2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id where T2.order_status  =  \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t3.order_quantity, t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.payment_method  =  \"Cash\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Hopkins Student Enterprises\" AND t2.position  =  \"CTO\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT ClubLocation FROM Club WHERE ClubName =  \"Hopkins Student Enterprises\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.fname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Hopkins Student Enterprises\" AND t2.position   =   \"CTO\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Hopkins Student Enterprises\" AND t2.position   =   \"CTO\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT text FROM tweets WHERE text LIKE '%intern%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM tweets WHERE text LIKE '%intern%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT * FROM tweets order by createdate desc limit 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT * FROM tweets order by createdate limit 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name,last_name FROM employees WHERE hire_date > 1987",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT salary FROM employees WHERE hire_date > 1987 order by salary",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count(*) ,  T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockcode",
         "databaseID": "hospital_1"
      },
      {
         "query": "select count ( * )  from room",
         "databaseID": "hospital_1"
      },
      {
         "query": "select count ( distinct blockcode )  from room",
         "databaseID": "hospital_1"
      },
      {
         "query": "select blockcode from room order by RoomNumber desc",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT decor , avg(basePrice) ,  min(basePrice) FROM Rooms GROUP BY decor;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT  bedType FROM Rooms where roomid  =  \"RND\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT  decor FROM Rooms where roomname  =  \"Abscond or bolster\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT decor , avg ( basePrice )  ,  min ( basePrice )  FROM Rooms GROUP BY decor",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count(*) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID  =  T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( distinct Event_ID )  FROM Participants_in_Events",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT count ( * )  FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT Participant_Details FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID   =   T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT avg(T1.age) ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( T1.age )  ,  T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( T1.age )  ,  T3.dorm_name, T3.student_capacity FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid GROUP BY T3.dorm_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg(access_count) FROM documents GROUP BY document_structure_code ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name, access_count FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_structure_code  FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name,document_structure_code  FROM documents where document_structure_code =  ( select min ( document_structure_code )  from documents ) ",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT avg ( access_count )    FROM documents where document_structure_code =  ( select min ( document_structure_code )  from documents )  group by document_name",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT date_became_customer FROM Customers WHERE first_name = \"Carole\" AND last_name = \"Bernhard\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT date_became_customer FROM Customers WHERE first_name  =  \"Carole\" AND last_name  =  \"Bernhard\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT amount_outstanding FROM Customers WHERE first_name  =  \"Carole\" AND last_name  =  \"Bernhard\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT customer_status_code FROM Customers WHERE first_name  =  \"Carole\" AND last_name  =  \"Bernhard\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT date_became_customer FROM Customers WHERE last_name  =  \"Bernhard\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT mid FROM Movie WHERE title  =  'Gone with the Wind'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year FROM Movie WHERE title  =  'Star Wars'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director FROM Movie WHERE title  =  'The Sound of Music'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT title FROM Movie WHERE director  =  'James Cameron' AND YEAR  >  2000",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( distinct login_name )  FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( distinct project_id )  FROM Project_Staff WHERE role_code   =   'leader'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT other_details FROM Project_Staff WHERE role_code   =   'leader' and date_from  <  '1989-04-24 23:51:54'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Marcelle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT  T3.visit_date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Vincent\" union SELECT  T3.VISIT_DATE FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Marcelle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T1.Name,T3.visit_date,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Vincent\" union SELECT T1.Name,T3.VISIT_DATE,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID   =   T3.Tourist_Attraction_ID AND T2.Tourist_ID   =   T3.Tourist_ID WHERE T2.Tourist_Details   =   \"Marcelle\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT distinct Investor FROM entrepreneur",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Investor FROM entrepreneur group by investor having count ( * )  > 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "Select investor from entrepreneur where investor in  ( \nSELECT Investor FROM entrepreneur WHERE Money_Requested  >  140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested  <  120000 )  group by investor having count ( * )  > 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT rating FROM song ORDER BY rating DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT resolution FROM song ORDER BY resolution DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT * FROM journalist WHERE Years_working  >  10",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name FROM journalist WHERE Years_working  >  10 AND Years_working  < 3",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT Nationality FROM journalist WHERE Years_working  >  10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working  <  3",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT avg ( years_working )  FROM journalist WHERE Nationality = \"England\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT name FROM journalist WHERE Nationality = \"England\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT avg ( age )  FROM journalist WHERE Nationality = \"England\"",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count(*)  >  3",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count ( * )   >  3",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT attribute_name FROM Attribute_Definitions WHERE attribute_data_type  =  \"Bool\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT attribute_id FROM Attribute_Definitions WHERE attribute_data_type  =  \"Bool\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.apt_number, T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments WHERE apt_number IN  ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\" )  AND bedroom_count  =  3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT bathroom_count FROM Apartments WHERE apt_number IN  ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Confirmed\" )  AND bedroom_count  =  3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID JOIN Reviewer AS T3 ON T1.rID   =   T3.rID WHERE T3.name   =   'Sarah Martinez'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director, title from movie where director ! =  \"Victor Fleming\"",
         "databaseID": "movie_1"
      },
      {
         "query": "select T1.director, T1.title, T2.stars from movie as T1 join rating as T2 on T1.mid  =  T2.mid where T1.mid in (  SELECT mID from movie where director ! =  \"Victor Fleming\" ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T3.balance  >  (SELECT avg(balance) FROM savings)",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name ,  T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( balance )  FROM savings",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid WHERE T2.balance  >   ( SELECT avg ( balance )  FROM savings ) ",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.id ,  T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.id  FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "browser_web"
      },
      {
         "query": "select name from browser where id  =  1",
         "databaseID": "browser_web"
      },
      {
         "query": "select name from browser order by market_share limit 2",
         "databaseID": "browser_web"
      },
      {
         "query": "select t1.name from browser as T1 join accelerator_compatible_browser as T2 on T1.id  =  T2.browser_id order by compatible_since_year asc limit 1",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT  T1.Attraction_Type_Description FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT  T2.Name  FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code   =   T2.Attraction_Type_Code where Attraction_Type_Description  =  \"gallery\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count ( * )  FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code where Attraction_Type_Description  =  \"gallery\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Opening_Hours  FROM  Tourist_Attractions  where  Name = \"haunted mansion\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees WHERE department_id   =   70 OR department_id   =   90",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT distinct department_id from employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name FROM employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year  >  2010",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id  =  T2.host_city WHERE T2.year  > 2009",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT count ( distinct City )   from city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT avg ( GDP )  from city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT max ( GDP )  from city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT fname ,  lname FROM student WHERE city_code != 'HKG' ORDER BY age",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname ,  lname FROM student WHERE city_code  =  'HKG'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT fname ,  lname FROM student WHERE city_code ! =  'HKG'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( age )  FROM student WHERE city_code ! =  'HKG'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID  =  T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT(*)  >=  2",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT count ( * )  FROM Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT count ( * )  FROM Products_in_Events",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID   =   T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * )    > =    3",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products ORDER BY Product_PRICE DESC LIMIT 1",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT avg ( Product_Price )  FROM Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM student WHERE  age  <  25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT * FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student WHERE sex  =  'F' AND age < 25",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * )  LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers_cards where card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers_cards where card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT staff_id from staff where staff_first_name  =  \"Christop\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT count ( * )  FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_id  =  \"10\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Christop\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms  >=  15",
         "databaseID": "train_station"
      },
      {
         "query": "select total_passengers from station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "select number_of_platforms from station where station_id  =  2",
         "databaseID": "train_station"
      },
      {
         "query": "select main_services from station where station_id  =  3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms   > =    15",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.dormid, count ( T4.amenid )  FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid   =   T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid   =   T5.amenid GROUP BY T3.dormid",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.stuid FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid WHERE T2.dormid   =  160",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid WHERE T2.dormid   =  160",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased ASC LIMIT 3",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code  =  \"PUR\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   \"PUR\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T3.date_of_transaction FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T3.transaction_type_code FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON  T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  >  100 AND T3.transaction_type_code   =   \"PUR\" ORDER BY T3.amount_of_transaction DESC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_id FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT role_code FROM Project_Staff WHERE project_id  =  5",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT role_code FROM Project_Staff WHERE project_id  =  1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT organisation_id FROM Projects WHERE project_id  =  1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.staff_id FROM Project_Staff AS T1 JOIN Projects AS T2 WHERE T1.project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id  =  1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_details FROM Projects WHERE project_id NOT IN  (  SELECT project_id FROM Project_Staff WHERE role_code   =   'researcher'  ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.resident_id ,  T1.other_details ,  count ( * )  FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id   =   T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * )  DESC",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.firstname ,  T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"OTHA\" AND T2.lastname  =  \"MOYER\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( * )  from teachers",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT grade  from list where FirstName like \"%MAUDE%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT Lastname from list where FirstName like \"%STORMY%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( * )  from list",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT max(Population) ,  min(Population) FROM county",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( Zip_code )  FROM county",
         "databaseID": "election"
      },
      {
         "query": "SELECT count ( County_Id )  FROM county",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  from Person where job  =  \"student\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  from Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count  ( distinct friend )  from PersonFriend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT duration from files order by duration desc limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT duration from files order by duration limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from files where duration < 4",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.Artist  =  \"Gorgoroth\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T2.song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.Artist   =   \"Gorgoroth\" order by T2.Issue_Date limit 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.Artist   =   \"Gorgoroth\"",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count(*) LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id FROM takes",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT semester ,  YEAR FROM takes GROUP BY semester ,  YEAR ORDER BY count ( * )  LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  FROM takes WHERE semester  =  'Fall'  and year  =  '2008'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT city_code FROM Student WHERE Fname  =  \"Linda\" AND Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT fname,lname FROM Student WHERE sex  =  \"F\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT city_code FROM Student WHERE sex  =  \"F\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT fname,lname FROM Student order by age desc limit 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T1.Grape   =   \"Cabernet Franc\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT * FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape WHERE T2.price > 50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT grape FROM grapes where Color  =  \"Red\"",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price > 50",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID  =  T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "farm"
      },
      {
         "query": "select official_name from city",
         "databaseID": "farm"
      },
      {
         "query": "SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Room FROM Stay",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.Name FROM Stay as T4 Join Patient as T1 where T4.Patient = T1.SSN and T4.Room  =  111",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT distinct T4.Name, T3.Dose FROM stay AS T1 JOIN patient AS T2 ON T1.Patient  =  T2.SSN JOIN Prescribes AS T3 ON T3.Patient  =  T2.SSN JOIN Medication AS T4 ON T3.Medication  =  T4.Code WHERE T2.Name  =  'John Smith'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT fname ,  sex FROM Student WHERE StuID IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Milk\" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Cat\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE Sex  =  \"F\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Age FROM Student WHERE LName  =  \"Smith\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT FName FROM Student ORDER BY Advisor DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.teacher_id ,  T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id  =  T2.teacher_id GROUP BY T1.teacher_id ORDER BY count(*) DESC LIMIT 3",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id order by count ( * )  desc",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT * FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.first_name, T1.teacher_id ,  count ( * )  FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id   =   T2.teacher_id GROUP BY T1.teacher_id order by count ( * )  desc",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT Country FROM perpetrator WHERE Injured  >  50 INTERSECT SELECT Country FROM perpetrator WHERE Injured  <  20",
         "databaseID": "perpetrator"
      },
      {
         "query": "select count ( Country )  from perpetrator",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Country FROM perpetrator WHERE Injured > 50",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Country FROM perpetrator WHERE Injured  <  20",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID WHERE T2.Country  =  \"China\" OR T2.Country  =  \"Japan\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   \"China\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   \"Japan\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   \"China\" OR T2.Country   =   \"Japan\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Weight FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID WHERE T2.Country   =   \"South Korea\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID  =  T2.Wrestler_ID ORDER BY T2.Days_held DESC",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Name  FROM wrestler",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT Team FROM Elimination",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T2.Name ,  T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID   =   T2.Wrestler_ID ORDER BY T2.Days_held DESC",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id  =  T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id  =  T3.id ORDER BY T1.compatible_since_year DESC",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id   =   T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id   =   T3.id",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T2.name ,  T3.name, t1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id   =   T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id   =   T3.id",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T2.name ,  T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id   =   T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id   =   T3.id ORDER BY T1.compatible_since_year DESC",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id WHERE T2.job_title_code  =  \"Department Manager\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT job_title_code from staff_department_assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_id  FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Department Manager\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.staff_id ,  T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id   =   T2.staff_id WHERE T2.job_title_code   =   \"Department Manager\"",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT membership_amount FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Open_year FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 1",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id  =  T2.architect_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.name  FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T1.id ,  T1.name ,  T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT T2.name FROM architect AS T1 JOIN mill AS T2 ON T1.id   =   T2.architect_id where T1.name = 'Frank Lloyd Wright'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"BAL\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT avg ( Age )  from Student",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT sex,avg ( Age )  FROM student group by Sex",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( StuID )  FROM student where Age<17",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( StuID )  from student where Fname in  ( SELECT Fname FROM student group by Fname having count ( * ) >1 ) ",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( ClubID )  from Club where ClubLocation = 'AKW'",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( ClubID )  from Club where ClubLocation = 'HHH'",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.rank  =  'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Midshipman'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id   =   t2.ship_id WHERE t2.rank   =   'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT rank FROM Faculty GROUP BY rank ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT AVG ( FacID )  FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT Rank FROM faculty GROUP BY Rank order by count ( * ) desc limit 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM faculty where rank  =  \"Professor\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id   =   T2.company_id JOIN gas_station AS T3 ON T1.station_id   =   T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Representative_Name from gas_station where Location  =  \"Newport Rd\"",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id   =   T2.company_id JOIN gas_station AS T3 ON T1.station_id   =   T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT Location from gas_station order by open_year limit 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT count(*) ,  T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT maintenance_contract_id FROM Maintenance_Contracts",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.maintenance_contract_id, T2.asset_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id  =  T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT Name FROM manager ORDER BY Age DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Name,age FROM manager ORDER BY Age DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Working_year_starts FROM manager where name  =  \"Todd Hamilton\"",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Price FROM publication ORDER BY Price ASC LIMIT 3",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publisher FROM publication ORDER BY Price ASC LIMIT 3",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publication_Date  FROM publication ORDER BY Price ASC LIMIT 3",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT count(DISTINCT t3.product_id) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id JOIN order_items AS t3 ON t2.order_id  =  t3.order_id WHERE t1.customer_name  =  \"Rodrick Heaney\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT order_id,  from Order_Items group by order_id order by sum ( order_quantity )  desc limit 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( DISTINCT t3.product_id )  FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id WHERE t1.customer_name   =   \"Rodrick Heaney\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT * FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id JOIN order_items AS t3 ON t2.order_id   =   t3.order_id  group by T2.customer_id order by sum ( T3.order_quantity )  desc limit 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT budget from department where building  =  \"Chandler\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( * )  from department",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( distinct building )  from department",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name from department where building  =  \"Taylor\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT budget from department where dept_name =  \"Biology\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id  =  T2.investor_id WHERE T1.Investor_details  =  \"l\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT * FROM LOTS WHERE lot_details   =   \"i\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT * FROM LOTS WHERE lot_details   =   \"l\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id   =   T2.investor_id WHERE T1.Investor_details   =   \"l\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.investor_id, T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON  T1.investor_id   =   T2.investor_id WHERE T1.Investor_details   =   \"l\"",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT claim_id FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT policy_id FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT date_claim_made FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT school_name FROM school WHERE school_id NOT IN (SELECT school_id FROM endowment)",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT location FROM school where school_id  =  1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT amount FROM endowment where donator_name  =  \"Distrito Nacional\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT course_id, title FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE salary > 80000",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id   =   T2.id JOIN course AS T3 ON T2.course_id   =   T3.course_id WHERE T3.title   =   'C Programming'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT Name ,  Nationality FROM HOST ORDER BY Age DESC LIMIT 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT avg ( age )  FROM HOST",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT count ( * )  FROM HOST where Nationality  =  \"United States\" and age < 40",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Name from  country",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.Name ,  avg ( T2.Speed )  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID GROUP BY T1.Name",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name = 'Sweden'",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT bedType FROM Rooms ORDER BY basePrice DESC LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT bedType FROM Rooms ORDER BY basePrice LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT RoomId FROM Rooms ORDER BY basePrice desc LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT RoomId FROM Rooms ORDER BY basePrice LIMIT 3",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id FROM Customers_cards GROUP BY customer_id having count ( * ) >1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id, count ( * )  FROM Customers_cards GROUP BY customer_id having count ( * ) >1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT country FROM stadium GROUP BY country HAVING count(*)  <=  3",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT country FROM stadium GROUP BY country HAVING count ( * )    > =   1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( DISTINCT city )  FROM stadium",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT country FROM stadium GROUP BY country HAVING count ( * )  < =  3",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT min(low_temperature) ,  max(wind_speed_mph) FROM weekly_weather",
         "databaseID": "station_weather"
      },
      {
         "query": "select low_temperature from weekly_weather",
         "databaseID": "station_weather"
      },
      {
         "query": "select max ( low_temperature )  from weekly_weather",
         "databaseID": "station_weather"
      },
      {
         "query": "select wind_speed_mph from weekly_weather",
         "databaseID": "station_weather"
      },
      {
         "query": "select wind_speed_mph from weekly_weather order by wind_speed_mph",
         "databaseID": "station_weather"
      },
      {
         "query": "select min ( wind_speed_mph ) , max ( wind_speed_mph )  from weekly_weather order by wind_speed_mph",
         "databaseID": "station_weather"
      },
      {
         "query": "select day_of_week, min ( wind_speed_mph )  from weekly_weather order by wind_speed_mph",
         "databaseID": "station_weather"
      },
      {
         "query": "SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Germany\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   \"Germany\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT  T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   \"Germany\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT  T1.Address,T1.FirstName,T1.LastName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   \"Germany\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN (SELECT StuID FROM Has_allergy WHERE Allergy  =  \"Soy\")",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( distinct allergy )  FROM Has_allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT  ALLERGY FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID  =  T2.STUID GROUP BY ALLERGY ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID  =  T2.STUID where ALLERGY  =  \"Tree Pollen\" and t1.sex  =  \"M\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE StuID IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Soy\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( * )  FROM Student WHERE StuID NOT IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Soy\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT fname ,  major FROM Student WHERE StuID NOT IN  ( SELECT StuID FROM Has_allergy WHERE Allergy   =   \"Soy\" ) ",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM entrepreneur)",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Name, people_id FROM people",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT Name, people_id FROM people WHERE People_ID NOT IN  ( SELECT People_ID FROM entrepreneur ) ",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT sum ( money_requested )  from entrepreneur",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID ,  count ( * )  FROM Sportsinfo GROUP BY StuID",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT StuID ,  count ( * )  ,  sum ( gamesplayed )  FROM Sportsinfo GROUP BY StuID",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( distinct stuid )  FROM SportsInfo WHERE OnScholarship  =  \"Y\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT SportName FROM SportsInfo GROUP BY SportName ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT SportName FROM SportsInfo ORDER BY HoursPerWeek DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count(*)  >  3",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_id FROM complaints GROUP BY complaint_id HAVING count ( * )   >  3",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count ( * )   >  3",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_status_code,complaint_type_code FROM complaints GROUP BY complaint_status_code HAVING count ( * )   >  3",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT complaint_outcome_code FROM complaints GROUP BY complaint_status_code HAVING count ( * )   >  3",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT party FROM driver WHERE home_city  =  'Hartford' AND age  >  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )  FROM driver WHERE age  >  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT count ( * )  FROM driver WHERE home_city   =   'Hartford' AND age  >  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT party FROM driver WHERE home_city   =   'Hartford' AND age  >  40",
         "databaseID": "school_bus"
      },
      {
         "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id GROUP BY t2.program_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT Program_id from  program",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id   =   t2.program_id GROUP BY t2.program_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "program_share"
      },
      {
         "query": "SELECT Name FROM mountain WHERE Height  >  5000 OR Prominence  >  1000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Name FROM mountain WHERE Height  >  5000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT Name FROM mountain WHERE Height  >  5000 AND prominence > 1000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT range FROM mountain WHERE Height  >  5000 AND prominence > 1000",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum(degrees) DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT DISTINCT YEAR FROM degrees",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT sum ( degrees ) , YEAR FROM degrees GROUP BY YEAR",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum ( degrees )  DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Project_Staff",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT date_from FROM Project_Staff where staff_id = 779.0",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT role_code FROM Project_Staff where staff_id = 674810.0",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.pPos   =   'goalie'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT hs FROM PLAYER WHERE pID  =  \"10001\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.Pid   =   '10001'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT Num_of_shaff_in_charge FROM happy_hour where Month  =  \"June\"",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count ( distinct shop_id )  FROM happy_hour",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT shop_id FROM happy_hour group by shop_id order by count ( * )  asc limit 1",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id  =  T2.camera_lens_id GROUP BY T1.id ORDER BY count(*)",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id GROUP BY T1.id",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id GROUP BY T1.id ORDER BY count ( * ) ",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id   =   T2.camera_lens_id  where T1.brand  =  \"Olympus\"",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t2.color_description  =  \"white\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   \"white\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name,t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   \"white\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "select product_category_code, avg ( typical_buying_price )  from Products group by product_category_code",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name FROM Staff group by first_name order by count ( * )  desc limit 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT last_name FROM Staff group by first_name order by count ( * )  desc limit 1",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name FROM Staff where last_name  =  'Mertz'",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT first_name FROM staff where last_name  =  'Mertz'",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name  FROM races",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name ,  date FROM races ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT name ,  circuitid FROM races ORDER BY date DESC LIMIT 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from artist where country  =  \"India\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from artist where preferred_genre  =  \"folk\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( * )  from artist where country  =  \"Bangladesh\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count ( * )   > =   1",
         "databaseID": "music_1"
      },
      {
         "query": "select T1.country from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1",
         "databaseID": "music_1"
      },
      {
         "query": "select T1.gender from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1",
         "databaseID": "music_1"
      },
      {
         "query": "select T2.rating from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * )  > =  1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT cName FROM college WHERE enr  >  (SELECT max(enr) FROM college WHERE state  =  'FL')",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM college",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM college",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName, enr FROM college WHERE enr >  ( SELECT max ( enr )  FROM college WHERE state  =  'FL' ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.Name ,  avg(T2.Speed) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID GROUP BY T1.Name",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.Speed FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\"",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.opened FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\" order by T2.speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\" order by T2.speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.Park FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\" order by T2.speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.Height FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\" order by T2.speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T2.length FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID   =   T2.Country_ID where T1.Name  =  \"Austria\" order by T2.speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"Packing\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"Packing\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT DISTINCT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status  =  \"Packing\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT order_id FROM orders WHERE order_status  =  \"Packing\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM orders WHERE order_status  =  \"Packing\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT order_id FROM orders WHERE order_status  =  \"On Road\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY T1.id HAVING count ( * )   >  1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY T1.id order by count ( * )  limit 3",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT Principal_activities FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id GROUP BY Principal_activities order by count ( * )  limit 1",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id   =   T2.company_id where T1.Principal_activities  =  \"Cargo\" group BY T1.name order by count ( * )  limit 3",
         "databaseID": "flight_company"
      },
      {
         "query": "SELECT COUNT(*) FROM (SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie')",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName   =   T2.cName WHERE T2.pPos   =   'mid'  ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos ! =  'goalie'  ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName from Tryout   where pPos = \"goalie\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id  =  T1.id GROUP BY T1.id HAVING count(*)  >=  2",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.id ,  T1.score ,  T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id   =   T1.id GROUP BY T1.id HAVING count ( * )   < =   2",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( distinct Competition )  FROM game",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( distinct Home_team )  FROM game",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"fast\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t4.color_description   =   \"red\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE  t3.characteristic_name   =   \"fast\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t4.color_description   =   \"red\" AND t3.characteristic_name   =   \"fast\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t3.characteristic_name   =   \"slow\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t4.color_description FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id   =   t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id   =   t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code   =   t4.color_code WHERE t3.characteristic_name   =   \"slow\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "SELECT Country FROM manager WHERE Age  >  50 INTERSECT SELECT Country FROM manager WHERE Age  <  46",
         "databaseID": "railway"
      },
      {
         "query": "select name from manager",
         "databaseID": "railway"
      },
      {
         "query": "select min ( age ) ,max ( age )  from manager",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID JOIN company AS T3 ON T1.Company_ID  =  T3.Company_ID WHERE T3.Sales_in_Billion  >  200",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID JOIN company AS T3 ON T1.Company_ID   =   T3.Company_ID WHERE T3.Sales_in_Billion  >  200",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT avg ( T2.age )  FROM employment AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID JOIN company AS T3 ON T1.Company_ID   =   T3.Company_ID WHERE T3.Sales_in_Billion  >  200",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t2.campus  =  \"San Jose State University\" AND t1.year  =  2000",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   \"San Jose State University\" AND t1.year  =  2000",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT id FROM campuses WHERE campus   =   \"San Jose State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   \"San Jose State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t1.Year FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t2.campus   =   \"San Jose State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT County FROM campuses WHERE campus   =   \"San Jose State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT Location FROM campuses WHERE campus   =   \"San Jose State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count ( StuID )  FROM Has_allergy where Allergy = 'Tree Pollen'",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * )  asc  LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT(*)  >  1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT ( * )    > =   2",
         "databaseID": "railway"
      },
      {
         "query": "SELECT built FROM railway GROUP BY LOCATION HAVING COUNT ( * )    > =   2",
         "databaseID": "railway"
      },
      {
         "query": "SELECT LOCATION FROM railway order by built desc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT builder FROM railway order by built asc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT built FROM railway order by built asc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "club_1"
      },
      {
         "query": "select clubid from Member_of_club where stuid  =  1001",
         "databaseID": "club_1"
      },
      {
         "query": "select clubname from club where clublocation  =  \"AKW\"",
         "databaseID": "club_1"
      },
      {
         "query": "select position from Member_of_club where clubid  =  1",
         "databaseID": "club_1"
      },
      {
         "query": "select clubname from club where clublocation  =  \"HHH\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT name ,  price FROM Products ORDER BY price ASC LIMIT 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT price FROM Products where Name  =  'Memory' order by price limit 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Manufacturer FROM Products where Name  =  'ZIP drive'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Manufacturer FROM Products where Name  =  'Hard drive'",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT count ( * )  from gas_station where open_year > 2000",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "gas_company"
      },
      {
         "query": "select location from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "select location, vice_manager_name from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "select location, open_year from gas_station where manager_name  =   ( SELECT manager_name FROM gas_station WHERE open_year  >  2000 GROUP BY manager_name ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "gas_company"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE  t1.fname  =  \"Aaron\" AND t1.lname  =  \"Turon\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   \"Aaron\" AND t1.lname   =   \"Turon\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   \"Ralf\" AND t1.lname   =   \"Hinze\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.title,t3.paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid WHERE  t1.fname   =   \"Ralf\" AND t1.lname   =   \"Hinze\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid \ngroup by t1.authID order by count ( * )  desc limit 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid   =   t2.authid JOIN papers AS t3 ON t2.paperid   =   t3.paperid \ngroup by t1.authID  having count ( * )   = 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T1.driverid ,  count(*) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count(*)  <=  30",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )   < =   30 ) ",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid  FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid HAVING count ( * )   < =   30",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid,count ( * )   FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid JOIN races AS T3 ON T2.raceid  =  T3.raceid GROUP BY T1.driverid having t2.rank < 3",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T2.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id   =   T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID WHERE T3.Age  <  34",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Pilot_name   from pilot",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT Pilot_ID  from pilot",
         "databaseID": "pilot_record"
      },
      {
         "query": "SELECT count(*) ,  sum(student_capacity) ,  gender FROM dorm GROUP BY gender",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * ) , gender  FROM dorm GROUP BY gender",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT  dorm_name FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm order by student_capacity desc limit 1",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT min(Order_Quantity) ,  avg(Order_Quantity) ,  max(Order_Quantity) FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT min ( Order_Quantity )   FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT max ( Order_Quantity )  FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT avg ( Order_Quantity )  FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT order_id, product_id, order_quantity FROM INVOICES",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id WHERE T1.first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count ( distinct EMPLOYEE_ID )  from  employees",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city ,T3.COUNTRY_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN locations AS T3 ON T2.location_id   =   T3.location_id WHERE T1.first_name LIKE '%z%'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T3.city ,T3.COUNTRY_ID,T3.STREET_ADDRESS,T3.STATE_PROVINCE FROM employees AS T1 JOIN departments AS T2 ON T1.department_id   =   T2.department_id JOIN locations AS T3 ON T2.location_id   =   T3.location_id WHERE T1.first_name LIKE '%z%' and T1.FIRST_NAME = 'Elizabeth'",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM physician",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid   =   T2.PCP GROUP BY T1.employeeid",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM physician WHERE name NOT IN  ( SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid   =   T2.PCP ) ",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id  =  T2.people_id JOIN people AS T3 ON T1.female_id  =  T3.people_id JOIN church AS T4 ON T4.church_id  =  T1.church_id WHERE T2.age  >  30 OR T3.age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name from church",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id JOIN church AS T4 ON T4.church_id   =   T1.church_id WHERE T2.age  >  30 OR T3.age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT T4.name, T4.Open_Date FROM wedding AS T1 JOIN people AS T2 ON T1.male_id   =   T2.people_id JOIN people AS T3 ON T1.female_id   =   T3.people_id JOIN church AS T4 ON T4.church_id   =   T1.church_id WHERE T2.age  >  30 OR T3.age  >  30",
         "databaseID": "wedding"
      },
      {
         "query": "SELECT name FROM enzyme WHERE name LIKE \"%ALA%\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT name FROM enzyme WHERE name LIKE \"%PBG%\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT Product FROM enzyme WHERE name = \"ALA synthase\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT min(T2.HS) ,   T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID  =  T2.pID GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID and T1.pPos  =  'goalie' GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID and T1.pPos  =  'striker' GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT min ( T2.HS )  FROM tryout AS T1 JOIN player AS T2 ON T1.pID   =   T2.pID where T1.ppos  =  \"mid\" GROUP BY T1.pPos",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM customers order by customer_name",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T2.investor_id ,  T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id  =  T2.investor_id WHERE T2.transaction_type_code  =  \"SALE\" GROUP BY T2.investor_id HAVING COUNT(*)  >=  2",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select distinct transaction_type_code from Transactions",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "select distinct share_count from Transactions",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.artist_name ,  T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT  count ( \nartist_name )  from artist",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM  song AS T2  WHERE T2.releasedate LIKE \"%Mar%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T1.artist_name , T1.gender,T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.releasedate LIKE \"%Mar%\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT School_Code FROM Department WHERE Dept_Name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT Dept_Address FROM Department WHERE Dept_Name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.prof_office FROM professor AS T3 JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.prof_high_degree FROM professor AS T3 JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T1.Crs_Code  =  \"ACCT-211\" AND T1.Class_Time LIKE '%T%'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT Name  FROM technician ORDER BY Age DESC LIMIT 1",
         "databaseID": "machine_repair"
      },
      {
         "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   \"operating system\" OR T2.course_name   =   \"data structure\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   \"operating system\" OR T2.course_name   =   \"data structure\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id   =   T2.author_id WHERE T2.course_name   =   \"advanced database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT TIME FROM elimination WHERE Eliminated_By  =  \"Punk\" OR Eliminated_By  =  \"Orton\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT TIME FROM elimination WHERE Eliminated_By   =   \"Punk\" OR Eliminated_By   =   \"Orton\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT TIME FROM elimination WHERE Eliminated_By   =   \"Benjamin\"",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT avg ( TIME )  FROM elimination",
         "databaseID": "wrestler"
      },
      {
         "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id   =   T2.station_id GROUP BY T1.station_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Total_Passengers FROM station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Number_of_Platforms FROM station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT location FROM station where name  =  \"London Waterloo\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id  =  t2.customer_id GROUP BY t1.party_email ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT party_email FROM parties WHERE party_id  =  \"1\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT party_phone FROM parties WHERE party_id  =  \"2\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT service_id FROM Party_Services WHERE customer_id  =  \"10\"",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id   =   t2.customer_id GROUP BY t1.party_email ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "e_government"
      },
      {
         "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title  FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year, T2.DIRECTOR FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year, T2.DIRECTOR, t1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( stars )  from rating",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT count ( customer_id )  FROM Customers",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT date_became_customer FROM Customers order by date_became_customer desc limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT date_became_customer FROM Customers order by date_became_customer limit 1",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT roomName ,  decor FROM Rooms WHERE bedtype  =  'King' ORDER BY basePrice;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomId FROM Rooms WHERE decor  =  'modern'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( * )  FROM Rooms WHERE bedtype  =  'King'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName  FROM Rooms WHERE bedtype  =  'King'  ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT DISTINCT Customer_Phone FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t2.date_opened FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id   =   t2.customer_id JOIN available_policies AS t3 ON t2.policy_id   =   t3.policy_id WHERE t1.customer_name   =   \"Dayana Robel\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme  =  \"Spring\" OR Party_Theme  =  \"Teqnology\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT * FROM party WHERE Party_Theme   =   \"Spring\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme   =   \"Teqnology\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT First_year ,  Last_year FROM party WHERE Party_Theme   =   \"Spring\" OR Party_Theme   =   \"Teqnology\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count(*)  >=  4",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Winery FROM WINE",
         "databaseID": "wine_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )    > =    4 ) ",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )    > =    4",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country ,  AVG ( total )  FROM invoices GROUP BY billing_country",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country FROM invoices order by total desc  limit 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country , total FROM invoices ORDER BY total DESC LIMIT 10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)",
         "databaseID": "college_2"
      },
      {
         "query": "select building from classroom order by capacity desc limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "select credits from course where title = 'Accounting'",
         "databaseID": "college_2"
      },
      {
         "query": "select capacity from classroom where building = 'Whitman'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.lot_id ,  avg(amount_of_transaction) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id  =  T2.transaction_id GROUP BY T2.lot_id ORDER BY avg(amount_of_transaction)",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction )  desc limit 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.lot_id ,  avg ( amount_of_transaction )  FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id   =   T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction )  limit 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share  >  15;",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id   =   T1.id JOIN browser AS T3 ON T2.browser_id   =   T3.id WHERE T3.name  = \"Firefox\"",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id  =  T1.id JOIN browser AS T3 ON T2.browser_id  =  T3.id WHERE T3.market_share > 15",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id  =  T2.id where compatible_since_year  > =   1996",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id  =  T2.id join browser as T3 on T3.id  =  T1.browser_id where T1.compatible_since_year  > =   1996 and T3.market_share > 25",
         "databaseID": "browser_web"
      },
      {
         "query": "SELECT country FROM competition WHERE competition_type  =  'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type  =  'Tournament'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition WHERE competition_type   =   'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type   =   'Tournament'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Competition_ID FROM competition WHERE country  =  \"Russia\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT Competition_ID, year FROM competition WHERE country  =  \"Russia\"",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id ORDER BY T2.Feb DESC LIMIT 1",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT count ( distinct City )  from city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT Regional_Population from city WHERE City  =  \"Hangzhou  (  Zhejiang  ) \"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT City_ID from city WHERE City  =  \"Nanjing  (  Jiangsu  ) \"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT sales_details FROM sales",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT purchase_details FROM Purchases",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT sales_transaction_id, sales_details FROM sales UNION SELECT purchase_transaction_id, purchase_details FROM purchases",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT  avg ( age )  ,  city_code FROM student WHERE sex   =   'M' GROUP BY city_code",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  ,  city_code FROM student WHERE sex   =   'M' GROUP BY city_code",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT Age FROM student WHERE city_code  =  'ATL'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT avg ( age )  ,  city_code FROM student WHERE sex   =   'F' GROUP BY city_code",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "select count ( teacher_id )  from Teachers",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( distinct T2.teacher_id )  FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id  =  T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT \nlast_name ,teacher_id  FROM Teachers EXCEPT SELECT T1.last_name ,T1.teacher_id FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id   =   T2.teacher_id",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Dameon\" AND T2.staff_last_name  =  \"Frami\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Jolie\" AND T2.staff_last_name  =  \"Weber\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id GROUP BY problem_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT COUNT ( * )  FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN Enrolled_in AS T2 ON T1.STUID  =  T2.STUID WHERE T2.GRADE  =  \"A\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Stuid FROM enrolled_in WHERE Grade  =  \"A\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count(DISTINCT name) FROM PersonFriend WHERE friend NOT IN (SELECT name FROM person WHERE city  =  'Austin')",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'Austin' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'new york city' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( DISTINCT name )  FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'salt lake city' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT distinct name FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'salt lake city' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT distinct name FROM PersonFriend WHERE friend NOT IN  ( SELECT name FROM person WHERE city  =  'new york city' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE Person.city = 'new york city'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID  =  T2.Phone_ID GROUP BY T2.Name HAVING sum(T1.Num_of_stock)  >=  2000 ORDER BY sum(T1.Num_of_stock) DESC",
         "databaseID": "phone_market"
      },
      {
         "query": "select distinct ( name )  from phone",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID   =   T2.Phone_ID GROUP BY T2.Name HAVING sum ( T1.Num_of_stock )   >  2000",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID   =   T2.Phone_ID GROUP BY T2.Name HAVING sum ( T1.Num_of_stock )   >  2000 ORDER BY sum ( T1.Num_of_stock )  DESC",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT name, main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT name, main_services FROM station ORDER BY total_passengers asc LIMIT 3",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT t1.color_code ,  t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.color_code FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_id FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id   =   T2.id WHERE T2.dept_name   =   'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( i_id )  FROM advisor AS T1 JOIN student AS T2 ON T1.s_id   =   T2.id WHERE T2.dept_name   =   'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE firstname LIKE '%ROY%'",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T2.beds  =  2",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName, T1.Checkin FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.Adults  =  1 AND T1.checkin LIKE \"%OCT%\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room   =   T2.RoomId WHERE T1.firstname  =  \"ROY\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT activity_name FROM Activity",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( distinct T2.stuid  )  FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID   =   T2.actID where T1.activity_name = 'Soccer'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range  >  10000",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select count ( * )  from hotels WHERE price_range  >  10000",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select max ( star_rating_code )  from hotels WHERE price_range  >  10000",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code  =  T2.star_rating_code WHERE T1.price_range > 10000",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  asc LIMIT 1",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT advisor FROM Student WHERE advisor  =   ( SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  asc LIMIT 1 )  OR advisor  =   ( SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * )  desc LIMIT 1 )  GROUP BY advisor",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Festival_Name,Location from festival_detail ORDER BY YEAR DESC LIMIT 3",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Chair_Name from festival_detail where festival_name  =  \"LA Awards\"",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "select Num_of_Audience from festival_detail where Festival_Name  = 'LA Awards' and Year  =  2010",
         "databaseID": "entertainment_awards"
      },
      {
         "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.product_name ,  T2.color_description  FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.typical_selling_price FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT avg ( typical_buying_price )  FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code   =   T2.color_code WHERE product_category_code   =   \"Herbs\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'inhibitor' INTERSECT SELECT T1.name ,  T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id  =  T1.id WHERE interaction_type  =  'activitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE interaction_type   =   'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE interaction_type   =   'activitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE interaction_type   =   'inhibitor' INTERSECT SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id   =   T1.id WHERE interaction_type   =   'activitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county   =   'California'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "select t1.customer_id, t3.city, t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id   =   t2.customer_id JOIN addresses AS t3 ON t2.address_id   =   t3.address_id WHERE t3.state_province_county  ! =   'California'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Type_Code FROM Products WHERE Product_Price  >  4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price  <  3000",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT Product_Price FROM Products WHERE Product_Type_Code  =  \"Food\"",
         "databaseID": "solvency_ii"
      },
      {
         "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.Name, T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T1.company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT T2.name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID   =   T2.People_ID order by T2.weight desc limit 1",
         "databaseID": "entrepreneur"
      },
      {
         "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id  =  t2.service_id GROUP BY t1.service_id HAVING count(*)  >  2",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT service_name FROM services",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING count ( * )   >  1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING count ( * )   >  2",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT t2.service_name, count ( * )  FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id   =   t2.service_id GROUP BY t1.service_id HAVING Service_name  =  \"New policy application\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Location_ID FROM Tourist_Attractions WHERE Tourist_Attraction_ID = '2113'",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * )   LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT city ,  count ( * )  FROM branch WHERE open_year  <  2010 GROUP BY city",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT open_year FROM branch WHERE open_year  <  2010",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name FROM branch WHERE open_year  <  2010",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.customer_id ,  T1.first_name ,  count(*) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT COUNT ( * )  FROM BOOKINGS",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT COUNT ( distinct customer_id )  FROM BOOKINGS",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.customer_id ,  T1.first_name ,  count ( * )  FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT product_name FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT count ( * )  FROM products WHERE product_price  >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING count(*)  >=  2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id HAVING sum(T2.number_city_affected)  >=  10",
         "databaseID": "storm_record"
      },
      {
         "query": "select count ( * )  from storm",
         "databaseID": "storm_record"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id HAVING count ( * )    > =    2 ) ",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.job  =  'student'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT * FROM person EXCEPT SELECT * FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T1.job   =   'student'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend WHERE T1.job   =   'student' INTERSECT SELECT T3.name FROM Person AS T4 JOIN PersonFriend AS T3 ON T4.name   =   T3.friend",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.friend  order by name desc",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT major ,  avg(age) ,  min(age) ,  max(age) FROM Student GROUP BY major",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT LName FROM Student where Fname = 'Linda'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Age FROM Student where Fname = 'Linda'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Age FROM Student where Lname = 'Kim'",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT distinct sex  FROM Student where age = 18",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT Carrier FROM phone WHERE Memory_in_G  >  64",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT Carrier FROM phone WHERE Memory_in_G  <  32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G  >  64",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id from item where title =  'cup'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num  =  T2.emp_num ORDER BY T2.emp_fname",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from employee",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor where DEPT_CODE  =  \"ENG\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT prof_high_degree from professor where DEPT_CODE  =  \"HIST\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_id,product_stock_number FROM catalog_contents WHERE catalog_entry_name  =  \"Cola\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.City_Town  =  \"Feliciaberg\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T1.City_Town   =   \"Feliciaberg\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T1.City_Town   =   \"Feliciaberg\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.State_County FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T1.City_Town   =   \"Feliciaberg\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.line_1 FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID   =   T2.Address_ID WHERE T1.City_Town   =   \"Feliciaberg\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT name ,  course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID  =  T2.ID WHERE T1.dept_name  =  'Art'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID   =   T2.ID WHERE T1.dept_name   =   'Art'",
         "databaseID": "college_2"
      },
      {
         "query": "select  name  from instructor where dept_name =  'Art'",
         "databaseID": "college_2"
      },
      {
         "query": "select  \nID  from instructor where dept_name =  'Statistics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count(*) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident )",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENTS WHERE student_id IN  (  SELECT student_id FROM Behavior_Incident  ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENTS WHERE student_id NOT IN  (  SELECT student_id FROM Behavior_Incident  ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT first_name, middle_name, last_name FROM STUDENTS WHERE student_id NOT IN  (  SELECT student_id FROM Behavior_Incident  ) ",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  COUNT(*) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY COUNT(*) DESC LIMIT 10;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM invoices",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT * FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id GROUP BY T1.id ORDER BY COUNT ( * )  DESC LIMIT 10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id GROUP BY T1.id ORDER BY COUNT ( * )  DESC LIMIT 10",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM  ( SELECT * FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id   =   T1.id GROUP BY T1.id having count ( * )   > =   7 ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT title ,  director FROM film WHERE film_id NOT IN (SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China')",
         "databaseID": "film_rank"
      },
      {
         "query": "select count ( distinct country )  from market",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT count ( director )  FROM film WHERE film_id NOT IN  ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China' ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT count ( title )  FROM film WHERE film_id NOT IN  ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id  =  T2.Market_ID WHERE country  =  'China' ) ",
         "databaseID": "film_rank"
      },
      {
         "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id   =   t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id   =   t2.staff_id ORDER BY t2.date_complaint_raised desc LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" AND T2.resolution   <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" AND T2.resolution   <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT avg ( T1.duration )  FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" AND T2.resolution   <  800",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId GROUP BY T2.Name ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId   =   T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T2.fname  =  \"Linda\" AND T2.lname  =  \"Smith\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT fname ,  lname FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.fname,  T2.lname FROM student as T1 JOIN faculty as T2 on T2.FacID  =  T1.advisor where T1.sex  =  \"F\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T2.fname,  T2.lname FROM student as T1 JOIN faculty as T2 on T2.FacID  =  T1.advisor where T1.Fname = \"Linda\" and T1.Lname = \"Smith\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT RoomId ,  roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( * )  FROM Rooms ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT baseprice FROM Rooms ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomid FROM Rooms where baseprice  =  250",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomname FROM Rooms where baseprice  =  250",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT venue ,  name FROM event ORDER BY Event_Attendance DESC LIMIT 2",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT count ( * )  FROM event",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT event_id FROM event ORDER BY Event_Attendance DESC",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT event_id, event_attendance,  name FROM event ORDER BY Event_Attendance DESC",
         "databaseID": "news_report"
      },
      {
         "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT count ( * ) FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT school_name FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT location FROM school where school_name  =  \"Bremen\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT COUNT ( * )  FROM FACULTY WHERE sex   =   \"M\" AND Building   =   \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT rank FROM FACULTY WHERE fname   =   \"Mark\" AND lname   =   \"Giuliano\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT COUNT ( * )  FROM FACULTY WHERE rank  =  \"Professor\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM SECTION WHERE semester   =   'Fall' AND YEAR   =   2009 INTERSECT SELECT course_id FROM SECTION WHERE semester   =   'Spring' AND YEAR   =   2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM SECTION WHERE semester   =   'Spring' AND YEAR   =   2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM SECTION WHERE sec_id  =  443",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT building FROM SECTION WHERE course_id  =  443",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.address_line_1 ,  T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count(*)  >=  2",
         "databaseID": "e_learning"
      },
      {
         "query": "select author_id from Courses group by author_id having count ( author_id ) >1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count ( * )   > =   2",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id GROUP BY T2.author_id HAVING Count ( * )   > =   1",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >=  2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id HAVING count ( * )   > =   2",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_address FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_type_code  =  \"Credit\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.customer_email FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.date_valid_from  =   ( SELECT MIN ( date_valid_from )  FROM Customers_Cards ) ",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT distinct payment_method FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  FROM customers where payment_method  =  \"Credit Card\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  FROM customers where payment_method  =  \"Cash\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count ( * )  FROM customers where payment_method  =  \"Cheque\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm WHERE student_capacity  >  300",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dormid FROM dorm WHERE student_capacity  >  300",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT student_capacity FROM dorm WHERE student_capacity  >  300",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT billing_country ,  COUNT(*) FROM invoices GROUP BY billing_country ORDER BY count(*) DESC LIMIT 5;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count ( * )  DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country,COUNT ( * )  FROM invoices GROUP BY billing_country ORDER BY count ( * )  DESC LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country , COUNT ( * )  FROM invoices GROUP BY billing_country ORDER BY count ( * )  LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_country,billing_postal_code FROM invoices GROUP BY billing_country ORDER BY count ( * )  LIMIT 5",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id  =  T2.category_id JOIN film AS T3 ON T2.film_id  =  T3.film_id WHERE T3.title  =  'HUNGER ROOF'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T3.title   =   'HUNGER ROOF'",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   \"Foreign\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   \"Foreign\" and T3.special_features  =  \"Deleted Scenes\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   \"Foreign\" and T3.special_features  =  \"Trailers\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  FROM category AS T1 JOIN film_category AS T2 ON T1.category_id   =   T2.category_id JOIN film AS T3 ON T2.film_id   =   T3.film_id WHERE T1.name   =   \"Foreign\" and T3.special_features  =  \"Action\"",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT pid FROM Player WHERE pName LIKE '%a%'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( * )  FROM Player WHERE pName LIKE '%a%' and yCard  =  \"yes\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%' and yCard  =  \"yes\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId  =  T2.CustomerId WHERE T1.country  =  \"Brazil\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT FirstName, LastName from Customer where customerid in  ( select customerid from Customer intersect select customerid from Invoice ) ",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT DISTINCT T1.FirstName, T1.customerid FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId   =   T2.CustomerId WHERE T1.country   =   \"Brazil\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T1.dorm_name  =  'Smith Hall' ORDER BY T3.amenity_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall' ORDER BY T3.amenity_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.amenid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Smith Hall' ORDER BY T3.amenity_name",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid  =  901",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid  =  904",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.dormid FROM  has_amenity AS T2 where T2.amenid  =  922",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.Author ,  COUNT(DISTINCT T1.workshop_id) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID GROUP BY T2.Author",
         "databaseID": "workshop_paper"
      },
      {
         "query": "select count ( distinct author )  from submission",
         "databaseID": "workshop_paper"
      },
      {
         "query": "select distinct author from submission",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT T2.Author ,  COUNT ( DISTINCT T1.workshop_id )  FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID   =   T2.Submission_ID GROUP BY T2.Author",
         "databaseID": "workshop_paper"
      },
      {
         "query": "SELECT avg(transaction_amount) ,  sum(transaction_amount) FROM Financial_transactions",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT avg ( transaction_amount )  FROM Financial_transactions",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT  sum ( transaction_amount )  FROM Financial_transactions",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT count ( * )  FROM catalog_contents",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT parent_entry_id FROM catalog_contents where catalog_entry_name  =  \"Cola\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT product_stock_number FROM catalog_contents where catalog_entry_name  =  \"Cream Soda\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t1.product_name   =   \"catnip\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   \"red\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   \"green\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_name, t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code   =   t2.color_code WHERE t2.color_description   =   \"green\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID  =  T2.Workshop_Group_ID WHERE T1.Status_Code  =  \"stop\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   \"stop\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T2.Workshop_Group_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   \"stop\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T2.Address_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID   =   T2.Workshop_Group_ID WHERE T1.Status_Code   =   \"stop\"",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id  =  T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.contract_start_date FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.maintenance_contract_id FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id   =   T2.maintenance_contract_company_id WHERE t2.maintenance_contract_id  =  9",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  =  2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id  =  T2.asset_id GROUP BY T1.asset_id HAVING count(*)  <  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )    =   2 INTERSECT SELECT T1.asset_id ,  T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id   =   T2.asset_id GROUP BY T1.asset_id HAVING count ( * )   <  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT asset_make,asset_model from assets where asset_id  =  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT asset_acquired_date,asset_disposed_date from assets where asset_id  =  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  from assets where other_asset_details  =  \"Bad condition\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT maintenance_contract_id,supplier_company_id from assets where asset_id  =  2",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * )    > =    3",
         "databaseID": "musical"
      },
      {
         "query": "SELECT DISTINcT ( T2.Year )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE T2.musical_ID  =  6",
         "databaseID": "musical"
      },
      {
         "query": "SELECT DISTINCT ( T2.Name )  FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID WHERE T2.musical_ID  =  6",
         "databaseID": "musical"
      },
      {
         "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT count ( * )  from phone",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT count ( distinct carrier )  from phone",
         "databaseID": "phone_market"
      },
      {
         "query": "select phone_id from phone where Carrier  =  'Sprint' or Carrier  =  'TMobile'",
         "databaseID": "phone_market"
      },
      {
         "query": "select phone_id, Name from phone where Carrier  =  'Sprint' or Carrier  =  'TMobile'",
         "databaseID": "phone_market"
      },
      {
         "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID WHERE T2.Age  >  50",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID   =   T2.Host_ID JOIN party AS T3 ON T1.Party_ID   =   T3.Party_ID WHERE T2.Age  >  50",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT number_of_hosts from party where party_theme  =  \"Spring\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT count ( * )  from party where location  =  \"Hemkade 48 Zaandam\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT count ( * )  from host where nationality  =  \"United States\"",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id  =  (SELECT employee_id FROM employees WHERE first_name  =  'Payam' )",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  salary FROM employees WHERE manager_id   =    ( SELECT employee_id FROM employees WHERE first_name   =   'Payam'  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * from employees order by salary desc limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT * from employees order by salary limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id, first_name, last_name from employees where phone_number  =  \"515.123.4569\"",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT first_name, hire_date from employees order by hire_date limit 1",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Date FROM performance",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT Performance_ID FROM performance ORDER BY Attendance DESC LIMIT 1",
         "databaseID": "performance_attendance"
      },
      {
         "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( distinct dept_name )  from  student",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( i_ID )  from advisor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM BOOKINGS",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( distinct status_code )  FROM BOOKINGS",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT status_code FROM BOOKINGS group by status_code order by count ( * )  desc limit 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T2.Party  =  \"Democratic\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Democratic\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Liberal\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Liberal\" and T1.committee  =  \"Appropriations\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Liberal\" and T1.committee  =  \"Economic Matters\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID WHERE T2.Party   =   \"Democratic\" and T1.committee  =  \"Economic Matters\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT title FROM film WHERE LENGTH  >  100 OR rating  =  'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE LENGTH  >  100",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE LENGTH  < =   100",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE rating   =   'PG' EXCEPT SELECT title FROM film WHERE replacement_cost  >  200",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( DISTINCT T2.amenid )  ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T2.Location FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Height DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Country FROM perpetrator where location = 'Kaio'",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT sum ( Killed )  FROM perpetrator where country = 'Japan'",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT sum ( Injured )  FROM perpetrator where country = 'Japan'",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount  >  100",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT distinct city FROM branch",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( branch_id )  FROM branch where city  =  'London'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( Branch_ID )  FROM branch WHERE city  = 'Oxford'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT email_address ,  phone_number FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM complaints)",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count ( * )  FROM complaints",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count ( * )  FROM customers",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count ( * )  FROM customers WHERE customer_id IN  ( SELECT customer_id FROM complaints ) ",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT count ( * )  FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM complaints ) ",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT  phone_number FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM complaints ) ",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT email_address FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM complaints ) ",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM postseason",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT * FROM postseason ORDER BY wins DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.title ,  T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id GROUP BY T2.i_id ORDER BY avg(T2.rating) DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.i_id  FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating )  LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id where rating  =  5",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Fname  from Student  where LName = \"Smith\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"Spanish\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   \"Spanish\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   \"database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   \"advanced database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   \"operating system\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T2.date_of_completion FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id   =   T2.course_id WHERE T1.course_name   =   \"advanced database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT DISTINCT cName FROM college WHERE enr  >  (SELECT min(enr) FROM college WHERE state  =  'FL')",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT SUM ( enr )  FROM college WHERE state  =  'FL'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT cName FROM college WHERE enr  >   ( SELECT min ( enr )  FROM college WHERE state   =   'FL' ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT cName FROM college WHERE enr  >   ( SELECT min ( enr )  FROM college WHERE state   =   'OK' ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT cName FROM college WHERE enr  <   ( SELECT max ( enr )  FROM college WHERE state   =   'OK' ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT cName FROM college WHERE enr  <   ( SELECT max ( enr )  FROM college WHERE state   =   'FL' ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient  =  T2.ssn GROUP BY T1.patient HAVING count(*)  >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM Patient",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name ,  phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient   =   T2.ssn GROUP BY T1.patient HAVING count ( * )   >  1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT sum(settlement_amount) ,  avg(settlement_amount) FROM settlements",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT Settlement_ID, settlement_amount FROM settlements",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT sum ( settlement_amount )  ,  avg ( settlement_amount )  FROM settlements",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT Effective_Date FROM settlements order by Effective_Date limit 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT customer_name ,  customer_phone FROM customers WHERE customer_id NOT IN (SELECT customer_id FROM customer_address_history)",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_name  FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_name ,customer_address FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_name  FROM customers WHERE customer_id NOT IN  ( SELECT customer_id FROM customer_address_history ) ",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT distinct policy_type_code FROM available_policies",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT policy_type_code FROM available_policies where \nPolicy_ID =  257",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT Policy_ID FROM available_policies where policy_type_code =  \"Life Insurance\"",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "insurance_fnol"
      },
      {
         "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(bikes_available)  >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10  ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\" ) ",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id   =   T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available )   >  10 EXCEPT SELECT name FROM station WHERE city  =  \"San Jose\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT Shop_Name FROM shop",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name,T1.Quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name,T1.quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T1.fault_short_name ,  T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id  =  T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id  =  T3.skill_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  FROM skills",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT skill_description FROM skills",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT fault_short_name FROM part_faults",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT skill_code FROM skills where skill_description  =  \"Mechanical\"",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DISTINCT T4.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM Professor WHERE Dept_code  =  \"ACCT\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DISTINCT t3.emp_num )  FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T3.dept_code   =   'ACCT'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( DISTINCT t3.emp_num )  FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T3.dept_code   =   'ACCT'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN professor AS T3 ON T2.emp_num   =   T3.emp_num JOIN department AS T4 ON T4.dept_code   =   T3.dept_code WHERE T4.dept_name   =   'Accounting'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T1.gender  =  \"Female\" AND T2.languages  =  \"bangla\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM artist",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name, rating FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name, languages FROM song",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN (SELECT student_id FROM student_course_attendance)",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT * FROM student_course_registrations WHERE student_id NOT IN  ( SELECT student_id FROM student_course_attendance ) ",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT * FROM student_course_registrations WHERE student_id IN  ( SELECT student_id FROM student_course_attendance ) ",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT registration_date FROM student_course_registrations",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT airport_name, international_passengers FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT airport_name FROM airport order by international_passengers desc limit 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT * from airport where airport_name  =  \"London Heathrow\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT(*)  >=  3",
         "databaseID": "musical"
      },
      {
         "query": "SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID   =   T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * )   >  3",
         "databaseID": "musical"
      },
      {
         "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  T1.fname ,  T1.lname ,  count ( * )  ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.FacID",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  count ( * )  FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID   =   T2.facID GROUP BY T1.Fname  =  \"Naiman\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num WHERE T2.prof_office  =  'DRE 102'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.emp_lname ,  T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num WHERE T2.prof_office   =   'DRE 102'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.emp_lname , T2.prof_high_degree FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num WHERE T2.prof_office   =   'DRE 102'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE name LIKE '%dar%'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE dept_name = 'Statistics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( ID )  FROM instructor",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT salary FROM instructor where id = 78699",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor where name = 'McKinnon'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student WHERE dept_name  =  'History' ORDER BY tot_cred DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student WHERE dept_name   =   'History' ORDER BY tot_cred DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( name )  FROM student WHERE dept_name   =   'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( tot_cred )  FROM student WHERE dept_name   =   'History'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT min(bathroom_count) ,  max(bathroom_count) FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM Apartments WHERE apt_number  =  \"Suite 645\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT building_id FROM Apartments WHERE apt_number  =  \"Apt. 585\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT min ( bathroom_count )  ,  max ( bathroom_count )  FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id  =  T2.people_id WHERE T1.snatch  >  140 OR T2.height  >  200;",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id   =   T2.people_id",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT HEIGHT FROM PEOPLE WHERE NAME  =  \"Jack Campbell\"",
         "databaseID": "body_builder"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg(salary) DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  DESC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT avg ( salary )  FROM instructor WHERE dept_name  =  'Physics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary )  ASC LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid  =  t2.instid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.country ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )   LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid GROUP BY t1.country ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t1.country,count ( * )  FROM inst AS t1 JOIN authorship AS t2 ON t1.instid   =   t2.instid JOIN papers AS t3 ON t2.paperid   =   t3.paperid where country  =  \"USA\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id  =  T2.enzyme_id WHERE T2.interaction_type  =  'activitor' GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id WHERE name  =  \"ALA synthase\"",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT product FROM enzyme where  id  =  1",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T1.id ,  T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id   =   T2.enzyme_id WHERE T2.interaction_type   =   'activitor' GROUP BY T1.id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id  =  T2.member_in_charge_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT distinct member_name FROM member",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT distinct member_name, T2.Event_Name FROM member as T1 join party_events as T2 on T1.Member_ID = T2.Member_in_charge_ID",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id   =   T2.member_in_charge_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT * ,  count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id HAVING count ( * )    > =    2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.customer_name  = \"George\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id where T2.customer_name  = \"Beulah\"",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count(*) ,  dept_code FROM professor WHERE prof_high_degree  =  'Ph.D.' GROUP BY dept_code",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  from professor where DEPT_CODE  =  \"ENG\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT dept_code from professor where emp_num  =  103",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_id FROM Transactions_Lots WHERE lot_id  =  11",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.investor_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id  =  T2.lot_id WHERE T2.transaction_id  =  3",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT card_number FROM member WHERE Hometown LIKE \"%Kentucky%\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Name FROM member WHERE Hometown LIKE \"%Kentucky%\"",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT Card_Number FROM member",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT COUNT ( * )  FROM member",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\" AND T2.staff_last_name = \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Ashley\" AND T2.staff_last_name = \"Medhurst\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Christop\" AND T2.staff_last_name  =  \"Berge\" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id  =  T2.staff_id WHERE T2.staff_first_name  =  \"Ashley\" AND T2.staff_last_name  =  \"Medhurst\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT count ( * )  from Staff",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code  =  T2.document_type_code JOIN Grants AS T3 ON T1.grant_id  =  T3.grant_id WHERE T2.document_description  =  'Regular' OR T3.grant_amount  >  100",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description   =   'Regular'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T3.grant_amount  >  100",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( * )  FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T3.grant_start_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T3.grant_amount FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code   =   T2.document_type_code JOIN Grants AS T3 ON T1.grant_id   =   T3.grant_id WHERE T2.document_description  =  'Initial Application'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT credits FROM course WHERE title  =  \"C Programming\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM student",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T2.party_name ,  count(*) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id  =  T2.party_id GROUP BY T1.party_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT count ( * )  FROM Party",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT party_name FROM party",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT T2.party_name ,  count ( * )  FROM party_events AS T1 JOIN party AS T2 ON T1.party_id   =   T2.party_id GROUP BY T1.party_id",
         "databaseID": "party_people"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT(*) ASC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT avg ( amount_of_transaction )  FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100 GROUP BY T2.bname ORDER BY sum(T1.amount) DESC LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.bname, max ( T1.amount )  FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id   =   T2.branch_id JOIN customer AS T3 ON T1.cust_id   =   T3.cust_id GROUP BY T2.bname",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.credit_score FROM loan AS T1 JOIN customer AS T2 ON T1.cust_id   =   T2.cust_id ORDER BY T1.amount DESC limit 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id   =   T2.branch_id JOIN customer AS T3 ON T1.cust_id   =   T3.cust_id GROUP BY T2.bname ORDER BY sum ( T1.amount )  DESC limit 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = \"statistics\" ORDER BY T2.date_of_attendance",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT course_id FROM courses where course_name  =  \"English\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"statistics\" ORDER BY T2.date_of_attendance",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"English\" intersect SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id  =  T2.course_id WHERE T1.course_name  =  \"French\"",
         "databaseID": "student_assessment"
      },
      {
         "query": "SELECT T1.staff_name ,  T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id  =  T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id  =  T3.engineer_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( T3.first_name )  FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id   =   T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id   =   T3.engineer_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T3.first_name ,  T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id   =   T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id   =   T3.engineer_id",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count(*)  >=  5",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count ( * )    > =    5",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_id FROM Customers_cards",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards where customer_id = 14",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT card_type_code FROM Customers_cards where customer_id = 6",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID  =  T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID  =  T2.Address_ID",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID   =   T2.Address_ID",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT distinct T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID   =   T2.Address_ID",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID   =   T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID   =   T2.Address_ID",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count  >=  100 OR amount_of_transaction  >=  100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count, amount_of_transaction FROM TRANSACTIONS",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT share_count, amount_of_transaction FROM TRANSACTIONS where share_count  > =   100 or amount_of_transaction  > =   100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction,share_count, amount_of_transaction FROM TRANSACTIONS where share_count  > =   100 or amount_of_transaction  > =   100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count   > =    100 OR amount_of_transaction   > =    100",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT COUNT(*) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId WHERE T1.Name  =  \"AAC audio file\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( distinct composer )  from track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId WHERE T1.Name   =   \"MPEG audio file\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "select max ( Milliseconds )  from track",
         "databaseID": "chinook_1"
      },
      {
         "query": "select name from track order by milliseconds desc limit 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "select albumid from track where name  =  \"Occupation / Precipice\"",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id",
         "databaseID": "e_learning"
      },
      {
         "query": "select subject_name from subjects",
         "databaseID": "e_learning"
      },
      {
         "query": "select author_id from courses",
         "databaseID": "e_learning"
      },
      {
         "query": "select course_id from courses",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select Tourist_Attraction_ID,Location_ID,Name from Tourist_Attractions where How_to_Get_There = 'bus'",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select Location_ID from Tourist_Attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "select Location_ID,Attraction_Type_Code from Tourist_Attractions",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT director FROM Movie GROUP BY director HAVING count(*)  =  1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT COUNT ( DISTINCT director )  FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM  ( SELECT director FROM Movie GROUP BY director HAVING count ( * )   =  1 ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director FROM Movie GROUP BY director HAVING count ( * )   =  1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT name ,  email FROM user_profiles WHERE name LIKE '%Swift%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT email FROM user_profiles WHERE name LIKE '%Swift%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles WHERE name LIKE '%Swift%'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T3.product_name ,  count(*) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  from products",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  from orders",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT product_name from products where product_id  =  1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT count ( * )  FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID JOIN Products AS T3 ON T2.Product_ID   =   T3.Product_ID WHERE T3.Product_price  >  1000",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Planned_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price > 1000",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T1.Capital  =  \"Dublin\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id   =   T2.Country WHERE T1.Capital   =   \"Dublin\"",
         "databaseID": "match_season"
      },
      {
         "query": "SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT payment_method FROM customers WHERE customer_name  =  \"Dr. Julia Wuckert MD\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT COUNT ( customer_id )  FROM customers WHERE payment_method  =  \"Credit Card\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.active_from_date FROM Customer_Contact_Channels AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_name  =  \"Rodrick Heaney\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT count(*) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction );",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT count ( * )  FROM enzyme WHERE id NOT IN  (  SELECT enzyme_id FROM medicine_enzyme_interaction  ) ",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "select name from enzyme order by name",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "select distinct name from enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE interaction_type = 'inhibitor'",
         "databaseID": "medicine_enzyme_interaction"
      },
      {
         "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT Lieutenant_Governor FROM party WHERE year  =  \"1998.0\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT Delegate FROM election WHERE Election_ID  =  \"1\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party   =   T2.Party_ID GROUP BY T1.Party ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id  =  T2.guest_id WHERE T2.gender_code  =  \"Female\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT guest_id FROM Guests WHERE gender_code   =   \"Female\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T2.gender_code   =   \"Female\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.booking_start_date ,  T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T2.gender_code   =   \"Female\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.apt_id FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id   =   T2.guest_id WHERE T2.gender_code   =   \"Female\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count(*) ASC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT category FROM hall_of_fame where yearid = 1944",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( votes )   FROM hall_of_fame where category = \"Pioneer/Executive\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T1.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Patient FROM Appointment WHERE Start  =  '2008-04-24 10:00'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Patient FROM Appointment WHERE AppointmentID  =  93216548 OR AppointmentID  =  86213939",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT ( T1.name )  FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn  =  T2.patient WHERE T2.patient  =  100000004 OR T2.patient  =  100000002",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT u_id FROM useracct where name = \"Helen\"",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.rating FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.i_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.a_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id where T1.name  =  'Helen'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT count ( * )  FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id WHERE T1.name = 'Mark'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT u_id FROM useracct WHERE name = 'Mark'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T2.a_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id WHERE T1.name = 'Mark'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' EXCEPT SELECT title FROM course WHERE dept_name  =  'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name   =   'Statistics'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name   =   'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE dept_name   =   'Statistics' EXCEPT SELECT title FROM course WHERE dept_name   =   'Psychology'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id  =  T2.course_id WHERE building  =  'Chandler' AND semester  =  'Fall' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler'",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler' AND semester  =  'Fall' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT credits FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id   =   T2.course_id WHERE building   =   'Chandler' AND semester  =  'Fall' AND YEAR  =  2010",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id  =  T2.campus WHERE T2.year  =  2003 ORDER BY T2.faculty DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT campus FROM campuses where id  =  '1'",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   T2.campus WHERE T2.year   =   2003 ORDER BY T2.faculty  LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id   =   T2.campus WHERE T2.year   =   2003 ORDER BY T2.faculty DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  2 AND T2.product_price  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( T2.product_price )  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 AND T2.product_price  >   ( SELECT avg ( T2.product_price )  FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id   =   T2.product_id WHERE T1.supplier_id   =   2 ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT count ( DISTINCT customer_name )  FROM Customers WHERE payment_method  =  'Visa'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_name FROM Customers WHERE payment_method  =  'Visa'",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5",
         "databaseID": "customer_deliveries"
      },
      {
         "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM trip WHERE zip_code   =   94002",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT bike_id FROM trip WHERE zip_code   =   94002 GROUP BY bike_id ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM trip WHERE zip_code   =   94002 and bike_id = '252'",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age  < =   23",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age   > =   24",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT count ( weeks_on_top )  FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID   =   T2.Artist_ID WHERE T1.age   > =   24",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DISTINCT T1.EMP_FNAME FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM   =   T2.PROF_NUM WHERE CRS_CODE   =   \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT DISTINCT T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM   =   T2.PROF_NUM WHERE CRS_CODE   =   \"ACCT-211\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.uid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1 order by T1.name",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT count ( id )  FROM buildings",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT count ( * ) , T1.company_id,  T1.building_id FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.building_id",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T1.company_id,  count ( distinct T1.building_id )  FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.company_id",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T1.company_id,  t3.name, count ( distinct T1.building_id )  FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id   =   T2.id JOIN Companies AS T3 ON T1.company_id   =   T3.id GROUP BY T1.company_id",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM Person WHERE job  =  'student' AND age  =  (SELECT max(age) FROM person WHERE job  =  'student' )",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name FROM Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name, job FROM Person",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name, job FROM Person WHERE job  =  'student'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name, job FROM Person WHERE job  =  'student' ORDER BY age DESC LIMIT 1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = \"Rock\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( T2.id )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Rock\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Rock\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT avg ( T2.unit_price )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Rock\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( T2.name )  FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Jazz\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.milliseconds FROM genres AS T1 JOIN tracks AS T2 ON T1.id  =  T2.genre_id WHERE T1.name  =  \"Rock\" and T2.name  =  'Balls to the Wall'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT phone ,  room ,  building FROM Faculty WHERE Fname  =  \"Jerry\" AND Lname  =  \"Prince\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT phone FROM Faculty WHERE Fname   =   \"Jerry\" AND Lname   =   \"Prince\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT room FROM Faculty WHERE Fname   =   \"Jerry\" AND Lname   =   \"Prince\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT building  FROM Faculty WHERE Fname   =   \"Jerry\" AND Lname   =   \"Prince\"",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT name FROM captain WHERE rank  =  'Midshipman' OR rank  =  'Lieutenant'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Rank FROM captain WHERE name like '%Conway%'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT avg ( age )  FROM captain WHERE Rank  =  'Midshipman'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Class FROM captain WHERE name  =  'Lieutenant Hugh Bolitho'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( DISTINCT t1.title )  FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT count ( DISTINCT t1.title )  FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Oxford\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT t3.name,count ( DISTINCT t1.title )  FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid group by t3.name",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT Publisher FROM publication WHERE Price  >  10000000 INTERSECT SELECT Publisher FROM publication WHERE Price  <  5000000",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT count ( distinct Publisher )  FROM publication",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT Publisher, Price FROM publication WHERE Price  >  10000000 or Price  <  5000000",
         "databaseID": "book_2"
      },
      {
         "query": "SELECT name FROM stadium WHERE capacity  <  (SELECT avg(capacity) FROM stadium)",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT avg ( capacity )  FROM stadium",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT count ( * )  FROM stadium where capacity <  ( SELECT avg ( capacity )  FROM stadium ) ",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name  FROM stadium where capacity <  ( SELECT avg ( capacity )  FROM stadium ) ",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT avg(room_count) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.booking_status_code  =  \"Provisional\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT avg ( room_count )  FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T1.booking_status_code   =   \"Provisional\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT * FROM Apartments where bathroom_count > 1 and bedroom_count > 3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT * FROM Apartments order by bedroom_count desc limit 1",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM apartment_bookings where booking_start_date like \"%2016%\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count ( * )  FROM apartment_bookings as T1 join apartments as T2 on T1.apt_id  =  T2.apt_id where T1.booking_start_date like \"%2016%\" and T2.apt_type_code  =  \"Studio\"",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.balance ,  T3.balance ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance DESC",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT name from  ACCOUNTS",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid   =   T2.custid JOIN savings AS T3 ON T1.custid   =   T3.custid ORDER BY T2.balance + T3.balance DESC",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT document_name FROM documents WHERE document_name LIKE \"%CV%\"",
         "databaseID": "document_management"
      },
      {
         "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.attribute_value  =  (SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count(*) DESC LIMIT 1)",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id   =   t2.catalog_entry_id WHERE t2.attribute_value   =    ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t1.product_stock_number FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id   =   t2.catalog_entry_id WHERE t2.attribute_value   =    ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * )  DESC LIMIT 1 ) ",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "select * from products",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT * FROM order_items AS t1 JOIN products AS t2 ON t1.product_id   =   t2.product_id GROUP BY t1.product_id ORDER BY sum ( order_quantity )  DESC",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT Fname FROM STUDENT WHERE StuID NOT IN (SELECT StuID FROM ENROLLED_IN)",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( * )  FROM STUDENT WHERE StuID NOT IN  ( SELECT StuID FROM ENROLLED_IN ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Fname FROM STUDENT WHERE StuID IN  ( SELECT StuID FROM ENROLLED_IN ) ",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count(*) FROM rooms WHERE roomid NOT IN (SELECT DISTINCT room FROM reservations)",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT DISTINCT room FROM reservations",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT avg ( beds )  FROM rooms WHERE roomid IN  ( SELECT DISTINCT room FROM reservations ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT avg ( beds )  FROM rooms WHERE roomid NOT IN  ( SELECT DISTINCT room FROM reservations ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT count ( * )  FROM rooms WHERE roomid NOT IN  ( SELECT DISTINCT room FROM reservations ) ",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Age FROM Student WHERE Fname  =  \"Linda\" AND Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Fname, Lname FROM Student ORDER BY age DESC LIMIT 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Advisor FROM Student ORDER BY age  LIMIT 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT count(*) ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T2.name  =  'Boston Red Stockings' GROUP BY T1.year",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  ,  T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner   =   T2.team_id_br WHERE T2.name   =   'Boston Red Stockings' GROUP BY T1.year",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT team_id_winner  FROM postseason",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT team_id_loser FROM postseason",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id  =  t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT t1.address_line_1, t1.address_line_2 FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id   =   t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1",
         "databaseID": "customer_complaints"
      },
      {
         "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "select appointmentid from appointment order by start desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "select patient from appointment order by start desc limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn  =  T2.patient ORDER BY T2.start DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT * FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'omnis'",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "select count ( * )  from  ( SELECT T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'omnis' intersect SELECT T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id   =   T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.project_id HAVING count ( * )   >  2 ) ",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( T2.project_id )  FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id   =   T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.project_id HAVING count ( * )   >  2",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code  =  T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Service_Type_Description  FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Parent_Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code   =   T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg(room_count) DESC LIMIT 3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT room_count FROM Apartments order by room_count DESC LIMIT 3",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code, avg ( bathroom_count ) , avg ( bedroom_count ) , avg ( room_count )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code, avg ( room_count )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code, avg ( room_count )  FROM Apartments GROUP BY apt_type_code order by avg ( room_count )  desc",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments GROUP BY apt_type_code order by avg ( room_count )  desc",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T1.customer_id  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_first_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT T2.customer_last_name  FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_invoices"
      },
      {
         "query": "SELECT avg(T1.HS) ,  max(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT cName FROM Tryout WHERE decision  =  \"yes\"",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( T1.HS )  ,  max ( T1.HS )  FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision   =   'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( T1.HS )  ,  max ( T1.HS ) , T1.pid, T2.cname FROM player AS T1 JOIN tryout AS T2 ON T1.pID   =   T2.pID WHERE T2.decision   =   'yes'",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT city FROM stadium where name  =  \"Nou Mestalla\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT country FROM stadium where name  =  \"Nou Mestalla\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM orders",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT date_order_placed FROM orders where order_id  =  2",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT count ( * )  FROM Order_Items",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT count ( * )  FROM furniture",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID   =   t2.Furniture_ID order by T2.Price_in_Dollar  desc limit 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT Num_of_Component FROM furniture order by Num_of_Component  desc limit 1",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp3\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT resolution from song where song_name  = \"Just beat it\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id WHERE T1.formats   =   \"mp4\" INTERSECT SELECT song_name FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT resolution from song where song_name  =  'Aj ei akash'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT song_name from song order by resolution desc limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT resolution from song where song_name  = 'Tumi robe nirobe'",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.name ,  avg(T1.stars) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID GROUP BY T2.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.name ,  avg ( T1.stars )  FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID GROUP BY T2.name ORDER BY avg ( T1.stars )  ASC",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T2.name  =  \"Brittany Harris\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T1.mID, T1.ratingDate FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T2.name  =  \"Brittany Harris\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( T1.stars )  FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID   =   T2.rID WHERE T2.name  =  \"Brittany Harris\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.year FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T2.park_name  =  \"Riverside Park\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.park_name FROM park as t2 WHERE T2.city  =  \"Anaheim\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT sum ( T1.attendance )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T2.park_name  =  \"Columbia Park\"",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T1.year  =  2008 ORDER BY T1.attendance DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT school FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT location FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT enrollment FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT nickname FROM university ORDER BY enrollment DESC LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count(*) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos )",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT count ( * )  FROM camera_lens WHERE id NOT IN  (  SELECT camera_lens_id FROM photos  ) ",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT name FROM camera_lens WHERE id NOT IN  (  SELECT camera_lens_id FROM photos  ) ",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT max_aperture FROM camera_lens WHERE name  =  \"Olympus M.Zuiko Digital ED 45mm f/1.8\"",
         "databaseID": "mountain_photos"
      },
      {
         "query": "SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id  =  T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id  =  T3.transaction_id WHERE T3.share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T1.lot_id, T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT Count ( T1.lot_id )  FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id   =   T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id   =   T3.transaction_id WHERE T3.share_count  <  50",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major, count ( * )  FROM STUDENT GROUP BY major",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT distinct ( Major )  FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major, LName FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major, FName FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name FROM files ORDER BY duration DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT duration FROM files ORDER BY duration DESC LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT duration FROM files ORDER BY duration LIMIT 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT avg ( duration )  FROM files",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Poll_Source FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Date FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Unsure_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Consider_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Oppose_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT Date_Claim_Made ,  Date_Claim_Settled FROM Claims WHERE Amount_Claimed  >  ( SELECT avg(Amount_Claimed) FROM Claims )",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT claim_id, amount_claimed FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT claim_id FROM Claims WHERE Amount_Claimed  >   (  SELECT avg ( Amount_Claimed )  FROM Claims  ) ",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT claim_id FROM Claims order by amount_claimed desc limit 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT count(*) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH  >  3000 )",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT max ( Length )  FROM roller_coaster",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT * FROM roller_coaster order by Speed desc limit 1",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Height FROM roller_coaster where Name = 'Boardwalk Bullet'",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID  =  T2.Event_ID GROUP BY T1.Event_ID HAVING count(*)  >  1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT T1.event_id ,  T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID   =   T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * )   >  1",
         "databaseID": "local_govt_in_alabama"
      },
      {
         "query": "SELECT avg(T1.stars) ,  T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =  (SELECT min(YEAR) FROM Movie)",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT ratingDate FROM Rating WHERE mID  =  101",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year FROM Movie WHERE title  =  \"The Sound of Music\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director FROM Movie WHERE title  =  \"Star Wars\"",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT avg ( T1.stars )  , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE T2.year  =   ( SELECT min ( YEAR )  FROM Movie ) ",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 1",
         "databaseID": "election"
      },
      {
         "query": "SELECT population FROM county where county_name  =  \"Baltimore County\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT zip_code FROM county where county_name  =  \"Baltimore County\"",
         "databaseID": "election"
      },
      {
         "query": "SELECT customer_id ,  count(*) FROM Customers_cards GROUP BY customer_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT  count ( * )  FROM Customers_cards",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id , count ( * )  FROM Customers_cards GROUP BY customer_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT test_result ,  COUNT(*) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT(*) DESC",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( * )  FROM Student_Tests_Taken where test_result = 'Fail'",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT count ( * )  FROM Student_Tests_Taken where test_result = 'Pass'",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT test_result ,  COUNT ( * )  FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT ( * )  DESC",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT registration_id FROM Student_Tests_Taken where test_result = 'Pass'",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT mascot FROM school WHERE enrollment  >   ( SELECT avg ( enrollment )  FROM school ) ",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT mascot FROM school WHERE enrollment  >   ( SELECT avg ( enrollment )  FROM school ) ",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT max(booked_count) ,  min(booked_count) ,  avg(booked_count) FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT max ( booked_count )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT max ( booked_count )  ,  min ( booked_count )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT max ( booked_count )  ,  min ( booked_count )  ,  avg ( booked_count )  FROM products_booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.date_incident_start ,  date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.last_name  =  \"Fahey\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.date_incident_start  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   \"Fahey\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T1.incident_type_code  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   \"Fahey\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.date_left_university  FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id   =   T2.student_id WHERE T2.last_name   =   \"Fahey\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT count ( * )  from Behavior_Incident  where incident_type_code = \"VIOLENCE\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.first_name , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T1.incident_type_code  =  \"VIOLENCE\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall' AND T1.sex  =  'F'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid WHERE T3.dorm_name   =   'Smith Hall'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT count ( * )  FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid   =   T2.stuid JOIN dorm AS T3 ON T3.dormid   =   T2.dormid WHERE T3.dorm_name   =   'Smith Hall' AND T1.sex   =   'F'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.outcome_code  =  'No Response'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'Order' INTERSECT SELECT T2.customer_name ,  T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id   =   T2.customer_id WHERE T1.outcome_code   =   'No Response'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "select count ( * )  from customers where payment_method  =  \"Credit Card\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "select * from customers where payment_method  =  \"Direct Debit\"",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type  =  'Friendly'",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly'",
         "databaseID": "sports_competition"
      },
      {
         "query": "select count ( * )  from  ( SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type   =   'Friendly' ) ",
         "databaseID": "sports_competition"
      },
      {
         "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID  =  T2.Tourist_ID WHERE T1.Tourist_Details  =  \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Date  FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Vincent\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Visit_Date  FROM visits where visit_date < \"2013-01-01 00:00:00\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Toney\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Visit_Date ,  T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID   =   T2.Tourist_ID WHERE T1.Tourist_Details   =   \"Graciela\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT count ( * )  FROM Customers",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_first_name FROM Customers",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T2.card_number from  Customers as T1 JOIN Customers_Cards as T2 ON T1.customer_id  =  T2.customer_id WHERE customer_first_name  =  \"Aniyah\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT max ( Transit_Passengers )  FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT min ( Transit_Passengers )  FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT  avg ( Domestic_Passengers )  FROM airport",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Airport_Name  FROM airport order by International_Passengers desc  limit 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( * )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname   =   \"KAWA\" AND T2.lastname   =   \"GORDON\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( * )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE T2.firstname  like \"%MIN%\" AND T2.lastname  like  \"%MACROSTIE%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T2.firstname, T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname like \"%STORMY%\" AND T1.lastname like \"%CHRISTENSEN%\"",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id  =  T2.artist_id WHERE T1.name LIKE '%Led%'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from albums",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  from artists where id in  ( select artist_id from albums ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM artists AS T1 JOIN albums AS T2 ON T1.id   =   T2.artist_id WHERE T1.name LIKE '%Led%'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id   =   T2.artist_id WHERE T1.name LIKE '%Led%'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT Name FROM editor ORDER BY Age ASC LIMIT 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT age FROM editor ORDER BY Age ASC LIMIT 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT name FROM editor ORDER BY Age ASC LIMIT 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT name FROM editor ORDER BY Age desc LIMIT 1",
         "databaseID": "journal_committee"
      },
      {
         "query": "SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID WHERE T1.White  >  90",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT MAX ( Population )  FROM county_public_safety",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT COUNT ( Location )  FROM county_public_safety",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Crime_rate FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT friend from personfriend where name = 'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age FROM Person AS T1 where name =  ( select friend from personFriend where name = 'Alice' ) ",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM(T1.quantity) DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.location FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT T2.shop_id FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID   =   T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity )  DESC LIMIT 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT Age FROM people ORDER BY Height DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "select max ( Height )  from people",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT name FROM people ORDER BY Height DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT age FROM people ORDER BY Height DESC LIMIT 1",
         "databaseID": "gymnast"
      },
      {
         "query": "SELECT avg(enrollment) ,  max(enrollment) ,  min(enrollment) FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT avg ( enrollment )  FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT max ( enrollment )  FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT min ( enrollment )  FROM school",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT School_name FROM school order by Enrollment desc limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT School_name FROM school order by Enrollment  limit 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms   > =    15",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT DISTINCT LOCATION FROM station WHERE total_passengers  >  25",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms   =   19",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT department_name ,  COUNT(*) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_name FROM departments",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT department_name , COUNT ( * )  FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id GROUP BY department_name",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.' OR prof_high_degree  =  'MA'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor WHERE prof_high_degree   =   'Ph.D.' OR prof_high_degree   =   'MA'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor where prof_high_degree  =  'Ph.D.'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM physician",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT SSN FROM physician where name  =  'John Dorian'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM physician where EmployeeID  =  2",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid  =  T2.physician ORDER BY T2.dose DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count ( * )  from Customer_Orders",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT customer_id from Customer_Orders WHERE order_id  =  2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT order_date from Customer_Orders WHERE order_id  =  1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT age FROM Person WHERE job  =  'doctor' AND name  =  'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT city from person where name  =  \"Alice\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT gender from person where name  =  \"Alice\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT job from person where name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age from person where name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT city from person where name  =  \"Bob\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  from person where gender  =  \"male\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT name from person order by age desc limit 1",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT age from person where name  =  \"Zach\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT count ( * )  from person where gender  =  \"male\" and job  =  \"engineer\"",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid ORDER BY T2.balance DESC LIMIT 3",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance DESC LIMIT 3",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name , T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid ORDER BY T2.balance DESC LIMIT 3",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT avg ( T2.balance )  FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid   =   T2.custid order by T2.balance desc limit 3",
         "databaseID": "small_bank_1"
      },
      {
         "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
         "databaseID": "hospital_1"
      },
      {
         "query": "select count ( * )  from Physician",
         "databaseID": "hospital_1"
      },
      {
         "query": "select Name from Physician",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Position FROM physician WHERE POSITION LIKE '%senior%'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT max(Weeks_on_Top) ,  min(Weeks_on_Top) FROM volume",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT max ( Weeks_on_Top )  FROM volume",
         "databaseID": "music_4"
      },
      {
         "query": "select count ( * )  from volume where weeks_on_top  =  3.0",
         "databaseID": "music_4"
      },
      {
         "query": "select song from volume where weeks_on_top  =  3.0",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT min ( Weeks_on_Top )  FROM volume",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT count ( * )  FROM volume where weeks_on_top  =  1.0",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Artist_ID from volume group by artist_id having count ( * )  > =  2",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT sum(Enrollment) ,  affiliation FROM university WHERE founded  >  1850 GROUP BY affiliation",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT sum ( Enrollment )   FROM university",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT sum ( Enrollment )   FROM university  WHERE founded > 1850",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT affiliation, sum ( Enrollment )   FROM university  WHERE founded > 1850 GROUP BY affiliation",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count ( * )  FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid WHERE T2.country  =  'Italy'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid  =  T3.amenid WHERE T3.amenity_name  =  'Study Room'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT dorm_name FROM dorm",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'Study Room'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name,T1.gender FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'TV Lounge' EXCEPT SELECT T1.dorm_name,T1.gender FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T3.amenity_name   =   'Study Room'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT T1.dorm_name,T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid   =   T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid   =   T3.amenid WHERE T1.dorm_name   =   'Fawlty Towers'",
         "databaseID": "dorm_1"
      },
      {
         "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.title  =  'Mobile Computing')",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT title FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id   =   T2.course_id WHERE T2.title   =   'Mobile Computing' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name FROM course WHERE course_id IN  ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id   =   T2.course_id WHERE T2.title   =   'Mobile Computing' ) ",
         "databaseID": "college_2"
      },
      {
         "query": "select count ( * )  from course where dept_name  =  \"History\"",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid   =   T2.physician JOIN procedures AS T3 ON T3.code   =   T2.treatment WHERE T1.name   =   \"John Wen\"",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count(*)  >  3",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT chip_model, Company_name FROM phone where screen_mode>2",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count ( * )   >  3",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT apt_type_code ,  max(room_count) ,  min(room_count) FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code ,  max ( room_count )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code ,  min ( room_count )  FROM Apartments GROUP BY apt_type_code",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT apt_type_code FROM Apartments where building_id  =  808",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT avg ( age )  FROM HOST",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT name FROM HOST order by age limit 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Nationality FROM HOST group by Nationality order by count ( * )  desc limit 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT product_id FROM products_booked GROUP BY product_id HAVING count(*)  =  3",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT COUNT ( DISTINCT product_id )  FROM Products_Booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT MAX ( booked_amount )  FROM Products_Booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT MIN ( booked_count )  FROM Products_Booked",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT product_id FROM Products_Booked WHERE booked_count  =  5",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id GROUP BY T1.Claim_id HAVING count(*)  >  2 UNION SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id  =  T2.Claim_id WHERE T1.Amount_Claimed  =  ( SELECT max(Amount_Claimed) FROM Claims )",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id GROUP BY T1.Claim_id HAVING count ( * )   >  2",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.Date_Claim_Made ,  T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.Date_Claim_made FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT T1.Date_Claim_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id   =   T2.Claim_id order by T1.Amount_Claimed desc limit 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid JOIN inst AS t4 ON t2.instid  =  t4.instid WHERE t4.country  =  \"Japan\" AND t2.authorder  =  1 AND t1.lname  =  \"Ohori\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT fname, lname FROM authors where lname   =   \"Ohori\"",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT authID FROM authors where lname   =   \"Ohori\" and fname  =  'Atsushi'",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT paperID FROM Authorship where authID  =  57",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT title FROM Papers where paperID  =  204",
         "databaseID": "icfp_1"
      },
      {
         "query": "SELECT avg(age) ,  min(age) FROM artist WHERE country  =  'United States'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT age from artist where country  =  \"United States\"",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT avg ( age )  from artist where country  =  'United States'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT min ( age )  from artist where country  =  'United States'",
         "databaseID": "theme_gallery"
      },
      {
         "query": "SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  =  11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT count ( * )  from drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )    =   11 INTERSECT SELECT T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid HAVING count ( * )   >  5 ) ",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid   =   T2.driverid GROUP BY T1.driverid order by count ( * )  desc limit 1",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count(*) DESC LIMIT 2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2 except SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT store_name FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT store_address FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT store_email FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * )  DESC LIMIT 2",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.Document_Type_Code FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.Project_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%s%'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id   =   T2.document_id WHERE T1.document_name LIKE '%a%'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO  =  T2.DNO WHERE T1.CName  =  \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.Dname ,  T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Instructor FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Days FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Hours FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Credits FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO   =   T2.DNO WHERE T1.CName   =   \"INTRODUCTION TO COMPUTER SCIENCE\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Weight DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT killed FROM perpetrator WHERE Country = \"South Korea\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID   =   T2.People_ID ORDER BY T1.Weight DESC LIMIT 1",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT Location FROM perpetrator WHERE Country = \"Japan\"",
         "databaseID": "perpetrator"
      },
      {
         "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id  =  T2.id WHERE T2.nationality  =  'American' OR T2.nationality  =  'Canadian'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT count ( * )  FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE T2.nationality   =   'American'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT count ( * )  FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE  T2.nationality   =   'Canadian'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id   =   T2.id WHERE T2.nationality   =   'American' OR T2.nationality   =   'Canadian'",
         "databaseID": "architecture"
      },
      {
         "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT avg ( t3.age )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( * )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Bootup Baltimore\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT T3.FName, T3.LName FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t1.clubname   =   \"Bootup Baltimore\" AND t2.Position  =  \"President\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age  <  30 GROUP BY t2.winning_pilot ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT distinct t1.pilot_id FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id   =   t2.winning_pilot",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT date_became_customer FROM customers where customer_name in  ( SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT distinct t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id   =   t2.customer_id where t2.order_status  =  \"Cancelled\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.Allergy FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student AS T3 ON T3.StuID   =   T2.StuID WHERE T3.Fname   =   \"Lisa\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT T1.Allergy  FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy   =   T2.Allergy JOIN Student AS T3 ON T3.StuID   =   T2.StuID WHERE T3.Fname   =   \"Lisa\" AND T1.AllergyType  =  \"food\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT sum(total_pounds) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id WHERE T2.city  =  'London' AND T1.year  =  2018",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT sum ( total_pounds )  FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id   =   T2.branch_id WHERE T2.city   =   'London' AND T1.year   =   2018",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( * )  FROM  branch WHERE city   =   'London'",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT f_id FROM files WHERE formats  =  \"mp4\" INTERSECT SELECT f_id FROM song WHERE resolution  <  1000",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT count ( distinct f_id )  FROM files",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.country from files as T1 join song as T2 on T1.f_id  =  T2.f_id where T1.artist_name  =  \"Shrikanta\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT artist_name from song order by rating desc limit 1",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT languages, genre_is from song where artist_name  =  \"Prity\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT file_size from files where artist_name  =  \"Farida\"",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT T2.Railway_ID ,  T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  asc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  desc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID   =   T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * )  desc limit 1",
         "databaseID": "railway"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( distinct name  ) from aircraft",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid GROUP BY T1.aid ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid  =  T1.aid where T2.name = \"Boeing 747-400\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distance from Aircraft where name = \"Boeing 747-400\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distance from Aircraft where name = \"Boeing 737-800\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT dept_name FROM department ORDER BY budget LIMIT 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name,budget FROM department",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name,budget FROM department order by budget limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT dept_name,building, budget FROM department order by budget limit 1",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name ,  TYPE ,  flag FROM ship ORDER BY built_year DESC LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count ( * )  FROM ship",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Name FROM ship where Ship_ID = 2",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Built_Year FROM ship where Ship_ID = 3",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT class FROM ship where Ship_ID = 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT flag FROM ship where Ship_ID = 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_officers FROM county_public_safety ORDER BY Population DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM county_public_safety where Police_officers >  ( SELECT Police_officers FROM county_public_safety ORDER BY Population DESC LIMIT 1 ) ",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Name FROM county_public_safety ORDER BY Population LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_officers FROM county_public_safety ORDER BY Police_officers LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE grade  =  5",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT count ( distinct T2.lastname )  FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT DISTINCT T2.classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom   =   T2.classroom WHERE grade   =   5",
         "databaseID": "student_1"
      },
      {
         "query": "SELECT LOCATION FROM shop WHERE Open_Year  >  2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year  <  2008",
         "databaseID": "device"
      },
      {
         "query": "select open_year from shop order by open_year",
         "databaseID": "device"
      },
      {
         "query": "SELECT location FROM shop group by location having count ( * )  > 1",
         "databaseID": "device"
      },
      {
         "query": "SELECT shop_name FROM shop WHERE Open_Year  >  2012 or  Open_Year  <  2008",
         "databaseID": "device"
      },
      {
         "query": "SELECT customer_details FROM customers UNION SELECT staff_details FROM staff",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT Staff_ID,Staff_Details from staff",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "select name from airlines",
         "databaseID": "flight_4"
      },
      {
         "query": "select count ( * )  from routes AS T1 JOIN airlines AS T2 ON T2.alid  =  T1.alid WHERE T2.country = 'United States'",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T1.country , T1.name , count ( * )  FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country , T1.name",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code  =  T2.location_code GROUP BY T1.location_code ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT location_name FROM Ref_Locations",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Date_in_Locaton_To FROM Document_Locations",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT T2.location_name ,  T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code   =   T2.location_code GROUP BY T1.location_code ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "cre_Doc_Tracking_DB"
      },
      {
         "query": "SELECT Denomination FROM school WHERE Founded  <  1890 INTERSECT SELECT Denomination FROM school WHERE Founded  >  1900",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT max ( enrollment )  from school",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT school_colors from school where school  =  \"Barker College\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT enrollment from school where school  =  \"Cranbrook School\"",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT school from school order by founded limit 1",
         "databaseID": "school_player"
      },
      {
         "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T2.park_name  =  'Columbia Park'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id   =   T2.park_id WHERE T1.year  =  1907",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT count ( * )  FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  1907 AND T2.park_name  =  'Columbia Park'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT DISTINCT T2.thing_id ,  T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' OR T1.Date_and_Date  <  '2017-06-19 02:59:21'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.Status_of_Thing_Code  =  'Close' and T1.Date_and_Date < '2017-06-19 02:59:21'",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = \"Movies\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T3.id  =  T2.playlist_id WHERE T3.name  =  \"Movies\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT id from  playlists WHERE name  =  \"Movies\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT End FROM appointment ORDER BY START DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT PrepNurse FROM appointment ORDER BY START DESC LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings WHERE Status   =   \"on-hold\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT name FROM buildings WHERE Status   =   \"on-hold\" ORDER BY Stories ASC",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76",
         "databaseID": "products_for_hire"
      },
      {
         "query": "select product_id from products_booked where booked_amount  =  102.76",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id  =  T2.product_id WHERE T1.booked_amount  =  102.76",
         "databaseID": "products_for_hire"
      },
      {
         "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT * FROM track WHERE UnitPrice>1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT avg ( UnitPrice )  FROM track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT avg(T2.stu_gpa) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num  =  T2.stu_num JOIN CLASS AS T3 ON T1.class_code  =  T3.class_code WHERE T3.crs_code  =  'ACCT-211'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM student",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( class_room )  FROM class",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT avg ( STU_GPA )  FROM student",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT STU_LNAME FROM student where STU_FNAME  =  \"William\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY credit_score desc LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT cust_name FROM customer ORDER BY acc_bal desc LIMIT 1",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"rem\" EXCEPT SELECT T3.staff_first_name ,  T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = \"aut\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT staff_first_name ,  staff_last_name FROM staff",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id  =  T2.product_id AND T1.reported_by_staff_id  =  T3.staff_id WHERE T2.product_name  =  \"rem\"",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT product_name from product",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT T1.product_name from product as T1 join problems as T2 on T1.product_id  =  T2.product_id  group by T2.product_id order by count ( * )  desc limit 3",
         "databaseID": "tracking_software_problems"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( * )  FROM cinema WHERE capacity   > =    300",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT name FROM cinema WHERE capacity   > =    300",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT LOCATION FROM cinema WHERE capacity   > =    300",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT * FROM cinema order by capacity desc limit 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT openning_year FROM cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T3.order_id  =  T2.order_id GROUP BY T1.customer_id ORDER BY sum(T3.order_quantity) DESC LIMIT 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT  T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id JOIN order_items AS T3 ON T3.order_id   =   T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT  T1.customer_name ,  T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id   =   T2.customer_id JOIN order_items AS T3 ON T3.order_id   =   T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity )  DESC LIMIT 1",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_address FROM customers WHERE customer_name  =  \"Cleo\"",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_email FROM customers WHERE customer_name  =  \"Cleo\" AND customer_phone  =  \"1-202-928-5395\"",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT customer_number FROM customers WHERE customer_name  =  \"Cleo\"",
         "databaseID": "customers_and_products_contacts"
      },
      {
         "query": "SELECT aid ,  name FROM Aircraft ORDER BY distance DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distance FROM Aircraft where name  =  'Boeing 747-400'",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distance FROM Aircraft where name  =  'Boeing 737-800'",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Aircraft where distance  =  7120",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT aid FROM Aircraft order by distance desc limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT name FROM Aircraft order by distance desc limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name  FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed < 55",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed < 55",
         "databaseID": "roller_coaster"
      },
      {
         "query": "SELECT Restaurant.ResName ,  sum(Visits_Restaurant.Spent) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum(Visits_Restaurant.Spent) ASC LIMIT 1;",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID WHERE Restaurant.ResName = \"Subway\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID WHERE Restaurant.ResName = \"Honeygrow\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Restaurant.ResName, sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID group by restaurant.resid",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT Restaurant.ResName ,  sum ( Visits_Restaurant.Spent )  FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID  =  Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum ( Visits_Restaurant.Spent )  ASC LIMIT 1",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT patient FROM undergoes ORDER BY dateundergoes DESC limit 1",
         "databaseID": "hospital_1"
      },
      {
         "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( price )  FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Honolulu\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( price )  FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Chicago\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT avg ( price )  FROM Flight WHERE origin   =   \"Los Angeles\" AND destination   =   \"Washington D.C.\"",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT * FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name, T2.text FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT  count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid and T1.name  =  'Iron Man'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT  count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid and T1.name  =  'Celine Dion'",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT address FROM member WHERE age  <  30",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT address FROM member WHERE age  > 40",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT address FROM member WHERE age  <  30 INTERSECT SELECT address FROM member WHERE age  >  40",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Location FROM party",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Party_Theme FROM party",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T1.name, count ( * )  FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid   =   T2.uid GROUP BY T2.uid HAVING count ( * )   >  1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( name )  FROM instructor WHERE id IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( name )  FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT name FROM instructor WHERE id NOT IN  ( SELECT id FROM teaches ) ",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT amount FROM payment ORDER BY amount DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT avg ( amount )  FROM payment",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT max(followers) ,  sum(followers) FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT count ( * )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT sum ( followers )  FROM user_profiles",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT followers FROM user_profiles WHERE name ! = \"Tyler Swift\"",
         "databaseID": "twitter_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code JOIN professor AS T4 ON T2.emp_num  =  T4.emp_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.emp_fname ,  T4.prof_office ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num   =   T2.emp_num JOIN course AS T3 ON T1.crs_code   =   T3.crs_code JOIN professor AS T4 ON T2.emp_num   =   T4.emp_num",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT COUNT ( apid )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT COUNT ( DISTINCT city )  FROM airports",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports GROUP BY city HAVING count ( * )   >  2 ORDER BY count ( * ) ",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(*) ,  city FROM employees WHERE title  =  'IT Staff' GROUP BY city",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE title   =   'IT Staff'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE title   =   'IT Staff' and city = 'Calgary'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM employees WHERE title   =   'IT Staff' and city = 'Edmonton'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT distinct city FROM employees WHERE title  =  'IT Staff'",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum(t1.graduate) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus  =  t2.id WHERE t1.year  =  2004 AND t2.campus  =  \"San Francisco State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t2.campus, sum ( t1.graduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t1.year   =   2004 group by t2.Campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT t2.campus, sum ( t1.undergraduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id  group by t2.Campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT sum ( t1.graduate )  FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus   =   t2.id WHERE t1.year   =   2004 AND t2.campus   =   \"San Francisco State University\"",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code ORDER BY count(*) LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( school_code )  FROM department",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM PROFESSOR",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  desc LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "select DEPT_NAME from department where school_code in  ( SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code   =   T2.dept_code GROUP BY T1.school_code ORDER BY count ( * )  LIMIT 1 ) ",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT headquarters FROM company WHERE name  =  \"BP\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT industry FROM company WHERE name  =  \"BP\"",
         "databaseID": "company_employee"
      },
      {
         "query": "SELECT T2.name ,  sum(T1.show_times_per_day) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id  =  T2.cinema_id GROUP BY T1.cinema_id",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T2.name ,  sum ( T1.show_times_per_day )  FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id   =   T2.cinema_id GROUP BY T1.cinema_id",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T2.name FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id   =   T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum ( T1.show_times_per_day )  DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Name FROM cinema ORDER BY Capacity DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT Name FROM cinema WHERE Location  =  \"County Cork\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.FacID ,  count(*) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.FacID , count ( * )  FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID",
         "databaseID": "activity_1"
      },
      {
         "query": "select count ( * )  from Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "select count ( * )  from Faculty where Sex = 'M'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT amount ,  donator_name FROM endowment ORDER BY amount DESC LIMIT 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT amount  FROM endowment ORDER BY amount DESC LIMIT 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name FROM endowment ORDER BY amount DESC LIMIT 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT donator_name FROM endowment ORDER BY amount ASC LIMIT 1",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT T1.Name ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name ,  T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.Name ,  T3.Code ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.SSN",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Name FROM Scientists ORDER BY SSN",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.Code ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.SSN",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.Code ,  T3.Name ,  T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN  =  T2.Scientist JOIN Projects AS T3 ON T2.Project  =  T3.Code ORDER BY T1.Name ASC",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T2.Name ,  T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID  =  T2.College_ID ORDER BY T2.Name ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID WHERE T1.Name  =  'Saskatchewan School'",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID   =   T2.College_ID ORDER BY T2.Name ASC",
         "databaseID": "decoration_competition"
      },
      {
         "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count(*)  =  1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )    =   1",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT name from station where location  =  \"Glasgow\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT Number_of_Platforms from station where name   =  \"Glasgow Central\"",
         "databaseID": "train_station"
      },
      {
         "query": "SELECT max(Sales_billion) ,  min(Sales_billion) FROM Companies WHERE Industry != \"Banking\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT max ( Profits_billion )   FROM Companies",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Market_Value_billion FROM Companies where name  =  \"JPMorgan Chase\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT Headquarters FROM Companies where name  =  \"General Electric\"",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT NAME FROM Companies ORDER BY Assets_billion DESC LIMIT 1",
         "databaseID": "company_office"
      },
      {
         "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT address_content,city FROM addresses",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city FROM addresses WHERE city IN  (  SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT city FROM addresses WHERE city not IN  (  SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id ) ",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id   =   T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT count ( Account_ID )  from accounts",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Statement_Details from Statements where Statement_ID = '57'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Account_Details from accounts where Account_ID = 61",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT rank ,  sex ,  count ( * )  FROM Faculty WHERE sex  =  \"M\" GROUP BY rank ,  sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT rank ,  sex ,  count ( * )  FROM Faculty GROUP BY rank ,  sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM customers",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_id FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT address FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT city FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT email FROM employees",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape GROUP BY T2.Grape ORDER BY AVG(Price) DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  DESC LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape   =   T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price )  LIMIT 1",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT T2.dept_name ,  T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT count ( * )  FROM professor where prof_high_degree  =  \"Ph.D.\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.dept_name  FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T1.prof_high_degree  =  'Ph.D.' GROUP BY T1.dept_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT order_id ,  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT  customer_id FROM orders ORDER BY date_order_placed LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT customer_id FROM orders ORDER BY date_order_placed desc LIMIT 1",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT order_status FROM orders where customer_id = 11",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT date_order_placed FROM orders where customer_id = 11",
         "databaseID": "tracking_orders"
      },
      {
         "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT avg ( budget_million )  FROM movie",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT avg ( budget_million )  FROM movie where year < 2000",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT avg ( budget_million )  ,  max ( budget_million )  ,  min ( budget_million )  FROM movie WHERE YEAR  <  2000",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT T3.Player_name ,  T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID  =  T2.Coach_ID JOIN player AS T3 ON T1.Player_ID  =  T3.Player_ID",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Coach_ID from player_coach where starting_year  =  2010",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT coach_name from coach as t1 join player_coach as t2 on t1.coach_id  =  t2.coach_id where starting_year  =  2010",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where t2.coach_name  =  \"Jameson Tomas\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where t2.coach_name  =  \"Smith Brown\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T1.Coach_name FROM coach AS T1 JOIN player_coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID where T2.Starting_year  =  2011",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T3.player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID   =   T2.Coach_ID JOIN player AS T3 ON T1.Player_ID   =   T3.Player_ID where T2.coach_name  =  \"Robert Chen\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Date_Claim_Made FROM Claims",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Claim_ID FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
         "databaseID": "insurance_policies"
      },
      {
         "query": "SELECT Name FROM TRACK WHERE Name LIKE '%you%'",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT avg ( Milliseconds )  from Track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT avg ( Bytes )  from Track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT max ( unitprice )  from Track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT emp_fname FROM employee ORDER BY emp_dob LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_HIREDATE FROM employee ORDER BY emp_dob LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT EMP_DOB FROM employee ORDER BY emp_dob LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT t2.unit_of_measure ,  t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code WHERE t1.product_name  =  \"chervil\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t1.product_id,t1.product_name,t1.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code where t1.product_id  = 11",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT t2.product_category_code,t2.product_category_description, t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code   =   t2.product_category_code where t1.product_id  = 11",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( height )  FROM player",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( T1.height )  FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( weight )  FROM player",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT player_id FROM player ORDER BY weight DESC LIMIT 1",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg(budget_million) ,  max(budget_million) ,  min(budget_million) FROM movie WHERE YEAR  <  2000",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT distinct Director FROM movie group by Director",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT Budget_million FROM movie where Title  =  'The Boondock Saints'",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT Budget_million FROM movie order by Budget_million desc limit 1",
         "databaseID": "culture_company"
      },
      {
         "query": "SELECT country FROM customers WHERE first_name = \"Roberto\" AND last_name = \"Almeida\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT country FROM customers WHERE first_name  =  \"Roberto\" AND last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT state FROM customers WHERE first_name  =  \"Roberto\" AND last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT address FROM customers WHERE first_name  =  \"Roberto\" AND last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT company FROM customers WHERE first_name  =  \"Roberto\" AND last_name  =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT first_name,last_name FROM customers WHERE company  =  \"Riotur\" AND first_name ! =  \"Roberto\" AND last_name ! =  \"Almeida\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT t2.amount FROM loan AS T2 JOIN customer AS T1 ON T1.cust_id   =   T2.cust_id WHERE t1.cust_name  =  \"Owen\"",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT t2.team_name ,  t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id ORDER BY t1.founded LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT * FROM university order by founded desc LIMIT 1",
         "databaseID": "university_basketball"
      },
      {
         "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( DISTINCT T1.injury )  FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id   =   T2.id WHERE T2.season  >  2010",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT player from injury_accident where injury  =  \"Hamstring muscle strain in his left thigh\"",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT DISTINCT T2.city FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id WHERE T2.city  =   \"San Francisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT count ( * )  FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id   =   T2.id WHERE T2.city ! =   \"San Francisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT name FROM manufacturers WHERE revenue  >  (SELECT avg(revenue) FROM manufacturers)",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Headquarter  FROM manufacturers WHERE  Name = \"Sony\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Revenue   FROM manufacturers WHERE  Name = \"Creative Labs\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name   FROM manufacturers WHERE  Headquarter = \"Los Angeles\"",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT name   FROM manufacturers   order  by  revenue limit 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT name FROM storm",
         "databaseID": "storm_record"
      },
      {
         "query": "select T1.name,count ( * )  from storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id limit 1",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id   =   T2.storm_id GROUP BY T1.storm_id",
         "databaseID": "storm_record"
      },
      {
         "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT * FROM classroom WHERE capacity  >  50",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT room_number FROM classroom WHERE capacity  >  50",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT count ( distinct room_number )  FROM classroom WHERE capacity  >  50",
         "databaseID": "college_2"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar  <  T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN  hosting_city AS T4 ON T1.city_id   =   T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT city  FROM city  where  City_ID  not  in  (  select  Host_City from hosting_city ) ",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id  =  T4.host_city",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT T2.Mar,T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id  =  T2.city_id WHERE T1.City = \"Hangzhou  (  Zhejiang  ) \"  or T1.City = \"Nantong  (  Jiangsu  ) \"",
         "databaseID": "city_record"
      },
      {
         "query": "SELECT count(T2.friend) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.city FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T1.name   =   'Dan'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT * FROM Person WHERE name   =   'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT stu_fname ,  stu_lname  FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT stu_gpa FROM student WHERE stu_gpa  >  3 ORDER BY stu_dob DESC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT stu_fname ,  stu_lname ,  stu_gpa FROM student WHERE stu_gpa  <  3 ORDER BY stu_dob ASC LIMIT 1",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T2.title ,  T1.rID ,  T1.stars ,  min(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.rID",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT * FROM Movie",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT director FROM Movie WHERE title  =  'Star Wars'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT * FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 1",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT year FROM Movie WHERE title  =  'Gone with the Wind'",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT count(*) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id  =  T2.member_id WHERE T2.level  =  6",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.member_id, count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id group by T1.member_id",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   5",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT count ( * )  FROM purchase AS T1 JOIN member AS T2 ON T1.member_id   =   T2.member_id WHERE T2.level   =   6",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T2.bedroom_count  >  4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.apt_number FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT T2.bathroom_count FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id   =   T2.apt_id WHERE T2.bedroom_count  >  4",
         "databaseID": "apartment_rentals"
      },
      {
         "query": "SELECT count(*) ,  sex FROM people WHERE weight  >  85 GROUP BY sex",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )   FROM people WHERE weight  >  85",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )   FROM people WHERE weight  >  85 AND Sex  =  \"F\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT count ( * )   FROM people WHERE weight  >  85 AND Sex  =  \"M\"",
         "databaseID": "candidate_poll"
      },
      {
         "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT  product_details, product_id  from  Products",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT  T1.product_details,T2.order_quantity from  Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT avg(num_of_staff) ,  avg(score) FROM shop",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT avg ( num_of_staff )  ,  avg ( score )  FROM shop",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT * FROM shop order by score desc limit 1",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT count ( * )  from shop where num_of_staff >  ( select num_of_staff from shop where shop_id  =  10 ) ",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT * from shop where address  =   ( select address from shop where shop_id  =  10 )  and shop_id ! =  10",
         "databaseID": "coffee_shop"
      },
      {
         "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT count ( * )  from staff",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT staff_name from staff group by staff_name order by count ( * )  desc limit 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT gender FROM staff GROUP BY gender ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "assets_maintenance"
      },
      {
         "query": "SELECT T1.property_id ,  count(*) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id  =  T2.property_id GROUP BY T1.property_id",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T1.property_id ,  count ( * )  FROM properties AS T1 JOIN residents AS T2 ON T1.property_id   =   T2.property_id GROUP BY T1.property_id",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT property_type_code, property_address from properties where property_id  =  24",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT date_moved_in from residents where resident_id  =  6",
         "databaseID": "local_govt_and_lot"
      },
      {
         "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT destination FROM Flight WHERE flno   =   99",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT distance  FROM Flight WHERE flno   =   99",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid  =  T2.aid WHERE T1.flno  =  99",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT sportname FROM Sportsinfo WHERE onscholarship  =  'Y' GROUP BY sportname ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT count ( distinct sportname )   FROM Sportsinfo WHERE onscholarship  =  \"Y\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT distinct sportname  FROM Sportsinfo WHERE onscholarship  =  \"Y\"",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT sportname  FROM Sportsinfo  WHERE onscholarship  =  \"Y\" GROUP BY sportname ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "game_1"
      },
      {
         "query": "SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t1.customer_name  =  \"Maudie Kertzmann\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT payment_method FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT DISTINCT address_type FROM customer_addresses",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT COUNT ( customer_id )  FROM customers",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT city FROM airports ORDER BY elevation DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT elevation FROM airports ORDER BY elevation DESC LIMIT 1",
         "databaseID": "flight_4"
      },
      {
         "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from person where gender  =  'female' and age < 40",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from person where gender  =  'male'",
         "databaseID": "network_2"
      },
      {
         "query": "select count ( * )  from person where age < 40 and gender  =  'male'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars  =  4",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars   =   4",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT stars  FROM Rating where rID = 201",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_name ,  document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project'",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_name FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project' order by document_date limit 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id   =   T2.project_id WHERE T2.project_details   =   'Graph Database project' order by document_date limit 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.activity_name ,  count(*) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.activity_name ,  count ( * )  FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID   =   T2.actID GROUP BY T1.actID order by count ( * )  desc limit 1",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "select start_date, start_station_name from trip where id  =  900504",
         "databaseID": "bike_1"
      },
      {
         "query": "select distinct zip_code, bike_id from trip where bike_id  =  454 or bike_id  =  574",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT Document_Details FROM Documents_with_expenses GROUP BY Document_Details ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "cre_Docs_and_Epenses"
      },
      {
         "query": "SELECT T1.name ,  count(*) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id FROM review ORDER BY rating LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.name ,  count ( * )  FROM useracct AS T1 JOIN review AS T2 ON T1.u_id   =   T2.u_id GROUP BY T2.u_id",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT u_id FROM review ORDER BY rank LIMIT 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT name FROM useracct WHERE u_id  =  2",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT avg ( product_price )  FROM products",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   >   ( SELECT avg ( product_price )  FROM products )  ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_name FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products )  ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT product_price FROM products where product_type_code  =   ( SELECT product_type_code  FROM products GROUP BY product_type_code HAVING avg ( product_price )   <   ( SELECT avg ( product_price )  FROM products )  ) ",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT count(DISTINCT instrument) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE title  =  \"Le Pop\"",
         "databaseID": "music_2"
      },
      {
         "query": "SELECT DISTINCT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid   =   T2.songid WHERE title   =   \"Le Pop\"",
         "databaseID": "music_2"
      },
      {
         "query": "SELECT count ( DISTINCT instrument )  FROM instruments AS T1 JOIN songs AS T2 ON T1.songid   =   T2.songid WHERE title   =   \"Baby\"",
         "databaseID": "music_2"
      },
      {
         "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <   (  SELECT min ( salary )  FROM employees WHERE job_id   =   'MK_MAN'  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT salary FROM employees WHERE salary  <   (  SELECT min ( salary )  FROM employees WHERE job_id   =   'MK_MAN'  ) ",
         "databaseID": "hr_1"
      },
      {
         "query": "SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Heathrow\" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Airport_Name  =  \"London Gatwick\"",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT Aircraft FROM aircraft",
         "databaseID": "aircraft"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T2.address_id FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id  =  T2.address_id WHERE T2.city  =  \"Lockmanfurt\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT * FROM Customers where first_name  =  \"Sigrid\" and last_name  =  \"Schmeler\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT Grape ,  Appelation ,  Name FROM WINE WHERE Score  >  93 ORDER BY Name",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT distinct Appelation  FROM WINE WHERE Score  >  93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT distinct state from  WINE WHERE Score  >  93",
         "databaseID": "wine_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id ORDER BY t2.age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM captain as t1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM captain as t1 ORDER BY t1.age LIMIT 1",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.Name like '%Henry%'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id  =  t2.ship_id WHERE t2.Name like '%Henry Dumaresq%'",
         "databaseID": "ship_1"
      },
      {
         "query": "SELECT count(DISTINCT state) FROM college WHERE enr  >  (SELECT avg(enr) FROM college)",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT avg ( enr )  FROM college",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT DISTINCT state FROM college WHERE enr  >   ( SELECT avg ( enr )  FROM college ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT count ( DISTINCT state )  FROM college WHERE enr  >   ( SELECT avg ( enr )  FROM college ) ",
         "databaseID": "soccer_2"
      },
      {
         "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count(customer_id)  <  5",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT channel_code,contact_number FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT channel_code,active_from_date,active_to_date FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id )   <  5",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT min(T1.duration) ,  min(T2.rating) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT max ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( T1.duration ) ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is order by T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT min ( T1.duration )  ,  min ( T2.rating )  ,  T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id   =   T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is",
         "databaseID": "music_1"
      },
      {
         "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Cancelled' OR order_status_code  =  'Paid'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code   =   'Cancelled'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT order_shipping_charges ,  customer_id FROM customer_orders WHERE order_status_code  =  'Paid'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT shipping_method_code  FROM customer_orders WHERE order_status_code  =  'Paid'",
         "databaseID": "customers_campaigns_ecommerce"
      },
      {
         "query": "SELECT count(DISTINCT t1.clubname) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.fname  =  \"Eric\" AND t3.lname  =  \"Tai\"",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT count ( DISTINCT t1.clubname )  FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid WHERE t3.fname   =   \"Eric\" AND t3.lname   =   \"Tai\"",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( * )  from student where stuid not in  ( SELECT t3.stuid FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid   =   t2.clubid JOIN student AS t3 ON t2.stuid   =   t3.stuid ) ",
         "databaseID": "club_1"
      },
      {
         "query": "select count ( * )  from  ( select stuid from member_of_club group by stuid having count ( * )   =  1 ) ",
         "databaseID": "club_1"
      },
      {
         "query": "select lname,fname from student where stuid in  ( select stuid from member_of_club group by stuid having count ( * )   =  1 ) ",
         "databaseID": "club_1"
      },
      {
         "query": "select clubName from club where clubid in  ( select distinct clubid from member_of_club group by stuid having count ( * )   =  1 ) ",
         "databaseID": "club_1"
      },
      {
         "query": "SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT count ( * )  FROM mountain",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT count ( distinct country )  FROM mountain",
         "databaseID": "climbing"
      },
      {
         "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( * )  FROM invoices",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum ( total )  FROM invoices WHERE billing_country  =  \"Germany\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum ( total )  FROM invoices WHERE billing_country  =  \"Norway\"",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( distinct billing_country )  FROM invoices",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT state_province_county ,  country FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT state_province_county  FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT country FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT zip_postcode FROM addresses WHERE zip_postcode LIKE \"4%\"",
         "databaseID": "customers_and_addresses"
      },
      {
         "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT billing_state  FROM invoices WHERE billing_country   =   \"USA\" GROUP BY billing_state ORDER BY COUNT ( * )  DESC LIMIT 1",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT DISTINCT billing_postal_code FROM invoices WHERE billing_state  =   ( SELECT billing_state FROM invoices WHERE billing_country   =   \"USA\" GROUP BY billing_state ORDER BY COUNT ( * )  DESC LIMIT 1 ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT DISTINCT invoice_date FROM invoices WHERE billing_state  =   ( SELECT billing_state FROM invoices WHERE billing_country   =   \"USA\" GROUP BY billing_state ORDER BY COUNT ( * )  DESC LIMIT 1 ) ",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum(market_rate) FROM furniture ORDER BY market_rate DESC LIMIT 2",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT sum ( market_rate )  FROM furniture",
         "databaseID": "manufacturer"
      },
      {
         "query": "SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( project_id )  from Project_Staff",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( staff_id )  from Project_Staff",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT project_id from Project_Staff group by project_id order by count ( staff_id )  DESC limit 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT staff_id from project_staff order by date_from limit 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT date_from from project_staff  where staff_id  =  56.0",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT rank ,  sex ,  count(*) FROM Faculty GROUP BY rank ,  sex",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT count ( * )  FROM Faculty",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  count ( * )  FROM Faculty where sex = 'F'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT  count ( * )  FROM Faculty where rank = 'Professor'",
         "databaseID": "activity_1"
      },
      {
         "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Building FROM DEPARTMENT WHERE Division   =   \"AS\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Room  FROM DEPARTMENT WHERE DName   =   \"Chemistry\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT DPhone  FROM DEPARTMENT WHERE DName  =  \"Biology\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT Room  FROM DEPARTMENT WHERE DName  =  \"Biology\"",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.role_code FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T2.other_details FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code   =   T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id   =   T3.project_id GROUP BY T2.staff_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id JOIN head AS T3 ON T2.head_id   =   T3.head_id WHERE T1.name   =   'Treasury'",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id   =   T2.department_id JOIN head AS T3 ON T2.head_id   =   T3.head_id WHERE T1.name   =   'Homeland Security'",
         "databaseID": "department_management"
      },
      {
         "query": "select * from department where num_employees > 100000",
         "databaseID": "department_management"
      },
      {
         "query": "SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity  >  800",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT capacity from cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT openning_year from cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT location from cinema where name  =  \"Codling\"",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count(*)  >  2",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count ( * )   >  2",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select Start_Date from Policies where Policy_Type_Code  =  'Jurisdiction'",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select end_Date from Policies where Policy_Type_Code  =  'Deputy'",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE city   =   \"San Francisco\"",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE city   =   \"San Francisco\" INTERSECT SELECT station_id FROM status where bikes_available  >  0",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT id FROM station WHERE city   =   \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg ( bikes_available )   >  10",
         "databaseID": "bike_1"
      },
      {
         "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT ( * )  LIMIT 1",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Crime_rate FROM county_public_safety WHERE Name = 'Burnaby'",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Location FROM county_public_safety WHERE Name = 'Campbell River'",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT Police_officers FROM county_public_safety WHERE County_ID = '2'",
         "databaseID": "county_public_safety"
      },
      {
         "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT count ( outcome_code )  from project_outcomes group by outcome_code order by count ( outcome_code )  desc limit 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.project_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.project_details ,  T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id   =   T2.project_id GROUP BY T1.project_id ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "tracking_grants_for_research"
      },
      {
         "query": "SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"advanced database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT course_name from Courses",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT author_id from Courses where course_name  =  \"advanced database\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT personal_name, middle_name, family_name  from Course_Authors_and_Tutors where author_id  =  6",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT  login_name from Course_Authors_and_Tutors where personal_name like \"%Adolf%\" and middle_name like \"%Keira%\" and family_name like \"%Rohan%\"",
         "databaseID": "e_learning"
      },
      {
         "query": "SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE T2.color_description  =  'yellow'",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT COUNT ( DISTINCT color_description )  FROM Ref_Colors",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT product_name FROM Products",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT typical_selling_price FROM Products WHERE product_name  =  \"cumin\"",
         "databaseID": "products_gen_characteristics"
      },
      {
         "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT(*) ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  ASC LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM  (  SELECT T2.MediaTypeId FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId   =   T2.MediaTypeId GROUP BY T2.MediaTypeId ) ",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId  =  T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * )  DESC  LIMIT 1",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( * )  FROM Track",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count(*) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.customer_first_name  =  \"Art\" AND T2.customer_last_name  =  \"Turcotte\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT customer_id from customers WHERE customer_first_name   =   \"Art\" AND customer_last_name   =   \"Turcotte\"",
         "databaseID": "customers_card_transactions"
      },
      {
         "query": "SELECT T1.driverid ,  T1.forename ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION  =  '1' GROUP BY T1.driverid HAVING count(*)  >=  2",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.driverid FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid  =  T2.driverid WHERE POSITION   =   '1' GROUP BY T1.driverid HAVING count ( * )    > =    2",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT driverId FROM drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT driverId, forename, surname FROM drivers",
         "databaseID": "formula_1"
      },
      {
         "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT count ( * )  from injury_accident",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars DESC LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT T2.title ,  T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID   =   T2.mID ORDER BY T1.stars LIMIT 3",
         "databaseID": "movie_1"
      },
      {
         "query": "SELECT roomName FROM Rooms WHERE basePrice  >  ( SELECT avg(basePrice) FROM Rooms );",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Rooms",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT roomName FROM Rooms",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT basePrice FROM Rooms WHERE roomName  =  \"Recluse and defiance\"",
         "databaseID": "inn_1"
      },
      {
         "query": "SELECT Residence FROM player WHERE gender  =  \"M\" INTERSECT SELECT Residence FROM player WHERE gender  =  \"F\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Residence FROM player WHERE gender   =   \"M\" INTERSECT SELECT Residence FROM player WHERE gender   =   \"F\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Sponsor_Name FROM player WHERE Player_name  =  \"Jean Luc Bouché\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT Votes FROM player WHERE player_name  =  \"Niki Ashton\"",
         "databaseID": "riding_club"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id  =  T2.address_id WHERE T1.state_province_county  =  \"Wisconsin\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT COUNT ( * ) , state_province_county FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id   =   T2.address_id GROUP BY state_province_county",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT T2.first_name ,  T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id   =   T2.address_id WHERE T1.state_province_county   =   \"Wisconsin\"",
         "databaseID": "behavior_monitoring"
      },
      {
         "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT capacity FROM stadium where country  =  \"England\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT city FROM stadium where country  =  \"England\"",
         "databaseID": "swimming"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id  =  T2.i_id WHERE T2.rating  >  (SELECT avg(rating) FROM review)",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id order by rating desc limit 1",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT avg ( rating )  FROM review",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id WHERE T2.rating  > 7",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT i_id FROM item where title = 'cup'",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT title FROM item where i_id = 4",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT * FROM item",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT T1.title, T2.rating FROM item AS T1 JOIN review AS T2 ON T1.i_id   =   T2.i_id order by T2.rating",
         "databaseID": "epinions_1"
      },
      {
         "query": "SELECT title ,  film_id FROM film WHERE rental_rate  =  0.99 INTERSECT SELECT T1.title ,  T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count(*)  <  3",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film WHERE rental_rate  =  0.99",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title FROM film  ORDER BY rental_rate DESC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT title  FROM film  INTERSECT SELECT T1.title  FROM film AS T1 JOIN inventory AS T2 ON T1.film_id  =  T2.film_id GROUP BY T1.film_id HAVING count ( * )  < 3",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID WHERE T1.Launched_Year  >  1928",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Launched_Year  >  1928",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Fate Like \"%Lost%\"",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID   =   T2.Ship_ID WHERE T1.Fate Like \"%Lost%\" order by T2.tonnage desc limit 1",
         "databaseID": "ship_mission"
      },
      {
         "query": "SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT distinct ( Volume_ID )  from volume where Weeks_On_Top  =   ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) ",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT distinct ( Song )  from volume where Weeks_On_Top  =   ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) ",
         "databaseID": "music_4"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Alice'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Dan' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT T1.name ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Zach' INTERSECT SELECT T1.name ,   T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name   =   T2.name WHERE T2.friend   =   'Bob'",
         "databaseID": "network_2"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH  <  3 OR width  >  5",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT height  FROM catalog_contents WHERE catalog_entry_name = \"Cola\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 5",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT catalog_entry_name,LENGTH FROM catalog_contents WHERE LENGTH < 5",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT height FROM catalog_contents WHERE catalog_entry_name = \"Fenta Orange\"",
         "databaseID": "product_catalog"
      },
      {
         "query": "SELECT max(Milliseconds) ,  min(Milliseconds) FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT max ( Milliseconds )  FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT min ( Milliseconds )  FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT count ( Composer )  FROM TRACK",
         "databaseID": "chinook_1"
      },
      {
         "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID WHERE T2.Order_Quantity  =  1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "select Product_ID from Order_Items where Order_Quantity  =  1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.Customer_ID FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID   =   T2.Order_ID WHERE T2.Order_Quantity   =   1",
         "databaseID": "cre_Drama_Workshop_Groups"
      },
      {
         "query": "SELECT T1.sales_details ,  T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id  =  T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id   =   T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT T2.transaction_type_code FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id   =   T2.transaction_id WHERE T2.amount_of_transaction  <  3000",
         "databaseID": "tracking_share_transactions"
      },
      {
         "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode  =  T2.screen_mode WHERE t2.Company_name   =   \"Nokia Corporation\" AND T1.Type ! =  \"Text\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT DISTINCT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode  =  T2.screen_mode WHERE t2.Company_name   =   \"Nokia Corporation\" AND T1.Type ! =  \"Text\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT DISTINCT T1.char_cells FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode  =  T2.screen_mode WHERE t2.Company_name   =   \"Nokia Corporation\" AND T1.Type ! =  \"Text\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT DISTINCT T1.used_kb FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode  =  T2.screen_mode WHERE t2.Company_name   =   \"Nokia Corporation\" AND T1.Type ! =  \"Text\"",
         "databaseID": "phone_1"
      },
      {
         "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT COUNT ( * )  FROM Student WHERE Major  =  600",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT MAX ( Age )  FROM Student where Major  =  600",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT MIN ( Age )  FROM Student where Major  =  600",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT sum(Spent) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\";",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT sum ( Spent )  FROM Student JOIN Visits_Restaurant ON Student.StuID  =  Visits_Restaurant.StuID WHERE Student.Fname  =  \"Linda\" AND Student.Lname  =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT * FROM Student where city_code  =   ( select city_code from student where Fname  =  \"Linda\" AND Lname  =  \"Smith\" )  and Fname ! =  \"Linda\" AND Lname ! =  \"Smith\"",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T1.StuID, sum ( T2.Spent )  FROM Student AS T1 JOIN Visits_Restaurant AS T2 where city_code  =   ( select city_code from student where Fname  =  \"Linda\" AND Lname  =  \"Smith\" )  and Fname ! =  \"Linda\" AND Lname ! =  \"Smith\" GROUP BY T1.StuID HAVING sum ( T2.Spent )  >  ( SELECT sum ( Spent )  FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID  =  T2.StuID WHERE T1.Fname  =  \"Linda\" AND T1.Lname  =  \"Smith\" ) ",
         "databaseID": "restaurant_1"
      },
      {
         "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Location FROM party where Party_ID  =  1",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT Number_of_hosts from party where Party_ID  =  3",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT age from host where Host_ID  =  3",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT nationality from host where host_id  =  3",
         "databaseID": "party_host"
      },
      {
         "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name, open_year FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT name, city FROM branch ORDER BY membership_amount DESC LIMIT 3",
         "databaseID": "shop_membership"
      },
      {
         "query": "SELECT DISTINCT T1.fname ,  T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid  =  T2.stuid WHERE T2.Allergy  =  \"Milk\" OR T2.Allergy  =  \"Cat\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT DISTINCT T1.fname  FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid   =   T2.stuid WHERE T2.Allergy   =   \"Milk\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT DISTINCT T1.city_code, T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid   =   T2.stuid WHERE T2.Allergy   =   \"Milk\"",
         "databaseID": "allergy_1"
      },
      {
         "query": "SELECT count(DISTINCT T1.name) ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.Headquarter",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Name FROM Products WHERE Code = 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT Price FROM Products WHERE Code = 1",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT count ( DISTINCT T1.name )  ,  T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer   =   T2.code GROUP BY T2.Headquarter",
         "databaseID": "manufactory_1"
      },
      {
         "query": "SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.policy_type_code  =  \"Deputy\" OR t1.policy_type_code  =  \"Uniform\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "select t2.Customer_ID, t1.Policy_Type_code, t2.Customer_Details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id  =  t2.customer_id",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id   =   t2.customer_id WHERE t1.policy_type_code   =   \"Deputy\" OR t1.policy_type_code   =   \"Uniform\"",
         "databaseID": "insurance_and_eClaims"
      },
      {
         "query": "SELECT T1.campus ,  sum(T2.degrees) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id  =  T2.campus WHERE T1.county  =  \"Orange\" AND T2.year  >=  2000 GROUP BY T1.campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus ,  sum ( T2.degrees )  FROM campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T1.county   =   \"Orange\" AND T2.year   > =    2000 GROUP BY T1.campus",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT Year from degrees  order by Degrees DESC LIMIT 1",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT T1.campus  FROM Campuses AS T1 JOIN degrees AS T2 ON T1.id   =   T2.campus WHERE T2.Degrees =  ( select max ( Degrees )  from degrees ) ",
         "databaseID": "csu_1"
      },
      {
         "query": "SELECT count(*) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id  = T2.customer_id WHERE T2.first_name = \"Rylan\" AND T2.last_name = \"Goodwin\" AND T1.lesson_status_code = \"Completed\";",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT count ( * )  FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id   =  T2.customer_id WHERE T2.first_name  =  \"Rylan\" AND T2.last_name  =  \"Goodwin\" AND T1.lesson_status_code  =  \"Completed\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT customer_status_code from Customers  where first_name  =  \"Rylan\" AND last_name  =  \"Goodwin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT date_of_birth from Customers  where first_name  =  \"Rylan\" AND last_name  =  \"Goodwin\"",
         "databaseID": "driving_school"
      },
      {
         "query": "SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id WHERE T2.player  =  'Walter Samuel'",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT  game_id FROM injury_accident where Player  =  'Walter Samuel'",
         "databaseID": "game_injury"
      },
      {
         "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )  DESC LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * )   LIMIT 1",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT avg ( Age )  FROM STUDENT",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT Major FROM STUDENT where sex  =  \"F\"",
         "databaseID": "voter_2"
      },
      {
         "query": "SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID  =  T2.Location_ID WHERE T1.Address  =  \"660 Shea Crescent\" OR T2.How_to_Get_There  =  \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT Name, Tourist_Attraction_ID FROM Tourist_Attractions WHERE How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Name, t2.Tourist_Attraction_ID FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID   =   T2.Location_ID WHERE T1.Address   =   \"660 Shea Crescent\" OR T2.How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT T2.Name, t2.Tourist_Attraction_ID, t2.Opening_Hours FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID   =   T2.Location_ID WHERE T1.Address   =   \"660 Shea Crescent\" OR T2.How_to_Get_There   =   \"walk\"",
         "databaseID": "cre_Theme_park"
      },
      {
         "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.name_given FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.height FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT avg ( T1.height )  FROM player AS T1 JOIN player_college AS T2 ON T1.player_id   =   T2.player_id JOIN college AS T3 ON T3.college_id   =   T2.college_id WHERE T3.name_full   =   'Yale University'",
         "databaseID": "baseball_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT count ( * )  from customer",
         "databaseID": "sakila_1"
      },
      {
         "query": "select count ( * )  from  ( SELECT * FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ) ",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount )  ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT sum ( amount )  FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id   =   T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount )  ASC LIMIT 1",
         "databaseID": "sakila_1"
      },
      {
         "query": "SELECT Name FROM Projects WHERE Code NOT IN (SELECT Project FROM AssignedTo)",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT t1.Name FROM Projects as t1 join AssignedTo as t2 on t1.Code  =  t2.Project",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Name FROM Projects WHERE Code NOT IN  ( SELECT Project FROM AssignedTo ) ",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Name FROM Projects WHERE Code NOT IN  ( SELECT Project FROM AssignedTo )  order by Hours limit 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.staff_name ,  T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT date_assigned_to  from Staff_Department_Assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_id, date_assigned_from  from Staff_Department_Assignments",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_id, date_assigned_from  from Staff_Department_Assignments order by date_assigned_from desc limit 1",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT staff_name,job_title_code from Staff_Department_Assignments as T1 join Staff as T2 on T1.staff_id  =  T2.staff_id where T1.staff_id  =  '1'",
         "databaseID": "department_store"
      },
      {
         "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects ORDER BY hours DESC LIMIT 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Hours FROM projects where Name  =  'A Magnetic Primer Designer'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT Code FROM projects where Name  =  'A Magnetic Primer Designer'",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT name FROM projects ORDER BY hours LIMIT 1",
         "databaseID": "scientist_1"
      },
      {
         "query": "SELECT T1.institution ,  count(*) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id  =  T2.institution_id GROUP BY T1.institution_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT institution FROM institution",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.institution ,  count ( * )  FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id   =   T2.institution_id GROUP BY T1.institution_id",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT institution, location from institution",
         "databaseID": "protein_institute"
      },
      {
         "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.DEPT_EXTENSION FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num JOIN department AS T3 ON T2.dept_code   =   T3.dept_code WHERE EMP_LNAME = \"Donelly\" or  EMP_LNAME = \"Blalock\"",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T3.SCHOOL_CODE FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num   =   T2.emp_num JOIN department AS T3 ON T2.dept_code   =   T3.dept_code WHERE T3.dept_name  =  'History'",
         "databaseID": "college_1"
      },
      {
         "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO  =  T2.DNO GROUP BY T2.DNO ORDER BY count(*) ASC LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "select count ( * )  from department",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO   =   T2.DNO GROUP BY T2.DNO ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT count ( * )  FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO   =   T2.DNO GROUP BY T2.DNO ORDER BY count ( * )  ASC LIMIT 1",
         "databaseID": "college_3"
      },
      {
         "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id  =  T2.film_id GROUP BY T2.directed_by ORDER BY sum(T1.show_times_per_day) DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT count ( distinct T2.directed_by )  FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id where T1.show_times_per_day>1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT distinct T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id where T1.show_times_per_day>1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT sum ( T1.show_times_per_day )  FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id where t2.directed_by  =  'Bill Schreiner' GROUP BY T2.directed_by",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT sum ( T1.show_times_per_day )  FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id where t2.directed_by  =  'Jesus Salvador Treviño' GROUP BY T2.directed_by",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id   =   T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day )  DESC LIMIT 1",
         "databaseID": "cinema"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = \"Daan\" AND T4.last_name = \"Peeters\";",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id  =  T2.track_id JOIN invoices AS T3 ON T3.id  =  T2.invoice_id JOIN customers AS T4 ON T4.id  =  T3.customer_id WHERE T4.first_name  =  \"Daan\" AND T4.last_name  =  \"Peeters\"",
         "databaseID": "store_1"
      },
      {
         "query": "select id ,milliseconds from tracks group by id",
         "databaseID": "store_1"
      },
      {
         "query": "select unit_price from tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT sum(acc_bal) FROM customer WHERE state  =  'Utah' OR state  =  'Texas'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT avg ( acc_bal )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT distinct acc_type FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT avg ( credit_score )  FROM customer",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT sum ( acc_bal )  FROM customer WHERE state   =   'Utah' OR state   =   'Texas'",
         "databaseID": "loan_1"
      },
      {
         "query": "SELECT origin FROM Flight GROUP BY origin ORDER BY count(*) DESC LIMIT 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( distinct origin )  FROM Flight",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT count ( * )  FROM Flight",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT origin FROM Flight group by origin order by count ( * )  asc limit 1",
         "databaseID": "flight_1"
      },
      {
         "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT mascot FROM school WHERE enrollment  >   ( SELECT avg ( enrollment )  FROM school ) ",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT Location from School where School_name  =  \"Glenn\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT Enrollment from School where School_name  =  \"Culver Community\"",
         "databaseID": "school_finance"
      },
      {
         "query": "SELECT count(*) ,  T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( distinct album_id )  from tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT count ( distinct genre_id )  from tracks",
         "databaseID": "store_1"
      },
      {
         "query": "SELECT genre_id,avg ( unit_price )  from tracks group by genre_id",
         "databaseID": "store_1"
      }
   ]
}